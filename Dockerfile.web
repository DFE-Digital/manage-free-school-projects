# Set the major version of dotnet
ARG DOTNET_VERSION=8.0
# Set the major version of nodejs
ARG NODEJS_VERSION_MAJOR=22

# ==============================================
# Assets Build Stage (Node.js)
# ==============================================
FROM node:${NODEJS_VERSION_MAJOR}-bullseye-slim AS assets
WORKDIR /app
COPY ./Dfe.ManageFreeSchoolProjects/Dfe.ManageFreeSchoolProjects/wwwroot /app
RUN npm ci --ignore-scripts && \
    npm run build

# ==============================================
# .NET SDK Build Stage
# ==============================================
FROM mcr.microsoft.com/dotnet/sdk:${DOTNET_VERSION}-azurelinux3.0 AS build
WORKDIR /build
ARG PROJECT_NAME="Dfe.ManageFreeSchoolProjects"

# Copy csproj files for restore caching
COPY ./${PROJECT_NAME}/${PROJECT_NAME}.API.Contracts.Tests/${PROJECT_NAME}.API.Contracts.Tests.csproj ./${PROJECT_NAME}.API.Contracts.Tests/
COPY ./${PROJECT_NAME}/${PROJECT_NAME}.API.Contracts/${PROJECT_NAME}.API.Contracts.csproj             ./${PROJECT_NAME}.API.Contracts/
COPY ./${PROJECT_NAME}/${PROJECT_NAME}.API.Tests/${PROJECT_NAME}.API.Tests.csproj                     ./${PROJECT_NAME}.API.Tests/
COPY ./${PROJECT_NAME}/${PROJECT_NAME}.API/${PROJECT_NAME}.API.csproj                                 ./${PROJECT_NAME}.API/
COPY ./${PROJECT_NAME}/${PROJECT_NAME}.Data/${PROJECT_NAME}.Data.csproj                               ./${PROJECT_NAME}.Data/
COPY ./${PROJECT_NAME}/${PROJECT_NAME}.Logging/${PROJECT_NAME}.Logging.csproj                         ./${PROJECT_NAME}.Logging/
COPY ./${PROJECT_NAME}/${PROJECT_NAME}.Tests/${PROJECT_NAME}.Tests.csproj                             ./${PROJECT_NAME}.Tests/
COPY ./${PROJECT_NAME}/${PROJECT_NAME}.UserContext.Tests/${PROJECT_NAME}.UserContext.Tests.csproj     ./${PROJECT_NAME}.UserContext.Tests/
COPY ./${PROJECT_NAME}/${PROJECT_NAME}.UserContext/${PROJECT_NAME}.UserContext.csproj                 ./${PROJECT_NAME}.UserContext/
COPY ./${PROJECT_NAME}/${PROJECT_NAME}/${PROJECT_NAME}.csproj                                         ./${PROJECT_NAME}/

# Copy solution file
COPY ./${PROJECT_NAME}/${PROJECT_NAME}.sln .

# Restore
RUN --mount=type=secret,id=github_token dotnet nuget add source --username USERNAME --password $(cat /run/secrets/github_token) --store-password-in-clear-text --name github "https://nuget.pkg.github.com/DFE-Digital/index.json" && \
    dotnet restore ${PROJECT_NAME}.sln

# Copy remaining source code
COPY ./${PROJECT_NAME}/ .

# Build and publish
RUN dotnet build ${PROJECT_NAME}.sln --no-restore -c Release && \
    dotnet publish ./${PROJECT_NAME}/${PROJECT_NAME}.csproj \
      --no-build \
      -c Release \
      -o /app

# Copy entrypoint script
COPY ./script/web-docker-entrypoint.sh /app/docker-entrypoint.sh

# ==============================================
# Runtime Stage
# ==============================================
FROM mcr.microsoft.com/dotnet/aspnet:${DOTNET_VERSION}-azurelinux3.0 AS runtime
WORKDIR /app
LABEL org.opencontainers.image.source="https://github.com/DFE-Digital/manage-free-school-projects"
LABEL org.opencontainers.image.description="Manage Free School Projects - App"
COPY --from=build /app .
COPY --from=assets /app ./wwwroot

# Set permissions and user
RUN chmod +x ./docker-entrypoint.sh
USER $APP_UID
