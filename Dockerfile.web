# Set the major version of dotnet
ARG DOTNET_VERSION=8.0
# Set the major version of nodejs
ARG NODEJS_VERSION_MAJOR=22

# Build frontend assets using node js
FROM "node:${NODEJS_VERSION_MAJOR}-bullseye-slim" AS assets
WORKDIR /app
COPY ./Dfe.ManageFreeSchoolProjects/Dfe.ManageFreeSchoolProjects/wwwroot /app
RUN npm install
RUN npm run build

# Build the app using the dotnet SDK
FROM "mcr.microsoft.com/dotnet/sdk:${DOTNET_VERSION}-azurelinux3.0" AS build
WORKDIR /build
COPY ./Dfe.ManageFreeSchoolProjects/ /build
RUN ["dotnet", "restore", "Dfe.ManageFreeSchoolProjects"]
RUN ["dotnet", "build", "Dfe.ManageFreeSchoolProjects", "--no-restore", "-c", "Release"]
RUN ["dotnet", "publish", "Dfe.ManageFreeSchoolProjects", "--no-build", "-o", "/app"]

# Build a runtime environment
FROM "mcr.microsoft.com/dotnet/aspnet:${DOTNET_VERSION}-azurelinux3.0" AS runtime
WORKDIR /app
LABEL org.opencontainers.image.source="https://github.com/DFE-Digital/manage-free-school-projects"
LABEL org.opencontainers.image.description="Manage Free School Projects - App"
COPY --from=build /app /app
COPY --from=assets /app /app/wwwroot
COPY ./script/web-docker-entrypoint.sh /app/docker-entrypoint.sh
RUN ["chmod", "+x", "/app/docker-entrypoint.sh"]
USER $APP_UID
