@page "/projects/{projectId}/contacts/other-info-contacts-landing-page"
@using Dfe.ManageFreeSchoolProjects.Pages.Project.Contacts;
@using Dfe.ManageFreeSchoolProjects.Pages.Project;
@using Dfe.ManageFreeSchoolProjects.Constants;
@model ContactsSummaryModel

@{
    ViewData["Title"] = $"Contacts";
    var backLink = string.Format(RouteConstants.ProjectOverview, Model.ProjectId);
    var projectManagedByLink = string.Format(RouteConstants.EditProjectManagedByContact, Model.ProjectId);
}

<partial name="_ErrorSummary"/>

@section BeforeMain {
    <div class="govuk-width-container">
        <a href="@backLink" class="govuk-back-link" data-testid="back-button">Back to about the project</a>
    </div>
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">

        <h1 class="govuk-heading-xl" data-testid="contacts-summary-title">
            <span class="govuk-caption-l" data-testid="school-name">@Model.SchoolName</span>
            @ViewData["Title"]
        </h1>

        <div class="govuk-summary-card">
            <div class="govuk-summary-card__title-wrapper">
                <h2 class="govuk-summary-card__title">Project managed by</h2>
                <div class="govuk-summary-card__actions">
                    <a class="govuk-link" href="@projectManagedByLink" data-testid="edit-project-managed-by">
                        Change
                        <span class="govuk-visually-hidden">Project managed by</span>
                    </a>
                </div>
            </div>

            <div class="govuk-summary-card__content">
                <dl class="govuk-summary-list">


                    <div class="govuk-summary-list__row">
                        <dt class="govuk-summary-list__key">
                            Name
                        </dt>
                        <dd class="govuk-summary-list__value" data-testid="project-managed-by-name">
                            @Model.Contacts.Contacts.ProjectManagedBy.Name
                        </dd>

                    </div>
                    <div class="govuk-summary-list__row">
                        <dt class="govuk-summary-list__key">
                            Email address
                        </dt>
                        <dd class="govuk-summary-list__value" data-testid="project-managed-by-email">
                            @Model.Contacts.Contacts.ProjectManagedBy.Email
                        </dd>
                    </div>
                </dl>
            </div>
        </div>

        @{
            foreach (var contactType in ProjectConstants.ContactTypes)
            {
                var contactTypeKebab = StringExtensions.SentenceToKebabCase(contactType);
                var contactTypePascal = @contactType.Replace(" ", "");

                var contact = Model.Contacts.Contacts.GetType().GetProperty(contactTypePascal).GetValue(@Model.Contacts.Contacts, null);

                <div class="govuk-summary-card">
                    <div class="govuk-summary-card__title-wrapper">
                        <h2 class="govuk-summary-card__title">@contactType</h2>
                        <div class="govuk-summary-card__actions">
                            <a class="govuk-link" href="@string.Format(RouteConstants.EditContact, Model.ProjectId, @contactTypeKebab)" data-testid="edit-@contactTypeKebab">
                                Change
                                <span class="govuk-visually-hidden">@contactType</span>
                            </a>
                        </div>
                    </div>

                    <div class="govuk-summary-card__content">
                        <dl class="govuk-summary-list">

                            <div class="govuk-summary-list__row">
                                <dt class="govuk-summary-list__key">
                                    Name
                                </dt>
                                <dd class="govuk-summary-list__value" data-testid="@contactTypeKebab-name">
                                    @contact.GetType().GetProperty("Name").GetValue(contact, null)
                                </dd>

                            </div>
                            <div class="govuk-summary-list__row">
                                <dt class="govuk-summary-list__key">
                                    Email address
                                </dt>
                                <dd class="govuk-summary-list__value" data-testid="@contactTypeKebab-email">
                                    @contact.GetType().GetProperty("Email").GetValue(contact, null)
                                </dd>
                            </div>
                        </dl>
                    </div>
                </div>
            }
        }

    </div>
</div>