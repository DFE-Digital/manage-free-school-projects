@page "/project/create/checkyouranswers"
@using Dfe.ManageFreeSchoolProjects.API.Contracts.Project
@using Dfe.ManageFreeSchoolProjects.Constants
@using Dfe.ManageFreeSchoolProjects.API.Contracts.Project.Tasks
@using static Dfe.ManageFreeSchoolProjects.API.Contracts.Project.ClassType
@using Dfe.ManageFreeSchoolProjects.Pages.Project
@using Microsoft.AspNetCore.Html
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model Dfe.ManageFreeSchoolProjects.Pages.Project.Create.Individual.CheckYourAnswersModel

@{
    ViewData["Title"] = "Check your answers";

    var faithType = Model.Project.FaithType == FaithType.Other ? $"Other - {Model.Project.OtherFaithType}" : Model.Project.FaithType.ToDescription();
    var faithTypeLink = Model.Project.FaithStatus == FaithStatus.None ? RouteConstants.CreateFaithStatus : RouteConstants.CreateFaithType;
}

@section BeforeMain {
    <div class="govuk-width-container">
        <a href="@RouteConstants.CreateProjectAssignedTo" class="govuk-back-link" data-testid="back">Back</a>
    </div>
}

<div class="govuk-grid-row">
    <partial name="_ErrorSummary"/>
    <div class="govuk-grid-column-two-thirds-from-desktop">
        <h1 class="govuk-heading-xl">
            <span class="govuk-caption-l">Creating a new free school project</span>
            Check your answers
        </h1>

        <dl class="govuk-summary-list">

            @if (Model.Project.ProjectCreateMethod == ProjectCreateMethod.CentralRoute)
            {
                @RenderSummaryRow("Project type", Model.Project.ProjectCreateMethod.ToDescription(), RouteConstants.CreateProjectMethod)
                @RenderSummaryRow("Application number", Model.Project.ApplicationNumber, RouteConstants.CreateApplicationNumber)
                @RenderSummaryRow("Application wave", Model.Project.ApplicationWave, RouteConstants.CreateApplicationWave)
            }

            @RenderSummaryRow("Temporary Project ID", Model.Project.ProjectId, RouteConstants.CreateProjectId)
            @RenderSummaryRow("Current free school name", Model.Project.SchoolName, RouteConstants.CreateProjectSchool)

            @if (Model.Project.ProjectCreateMethod != ProjectCreateMethod.CentralRoute)
            {
                @RenderSummaryRow("Region", Model.Project.Region.ToDescription(), RouteConstants.CreateProjectRegion)
                @RenderSummaryRow("Local authority", Model.Project.LocalAuthority, RouteConstants.CreateProjectLocalAuthority)
                @RenderSummaryRow("Trust", Model.Project.TrustName, RouteConstants.CreateProjectSearchTrust)
                @RenderSummaryRow("School type", Model.Project.SchoolType.ToDescription(), RouteConstants.CreateProjectSchoolType)
                @RenderSummaryRow("Nursery", Model.Project.Nursery.ToString(), RouteConstants.CreateClassType)
                @RenderSummaryRow("Sixth form", Model.Project.SixthForm.ToString(), RouteConstants.CreateClassType)
                @RenderSummaryRow("Residential or boarding", Model.Project.ResidentialOrBoarding.ToString(), RouteConstants.CreateClassType)

                if (ProjectConstants.SchoolTypesWithSpecialistProvisions.Contains(Model.Project.SchoolType))
                {
                    @RenderSummaryRow("Alternative provision", Model.Project.AlternativeProvision.ToString(), RouteConstants.CreateClassType)
                    @RenderSummaryRow("Special educational needs", Model.Project.SpecialEducationNeeds.ToString(), RouteConstants.CreateClassType)
                }

                @RenderSummaryRow("School phase", Model.Project.SchoolPhase.ToDescription(), RouteConstants.CreateProjectSchoolPhase)
                @RenderSummaryRow("Age range", Model.Project.AgeRange, RouteConstants.CreateProjectAgeRange)

                if (Model.Project.Nursery == Nursery.Yes)
                {
                    @RenderSummaryRow("Nursery capacity", Model.Project.NurseryCapacity.ToString(), RouteConstants.CreateProjectCapacity)
                }

                @RenderSummaryRow("Reception to year 6 capacity", Model.Project.YRY6Capacity.ToString(), RouteConstants.CreateProjectCapacity)
                @RenderSummaryRow("Year 7 to year 11 capacity", Model.Project.Y7Y11Capacity.ToString(), RouteConstants.CreateProjectCapacity)
                @RenderSummaryRow("Year 12 to year 14 capacity", Model.Project.Y12Y14Capacity.ToString(), RouteConstants.CreateProjectCapacity)

                @RenderSummaryRow("Faith status", Model.Project.FaithStatus.ToString(), RouteConstants.CreateFaithStatus)
                @RenderSummaryRow("Faith type", faithType, faithTypeLink)
                @RenderSummaryRow("Provisional opening date agreed with trust", Model.Project.ProvisionalOpeningDate.ToDateString(), RouteConstants.CreateProjectProvisionalOpeningDate)
                @RenderSummaryRow("Project assigned to", Model.Project.ProjectAssignedToName, RouteConstants.CreateProjectAssignedTo)
                @RenderSummaryRow("Email", Model.Project.ProjectAssignedToEmail, RouteConstants.CreateProjectAssignedTo)
            }
        </dl>

        <h2 class="govuk-heading-m">Now create your project</h2>
        <p>By selecting the Create project button, you are confirming that you have approval to create projects.</p>

        <form method="post" novalidate="">
            <button class="govuk-button" data-module="govuk-button" data-testid="create-project">
                Create project
            </button>
        </form>
    </div>
</div>

@functions {

    private static IHtmlContent RenderSummaryRow(string key, string value, string link, string visuallyHiddenText = "", string testId = "")
    {
        var renderedValue = string.IsNullOrEmpty(value) || value == "NotSet"
            ? "<span class=\"empty\">Empty</span>"
            : value;

        var htmlString = $@"
        <div class=""govuk-summary-list__row"">
            <dt class=""govuk-summary-list__key"">{key}</dt>
            <dd class=""govuk-summary-list__value"" data-testid=""{testId}"">{renderedValue}</dd>
            <dd class=""govuk-summary-list__actions"">
                <a class=""govuk-link"" href=""{link}"">Change<span class=""govuk-visually-hidden"">{visuallyHiddenText}</span></a>
            </dd>
        </div>";

        return new HtmlString(htmlString);
    }

}