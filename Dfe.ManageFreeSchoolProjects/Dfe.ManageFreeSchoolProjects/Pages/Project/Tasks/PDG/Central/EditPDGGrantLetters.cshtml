@page  "/projects/{projectId}/tasks/pdg/central/edit-grant-letters"
@using AngleSharp.Common
@using Dfe.ManageFreeSchoolProjects.API.Contracts.Project.Grants
@using Dfe.ManageFreeSchoolProjects.Constants
@using Dfe.ManageFreeSchoolProjects.TagHelpers
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model Dfe.ManageFreeSchoolProjects.Pages.Project.Tasks.PDG.Central.EditPDGGrantLetters

@{
    ViewData["Title"] = $"Edit Grant Letters - {Model.CurrentFreeSchoolName}";
    var backLink = string.Format(RouteConstants.ViewPDGCentral, Model.ProjectId);

    var initialAndFullGrantLetters = Model.GrantLetters?.Letters.Where(x => x.Type is GrantLetter.LetterType.Initial or GrantLetter.LetterType.Full).ToList();
    var initialGrantLetter = initialAndFullGrantLetters?.SingleOrDefault(x => x.Type is GrantLetter.LetterType.Initial);
    var fullGrantLetter = initialAndFullGrantLetters?.SingleOrDefault(x => x.Type is GrantLetter.LetterType.Full);
}

@section BeforeMain {
    <div role="navigation" class="govuk-width-container">
        <a href=@backLink class="govuk-back-link">Back</a>
    </div>
}

<partial name="_ErrorSummary"/>

<h1 class="govuk-heading-xl" data-testid="title">
    <span class="govuk-caption-l" data-testid="school-name">@Model.CurrentFreeSchoolName</span>
    Edit Grant Letters
</h1>

@{
    if (DoesInitialOrFullGrantLetterHaveData(initialGrantLetter, fullGrantLetter))
    {
        var initialGrantLetterSavedToWorkplaces = initialGrantLetter?.SavedToWorkplacesFolder == true ? "Yes" : "No";
        var fullGrantLetterSavedToWorkplaces = fullGrantLetter?.SavedToWorkplacesFolder == true ? "Yes" : "No";

        <govuk-summary-card id="grant-letters" label="Grant letters">
            <govuk-summary-list>
                <govuk-summary-item label="Date when DfE signed the initial grant letter" asp-for="@initialGrantLetter.LetterDate"/>
                <govuk-summary-item label="Saved the signed initial grant letter in Workplaces folder" asp-for="@initialGrantLetterSavedToWorkplaces"/>
                <govuk-summary-item label="Date when DfE signed the final grant letter" asp-for="@fullGrantLetter.LetterDate"/>
                <govuk-summary-item label="Saved the signed full grant letter in Workplaces folder" asp-for="@fullGrantLetterSavedToWorkplaces"/>
            </govuk-summary-list>
        </govuk-summary-card>

        if (Model.GrantLetters != null)
        {
            var filteredGrantLetters = Model.GrantLetters.Letters.Where(x => x.Type != GrantLetter.LetterType.Initial && x.Type != GrantLetter.LetterType.Full).OrderBy(x => x.Type).ToList();
            
            foreach (var grantLetter in filteredGrantLetters)
            {
                if (grantLetter.LetterDate != null || !string.IsNullOrEmpty(grantLetter.LetterLink))
                {
                    var grantLetterSavedToWorkplaces = grantLetter.SavedToWorkplacesFolder == true ? "Yes" : "No";
                    var variationAsWord = grantLetter.Type.ToDescription().ToLower();

                    <govuk-summary-card id="grant-letters-@variationAsWord-variation" label="Variation letter @grantLetter.Variation">
                        <govuk-summary-list>
                            <govuk-summary-item label="Due date of variation letter" asp-for="@grantLetter.LetterDate"/>
                            <govuk-summary-item label="Saved the variation letter in Workplaces folder" asp-for="@grantLetterSavedToWorkplaces"/>
                        </govuk-summary-list>
                    </govuk-summary-card>
                }
                else
                {
                    <div class="govuk-grid-row">
                        <div class="govuk-grid-column-two-thirds">
                            <form class="govuk-form-group" method="post">
                                <button class="govuk-button" name="action" value="AddVariationLetter">
                                    Add variation letter @grantLetter.Variation
                                </button>
                            </form>
                        </div>
                    </div>

                    return; 
                }
            }
        }
    }
    else
    {
        <div class="govuk-grid-row">
            <div class="govuk-grid-column-two-thirds">
                <form class="govuk-form-group" method="post">
                    <button class="govuk-button" name="action" value="AddGrantLetter">
                        Add grant letter
                    </button>
                </form>
            </div>
        </div>
    }
}

@functions {

    private static bool DoesInitialOrFullGrantLetterHaveData(GrantLetter initialGrantLetter, GrantLetter fullGrantLetter)
    {
        return initialGrantLetter?.LetterDate != null || !string.IsNullOrEmpty(initialGrantLetter?.LetterLink) || initialGrantLetter is { SavedToWorkplacesFolder: not null }
               || fullGrantLetter?.LetterDate != null || !string.IsNullOrEmpty(fullGrantLetter?.LetterLink) || fullGrantLetter is { SavedToWorkplacesFolder: not null };
    }

}