@page "/projects/{projectId}/projectstatus/edit-project-status"
@using Dfe.ManageFreeSchoolProjects.Constants
@using Dfe.ManageFreeSchoolProjects.API.Contracts.Project
@using Dfe.ManageFreeSchoolProjects.Pages.Project.ProjectStatus
@using Dfe.ManageFreeSchoolProjects.TagHelpers
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model Dfe.ManageFreeSchoolProjects.Pages.Project.ProjectStatus.EditProjectStatusModel

@{
    var backlink = string.Format(RouteConstants.ProjectOverview, Model.ProjectId);
    ViewData["Title"] = "Edit Project status - " + $"{Model.Project.ProjectStatus.CurrentFreeSchoolName}";

    var isVisibleToPresumption = Model.Project.ProjectType.Contains("Presumption");
    
    List<ProjectStatusOption> GetProjectStatusOptions()
    {
        var options = new List<ProjectStatusOption>
        {
            new(id: "project-status-application-competition-stage", value: ProjectStatus.ApplicationCompetitionStage, description: ProjectStatus.ApplicationCompetitionStage.ToDescription(), hint: "The special or alternative provision application is being considered.", isVisible: !isVisibleToPresumption, isConditional: false),

            new(id: "project-status-application-stage", value: ProjectStatus.ApplicationStage, description: ProjectStatus.ApplicationStage.ToDescription(), hint: "The school's application is being considered.", isVisible: !isVisibleToPresumption, isConditional: false),

            new(id: "project-status-cancelled", value: ProjectStatus.Cancelled, description: ProjectStatus.Cancelled.ToDescription(), hint: "The project was cancelled in pre-opening.", isVisible: isVisibleToPresumption, isConditional: true, dateInputId: "year-cancelled", dateInputName: "year-cancelled", dateInputLabel: "Date the project was cancelled", dateInputHint: "For example, 27 3 2021", dateInputValueAspFor: Model.CancelledYear),

            new(id: "project-status-closed", value: ProjectStatus.Closed, description: ProjectStatus.Closed.ToDescription(), hint: "The school has closed.", isVisible: isVisibleToPresumption, isConditional: true, dateInputId: "year-closed", dateInputName: "year-closed", dateInputLabel: "Date the school was closed", dateInputHint: "For example, 23 2 2021", dateInputValueAspFor: Model.ClosedYear),

            new(id: "project-status-open", value: ProjectStatus.Open, description: ProjectStatus.Open.ToDescription(), hint: "The school has opened.", isVisible: isVisibleToPresumption, isConditional: false),

            new(id: "project-status-open-not-included", value: ProjectStatus.OpenNotIncludedInFigures, description: ProjectStatus.OpenNotIncludedInFigures.ToDescription(), hint: "For example, this project is not a free school but is using free schools budget.", isVisible: !isVisibleToPresumption, isConditional: false),

            new(id: "project-status-pre-opening", value: ProjectStatus.Preopening, description: ProjectStatus.Preopening.ToDescription(), hint: "The project stage after the application stage.", isVisible: isVisibleToPresumption, isConditional: false),

            new(id: "project-status-pre-opening-not-included", value: ProjectStatus.PreopeningNotIncludedInFigures, description: ProjectStatus.PreopeningNotIncludedInFigures.ToDescription(), hint: "For example, this project is not a free school but is using free schools budget.", isVisible: !isVisibleToPresumption, isConditional: false),

            new(id: "project-status-rejected", value: ProjectStatus.Rejected, description: ProjectStatus.Rejected.ToDescription(), hint: "A Regional Director did not approve the project to move into pre-opening.", isVisible: !isVisibleToPresumption, isConditional: false),

            new(id: "project-status-withdrawn-application", value: ProjectStatus.WithdrawnDuringApplication, description: ProjectStatus.WithdrawnDuringApplication.ToDescription(), hint: "For example, the trust withdrew their application.", isVisible: !isVisibleToPresumption, isConditional: true, dateInputId: "year-withdrawn-application", dateInputName: "year-withdrawn-application", dateInputLabel: "Date the project was withdrawn", dateInputHint: "For example, 23 2 2021", dateInputValueAspFor: Model.WithdrawnApplicationYear),

            new(id: "project-status-withdrawn", value: ProjectStatus.WithdrawnDuringPreOpening, description: ProjectStatus.WithdrawnDuringPreOpening.ToDescription(), hint: "For example, the trust withdrew in the pre-opening stage.", isVisible: isVisibleToPresumption, isConditional: true, dateInputId: "year-withdrawn-preopening", dateInputName: "year-withdrawn-preopening", dateInputLabel: "Date the project was withdrawn", dateInputHint: "For example, 23 2 2021", dateInputValueAspFor: Model.WithdrawnYear)
        };

        return options.Where(option => option.IsVisible).ToList();
    }
}

@section BeforeMain {
    <govuk-back-link href="@backlink" xmlns="http://www.w3.org/1999/html"/>
}

<partial name="_ErrorSummary"/>

<div class="govuk-grid-row">
    <div class="govuk-grid-column-full">
        <h1 class="govuk-heading-xl">
            <span class="govuk-caption-l" data-testid="school-name">@Model.Project.ProjectStatus.CurrentFreeSchoolName</span>
            Edit Project status
        </h1>
        <form method="post">
            
            <div class="govuk-form-group" id="project-status">
                <govuk-radios-list>
                    @foreach (var option in GetProjectStatusOptions())
                    {
                        if (option.IsConditional)
                        {
                            <govuk-radios-list-conditional-item id="@option.Id" value="@option.Value" description="@option.Description" hint="@option.Hint" asp-for="@Model.ProjectStatus" name="project-status">
                                <govuk-date-input id="@option.DateInputId" name="@option.DateInputName" asp-for="@option.DateInputValueAspFor" label="@option.DateInputLabel" hint="@option.DateInputHint"/>
                            </govuk-radios-list-conditional-item>
                        }
                        else
                        {
                            <govuk-radios-list-item id="@option.Id" value="@option.Value" description="@option.Description" hint="@option.Hint" asp-for="@Model.ProjectStatus" name="project-status"/>
                        }
                    }
                </govuk-radios-list>
            </div>

            <button class="govuk-button" data-module="govuk-button" data-testid="save-and-continue">
                Save and continue
            </button>
        </form>
    </div>
</div>