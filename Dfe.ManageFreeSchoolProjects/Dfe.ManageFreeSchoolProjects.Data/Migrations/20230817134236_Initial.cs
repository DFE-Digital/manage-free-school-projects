using System;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace Dfe.ManageFreeSchoolProjects.Data.Migrations
{
    /// <inheritdoc />
    public partial class Initial : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.EnsureSchema(
                name: "mfsp");

            migrationBuilder.CreateTable(
                name: "Basic_Need",
                columns: table => new
                {
                    ProjectID = table.Column<string>(name: "Project ID", type: "varchar(25)", unicode: false, maxLength: 25, nullable: true),
                    Freeschoolname = table.Column<string>(name: "Free school name", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    Phase = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    Postcodeusedhere = table.Column<string>(name: "Postcode used here", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    Primaryplanningareacode = table.Column<string>(name: "Primary planning area code", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    Primaryplanningareaname = table.Column<string>(name: "Primary planning area name", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    Secondaryplanningareacode = table.Column<string>(name: "Secondary planning area code", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    Secondaryplanningareaname = table.Column<string>(name: "Secondary planning area name", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    _201920PrimaryPhasePlanningAreaSSNoplaces = table.Column<string>(name: "2019/20 Primary Phase Planning Area S/S No. places", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    _201920PrimaryPhasePlanningAreaSSplaces = table.Column<string>(name: "2019/20 Primary Phase Planning Area S/S % places", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    _201920SecondaryPhasePlanningAreaSSNoplaces = table.Column<string>(name: "2019/20 Secondary Phase Planning Area S/S No. places", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    _201920SecondaryPhasePlanningAreaSSplaces = table.Column<string>(name: "2019/20 Secondary Phase Planning Area S/S % places", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    _201920PrimaryPhaseLocalAreaSSNoplaces = table.Column<string>(name: "2019/20 Primary Phase Local Area S/S No. places", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    _201920PrimaryPhaseLocalAreaSSplaces = table.Column<string>(name: "2019/20 Primary Phase Local Area S/S % places", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    _201920SecondaryPhaseLocalAreaSSNoplaces = table.Column<string>(name: "2019/20 Secondary Phase Local Area S/S No. places", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    _201920SecondaryPhaseLocalAreaSSplaces = table.Column<string>(name: "2019/20 Secondary Phase Local Area S/S % places", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "BR",
                columns: table => new
                {
                    p_rid = table.Column<string>(type: "varchar(11)", unicode: false, maxLength: 11, nullable: true),
                    RID = table.Column<string>(type: "varchar(11)", unicode: false, maxLength: 11, nullable: true),
                    BudgetRecordsProjectcode = table.Column<string>(name: "Budget Records.Project code", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetRecordsNumberofpupils = table.Column<string>(name: "Budget Records.Number of pupils", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetRecordsProjectname = table.Column<string>(name: "Budget Records.Project name", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetRecordsBudgetID = table.Column<string>(name: "Budget Records.Budget ID", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetRecordsBudgetstage = table.Column<string>(name: "Budget Records.Budget stage", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetRecordsBudgetapprovalprocess = table.Column<string>(name: "Budget Records.Budget approval process", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetRecordsBudgetstatus = table.Column<string>(name: "Budget Records.Budget status", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetRecordsLivebudget = table.Column<string>(name: "Budget Records.Live budget", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetRecordsInflationbasedate = table.Column<DateTime>(name: "Budget Records.Inflation base date", type: "date", nullable: true),
                    BudgetRecordsCostPerPupil = table.Column<string>(name: "Budget Records.Cost Per Pupil", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetRecordsTotalacquisitioncostexcVAT = table.Column<string>(name: "Budget Records.Total acquisition cost ( exc VAT )", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetRecordsVATonfees = table.Column<string>(name: "Budget Records.VAT on fees", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetRecordsAcquisitioncostVAT = table.Column<string>(name: "Budget Records.Acquisition cost VAT", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetRecordsPropertymanagementcosts = table.Column<string>(name: "Budget Records.Property management costs", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetRecordsTotalpropertyfees = table.Column<string>(name: "Budget Records.Total property fees", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetRecordsTotalacquisitionlegalfees = table.Column<string>(name: "Budget Records.Total acquisition legal fees", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetRecordsCCFpropertybudgetuplift = table.Column<string>(name: "Budget Records.CCF property budget uplift", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetRecordsTotalpropertybudgetinclVAT = table.Column<string>(name: "Budget Records.Total property budget ( incl VAT)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetRecordsAcquisitionmanualoverride = table.Column<bool>(name: "Budget Records.Acquisition manual override", type: "bit", nullable: true),
                    BudgetRecordsFinalpropertymodellink = table.Column<string>(name: "Budget Records.Final property model link", type: "varchar(max)", unicode: false, nullable: true),
                    BudgetRecordsConstructionamountincludingsurveys = table.Column<string>(name: "Budget Records.Construction amount , including surveys", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetRecordsICTpassives = table.Column<string>(name: "Budget Records.ICT passives", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetRecordsConstructionamountincludingsurveysVAT = table.Column<string>(name: "Budget Records.Construction amount , including surveys VAT", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetRecordsTechnicalfeessurveysincVAT = table.Column<string>(name: "Budget Records.Technical fees - surveys (inc VAT)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetRecordsTechnicalfeesincVAT = table.Column<string>(name: "Budget Records.Technical fees (inc VAT)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetRecordsLegalfeesconstructionadviceIncVAT = table.Column<string>(name: "Budget Records.Legal fees - construction advice (Inc VAT)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetRecordsTotalconstructionbudget = table.Column<string>(name: "Budget Records.Total construction budget", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetRecordsConstructionmanualoverride = table.Column<bool>(name: "Budget Records.Construction manual override", type: "bit", nullable: true),
                    BudgetRecordsFixturesFurnitureandEquipment = table.Column<string>(name: "Budget Records.Fixtures, Furniture, and Equipment", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetRecordsFixturesFurnitureandEquipmentVAT = table.Column<string>(name: "Budget Records.Fixtures, Furniture, and Equipment VAT", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetRecordsTotalFFEbudget = table.Column<string>(name: "Budget Records.Total FF&E budget", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetRecordsFFEmanualoverride = table.Column<bool>(name: "Budget Records.FF&E manual override", type: "bit", nullable: true),
                    BudgetRecordsICTequipmenthardware = table.Column<string>(name: "Budget Records.ICT equipment/hardware", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetRecordsICTactives = table.Column<string>(name: "Budget Records.ICT actives", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetRecordsBroadband = table.Column<string>(name: "Budget Records.Broadband", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetRecordsTotalICTbudget = table.Column<string>(name: "Budget Records.Total ICT budget", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetRecordsICTbudgetmanualoverride = table.Column<bool>(name: "Budget Records.ICT budget manual override", type: "bit", nullable: true),
                    BudgetRecordsTemporaryconstructionincludingsurveys = table.Column<string>(name: "Budget Records.Temporary construction, including surveys", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetRecordsTemporarysiteICTpassives = table.Column<string>(name: "Budget Records.Temporary site ICT passives", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetRecordsTemporaryconstructionincludingsurveysVAT = table.Column<string>(name: "Budget Records.Temporary construction, including surveys - VAT", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetRecordsTemporarysitestechnicalfeesincVAT = table.Column<string>(name: "Budget Records.Temporary sites - technical fees (inc VAT)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetRecordsICTdecantcost = table.Column<string>(name: "Budget Records.ICT decant cost", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetRecordsTemporarysitestechnicalfeessurveysincVAT = table.Column<string>(name: "Budget Records.Temporary sites - technical fees surveys (inc VAT)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetRecordsTemporarysiteslegalfeesconstructionadviceincVAT = table.Column<string>(name: "Budget Records.Temporary sites - legal fees construction advice (inc VAT)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetRecordsCostofreinstatementoftemporaryaccommodation = table.Column<string>(name: "Budget Records.Cost of re-instatement of temporary accommodation", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetRecordsTotaltemporarysitesbudget = table.Column<string>(name: "Budget Records.Total temporary sites budget", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetRecordsTemporarysitemanualoverride = table.Column<bool>(name: "Budget Records.Temporary site manual override", type: "bit", nullable: true),
                    BudgetRecordsFinaltechnicalfundingallocationmodellink = table.Column<string>(name: "Budget Records.Final technical funding allocation model link", type: "varchar(max)", unicode: false, nullable: true),
                    BudgetRecordsThirdpartycontributions = table.Column<string>(name: "Budget Records.Third party contributions", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetRecordsTotalcapitalbudget = table.Column<string>(name: "Budget Records.Total capital budget", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetRecordsTotalmanualoverride = table.Column<bool>(name: "Budget Records.Total manual override", type: "bit", nullable: true),
                    BudgetRecordsConstructionrevenue = table.Column<string>(name: "Budget Records.Construction revenue", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetRecordsAqusitionRevenue = table.Column<string>(name: "Budget Records.Aqusition Revenue", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetRecordsTotalrevenue = table.Column<string>(name: "Budget Records.Total revenue", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetRecordsRevenuemanualoverride = table.Column<bool>(name: "Budget Records.Revenue manual override", type: "bit", nullable: true),
                    BudgetRecordsFPMUapprovername = table.Column<string>(name: "Budget Records.FPMU (approver name)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetRecordsFPMUdecisiondate = table.Column<DateTime>(name: "Budget Records.FPMU (decision date)", type: "date", nullable: true),
                    BudgetRecordsFPMUapprovalstatus = table.Column<string>(name: "Budget Records.FPMU (approval status)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetRecordsIndependentPropertyReviewerapprovername = table.Column<string>(name: "Budget Records.Independent Property Reviewer (approver name)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetRecordsIndependentPropertyReviewerdecisiondate = table.Column<DateTime>(name: "Budget Records.Independent Property Reviewer (decision date)", type: "date", nullable: true),
                    BudgetRecordsIndependentPropertyReviewerapprovalstatus = table.Column<string>(name: "Budget Records.Independent Property Reviewer (approval status)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetRecordsIndependentTechnicalCostQSapprovername = table.Column<string>(name: "Budget Records.Independent Technical & Cost QS (approver name)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetRecordsIndependentTechnicalCostQSdecisiondate = table.Column<DateTime>(name: "Budget Records.Independent Technical & Cost QS (decision date)", type: "date", nullable: true),
                    BudgetRecordsIndependentTechnicalCostQSapprovalstatus = table.Column<string>(name: "Budget Records.Independent Technical & Cost QS (approval status)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetRecordsEFACapitalRegionalDDapprovername = table.Column<string>(name: "Budget Records.EFA Capital Regional DD (approver name)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetRecordsEFACapitalRegionalDDdecisiondate = table.Column<DateTime>(name: "Budget Records.EFA Capital Regional DD (decision date)", type: "date", nullable: true),
                    BudgetRecordsEFACapitalRegionalDDapprovalstatus = table.Column<string>(name: "Budget Records.EFA Capital Regional DD (approval status)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetRecordsIndependentFinanceReviewerapprovername = table.Column<string>(name: "Budget Records.Independent Finance Reviewer (approver name)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetRecordsIndependentFinanceReviewerdecisiondate = table.Column<DateTime>(name: "Budget Records.Independent Finance Reviewer (decision date)", type: "date", nullable: true),
                    BudgetRecordsIndependentFinanceReviewerapprovalstatus = table.Column<string>(name: "Budget Records.Independent Finance Reviewer (approval status)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetRecordsLocatedInvestmentCommitteeapprovername = table.Column<string>(name: "Budget Records.Located Investment Committee (approver name)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetRecordsLocatedInvestmentCommitteedecisiondate = table.Column<DateTime>(name: "Budget Records.Located Investment Committee (decision date)", type: "date", nullable: true),
                    BudgetRecordsLocatedInvestmentCommitteeapprovalstatus = table.Column<string>(name: "Budget Records.Located Investment Committee (approval status)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetRecordsFSCHeadofFinanceapprovername = table.Column<string>(name: "Budget Records.FSC Head of Finance (approver name)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetRecordsFSCHeadofFinancedecisiondate = table.Column<DateTime>(name: "Budget Records.FSC Head of Finance (decision date)", type: "date", nullable: true),
                    BudgetRecordsFSCHeadofFinanceapprovalstatus = table.Column<string>(name: "Budget Records.FSC Head of Finance (approval status)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetRecordsFSCDivisionalDirectorapprovername = table.Column<string>(name: "Budget Records.FSC Divisional Director (approver name)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetRecordsFSCDivisionalDirectordecisiondate = table.Column<DateTime>(name: "Budget Records.FSC Divisional Director (decision date)", type: "date", nullable: true),
                    BudgetRecordsFSCDivisionalDirectorapprovalstatus = table.Column<string>(name: "Budget Records.FSC Divisional Director (approval status)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetRecordsMinisterapprovername = table.Column<string>(name: "Budget Records.Minister (approver name)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetRecordsMinisterdecisiondate = table.Column<DateTime>(name: "Budget Records.Minister (decision date)", type: "date", nullable: true),
                    BudgetRecordsMinisterapprovalstatus = table.Column<string>(name: "Budget Records.Minister (approval status)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetRecordsFinalCARCCFFormlink = table.Column<string>(name: "Budget Records.Final CAR / CCF Form link", type: "varchar(max)", unicode: false, nullable: true),
                    BudgetRecordsWIPnotes = table.Column<string>(name: "Budget Records.WIP notes", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "BS",
                columns: table => new
                {
                    p_rid = table.Column<string>(type: "varchar(11)", unicode: false, maxLength: 11, nullable: true),
                    RID = table.Column<string>(type: "varchar(11)", unicode: false, maxLength: 11, nullable: true),
                    BudgetsummaryBudgetstagesummary = table.Column<string>(name: "Budget summary.Budget stage summary", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetsummaryPreCARfundingrequired = table.Column<string>(name: "Budget summary.Pre CAR funding required", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetsummaryPreCARfundingapproved = table.Column<string>(name: "Budget summary.Pre CAR funding approved", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetsummaryCostPlan1approved = table.Column<string>(name: "Budget summary.Cost Plan 1 approved", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetsummaryCostPlan2approved = table.Column<string>(name: "Budget summary.Cost Plan 2 approved", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetsummaryCostsatpracticalcompletionapproved = table.Column<string>(name: "Budget summary.Costs at practical completion approved", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetsummaryFinalaccountsagreed = table.Column<string>(name: "Budget summary.Final accounts agreed", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetsummaryIstheLAmakingafinancialcontributiontowardsthisproject = table.Column<string>(name: "Budget summary.Is the LA making a financial contribution towards this project?", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetsummaryLAContributiontype = table.Column<string>(name: "Budget summary.LA Contribution type", type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true),
                    BudgetsummaryOthercontributiontype = table.Column<string>(name: "Budget summary.Other contribution type", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetsummaryCapitalcosttier = table.Column<string>(name: "Budget summary.Capital cost tier", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetsummaryStorebudgetrecordname = table.Column<string>(name: "Budget summary.Store budget record name", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetsummaryBudgetapprovaldate = table.Column<DateTime>(name: "Budget summary.Budget approval date", type: "date", nullable: true),
                    BudgetsummaryBudgetapprovalprocess = table.Column<string>(name: "Budget summary.Budget approval process", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetsummaryAcquisitionbudget = table.Column<string>(name: "Budget summary.Acquisition budget", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetsummaryConstructionbudget = table.Column<string>(name: "Budget summary.Construction budget", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetsummaryFFEbudget = table.Column<string>(name: "Budget summary.FF&E budget", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetsummaryICTbudget = table.Column<string>(name: "Budget summary.ICT budget", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetsummaryTemporarySitebudget = table.Column<string>(name: "Budget summary.Temporary Site budget", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetsummaryTotalcapitalbudget = table.Column<string>(name: "Budget summary.Total capital budget", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BudgetsummaryTotalRevenue = table.Column<string>(name: "Budget summary.Total Revenue", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "constructData",
                columns: table => new
                {
                    ProjectID = table.Column<string>(name: "Project ID", type: "varchar(max)", unicode: false, nullable: false),
                    HoTAgreedforsiteforMainSchoolBuildingActual = table.Column<string>(name: "HoT Agreed for site for Main School Building (Actual)", type: "varchar(max)", unicode: false, nullable: true),
                    TemporaryaccommodationfirstreadyforoccupationForecast = table.Column<string>(name: "Temporary accommodation first ready for occupation (Forecast)", type: "varchar(max)", unicode: false, nullable: true),
                    TemporaryaccommodationfirstreadyforoccupationActual = table.Column<string>(name: "Temporary accommodation first ready for occupation (Actual)", type: "varchar(max)", unicode: false, nullable: true),
                    MainSchoolBuildingfirstreadyforoccupationForecast = table.Column<string>(name: "Main School Building first ready for occupation (Forecast)", type: "varchar(max)", unicode: false, nullable: true),
                    MainSchoolBuildingfirstreadyforoccupationActual = table.Column<string>(name: "Main School Building first ready for occupation (Actual)", type: "varchar(max)", unicode: false, nullable: true),
                    SiteidentifiedformainschoolbuildingActual = table.Column<string>(name: "Site identified for main school building (Actual)", type: "varchar(max)", unicode: false, nullable: true),
                    CapitalProjectRAG = table.Column<string>(name: "Capital Project RAG", type: "varchar(max)", unicode: false, nullable: true),
                    PlanningSiteID = table.Column<string>(name: "Planning Site ID", type: "varchar(max)", unicode: false, nullable: true),
                    Isthisthemainplanningrecord = table.Column<string>(name: "Is this the main planning record?", type: "varchar(max)", unicode: false, nullable: true),
                    Planningrisk = table.Column<string>(name: "Planning risk", type: "varchar(max)", unicode: false, nullable: true),
                    Planningdecision = table.Column<string>(name: "Planning decision", type: "varchar(max)", unicode: false, nullable: true),
                    SiteID = table.Column<string>(name: "Site ID", type: "varchar(max)", unicode: false, nullable: true),
                    TypeofSite = table.Column<string>(name: "Type of Site", type: "varchar(max)", unicode: false, nullable: true),
                    Sitestatus = table.Column<string>(name: "Site status", type: "varchar(max)", unicode: false, nullable: true),
                    Postcodeofsite = table.Column<string>(name: "Postcode of site", type: "varchar(max)", unicode: false, nullable: true),
                    PracticalCompletionCertificateissueddateA = table.Column<string>(name: "Practical Completion Certificate issued date (A)", type: "varchar(max)", unicode: false, nullable: true),
                    RegionalHead = table.Column<string>(name: "Regional Head", type: "varchar(max)", unicode: false, nullable: true),
                    ProjectDirector = table.Column<string>(name: "Project Director", type: "varchar(max)", unicode: false, nullable: true),
                    ProjectManager = table.Column<string>(name: "Project Manager", type: "varchar(max)", unicode: false, nullable: true),
                    TemporaryRAGrating = table.Column<string>(name: "Temporary RAG rating", type: "varchar(max)", unicode: false, nullable: true),
                    CapitalProjectRAGRatingCommentary = table.Column<string>(name: "Capital Project RAG Rating Commentary", type: "varchar(max)", unicode: false, nullable: true),
                    TemporaryRAGRatingCommentary = table.Column<string>(name: "Temporary RAG Rating Commentary", type: "varchar(max)", unicode: false, nullable: true),
                    DateofHoTsecuredontemporaryaccommodationsiteifrequired = table.Column<string>(name: "Date of HoT secured on temporary accommodation site, if required", type: "varchar(max)", unicode: false, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "Construction",
                columns: table => new
                {
                    p_rid = table.Column<string>(type: "varchar(11)", unicode: false, maxLength: 11, nullable: true),
                    RID = table.Column<string>(type: "varchar(11)", unicode: false, maxLength: 11, nullable: true),
                    SiteDetailsMinimumgrossarearequiredm2 = table.Column<string>(name: "Site Details.Minimum gross area required m2", type: "varchar(6)", unicode: false, maxLength: 6, nullable: true),
                    SiteDetailsAreaofexistingbuildingsm2TemporaryArea = table.Column<string>(name: "Site Details.Area of existing buildings m2 : Temporary Area", type: "varchar(8)", unicode: false, maxLength: 8, nullable: true),
                    SiteDetailsAreaofexistingbuildingsm2PermanentArea = table.Column<string>(name: "Site Details.Area of existing buildings m2 : Permanent Area", type: "varchar(8)", unicode: false, maxLength: 8, nullable: true),
                    SiteDetailsMaximumgrossarearequiredm2 = table.Column<string>(name: "Site Details.Maximum gross area required m2", type: "varchar(6)", unicode: false, maxLength: 6, nullable: true),
                    SiteDetailsTypeofworks = table.Column<string>(name: "Site Details.Type of works", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SiteDetailsLocation = table.Column<string>(name: "Site Details.Location", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SiteDetailsAreaofnewbuildm2 = table.Column<string>(name: "Site Details.Area of new build m2", type: "varchar(6)", unicode: false, maxLength: 6, nullable: true),
                    SiteDetailsAreaofmajorrefurbishmentm2 = table.Column<string>(name: "Site Details.Area of major refurbishment m2", type: "varchar(6)", unicode: false, maxLength: 6, nullable: true),
                    SiteDetailsAreaofrefurbishmentm2 = table.Column<string>(name: "Site Details.Area of refurbishment m2", type: "varchar(6)", unicode: false, maxLength: 6, nullable: true),
                    SiteDetailsAreaofminorrefurbishmentm2 = table.Column<string>(name: "Site Details.Area of minor refurbishment m2", type: "varchar(6)", unicode: false, maxLength: 6, nullable: true),
                    SiteDetailsAreaofrefreshm2 = table.Column<string>(name: "Site Details.Area of refresh m2", type: "varchar(6)", unicode: false, maxLength: 6, nullable: true),
                    SiteDetailsAreaofhardstandingm2 = table.Column<string>(name: "Site Details.Area of hard standing m2", type: "varchar(6)", unicode: false, maxLength: 6, nullable: true),
                    SiteDetailsAreaofMUGAplayingfieldsm2 = table.Column<string>(name: "Site Details.Area of MUGA / playing fields m2", type: "varchar(6)", unicode: false, maxLength: 6, nullable: true),
                    SiteDetailsAreaoftemporaryaccommodationrequiredm2 = table.Column<string>(name: "Site Details.Area of temporary accommodation required m2", type: "varchar(6)", unicode: false, maxLength: 6, nullable: true),
                    SiteDetailsSprinklers = table.Column<string>(name: "Site Details.Sprinklers", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SiteDetailsSprinklerInstallationType = table.Column<string>(name: "Site Details.Sprinkler Installation Type", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SiteDetailsSprinklerType = table.Column<string>(name: "Site Details.Sprinkler Type", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ICTDetailsICTprocurementrouteagreedwithTrust = table.Column<DateTime>(name: "ICT Details.ICT procurement route agreed with Trust", type: "date", nullable: true),
                    ICTDetailsBroadbandordered = table.Column<DateTime>(name: "ICT Details.Broadband ordered", type: "date", nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "Contracts",
                columns: table => new
                {
                    p_rid = table.Column<string>(type: "varchar(11)", unicode: false, maxLength: 11, nullable: true),
                    RID = table.Column<string>(type: "varchar(11)", unicode: false, maxLength: 11, nullable: true),
                    ContractIsthistheprincipalconstructioncontractforthepermanentschoolbuilding = table.Column<string>(name: "Contract.Is this the principal construction contract for the permanent school building?", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ContractContractID = table.Column<string>(name: "Contract.Contract ID", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ContractID = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ContractContractreference = table.Column<string>(name: "Contract.Contract reference", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ContractContractType = table.Column<string>(name: "Contract.Contract Type", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ContractContractCategory = table.Column<string>(name: "Contract.Contract Category", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ContractSiteID = table.Column<string>(name: "Contract.Site ID", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ContractNameofsite = table.Column<string>(name: "Contract.Name of site", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ContractAddressofsite = table.Column<string>(name: "Contract.Address of site", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ContractPostcodeofsite = table.Column<string>(name: "Contract.Postcode of site", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ContractContractProcurementStatus = table.Column<string>(name: "Contract.Contract Procurement Status", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ContractDateofClosedcontractstatus = table.Column<DateTime>(name: "Contract.Date of Closed contract status", type: "date", nullable: true),
                    ContractReasonforClosedcontractstatus = table.Column<string>(name: "Contract.Reason for Closed contract status", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ContractDeliveryparty = table.Column<string>(name: "Contract.Delivery party", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ContractNameofDeliveryParty = table.Column<string>(name: "Contract.Name of Delivery Party", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ContractDateofSDBCsubmission = table.Column<DateTime>(name: "Contract.Date of SDBC submission", type: "date", nullable: true),
                    ContractDateofSDBCapproval = table.Column<DateTime>(name: "Contract.Date of SDBC approval", type: "date", nullable: true),
                    ContractLinktoApprovedBC = table.Column<string>(name: "Contract.Link to Approved BC", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ContractDateDevelopmentagreementsigned = table.Column<DateTime>(name: "Contract.Date Development agreement signed", type: "date", nullable: true),
                    ContractLinktoDevelopmentagreement = table.Column<string>(name: "Contract.Link to Development agreement", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ContractDeliverypartyifother = table.Column<string>(name: "Contract.Delivery party - if other", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ContractContractingparty = table.Column<string>(name: "Contract.Contracting party", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ContractGIFAforactualcontractm2 = table.Column<string>(name: "Contract.GIFA for actual contract (m2)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ContractTypeofworks = table.Column<string>(name: "Contract.Type of works", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ContractProportionofNewBuild = table.Column<string>(name: "Contract.Proportion of New Build", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ContractProcurementroute = table.Column<string>(name: "Contract.Procurement route", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ContractProcurementOption = table.Column<string>(name: "Contract.Procurement Option", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ContractAwardOption = table.Column<string>(name: "Contract.Award Option", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ContractSiteVisit = table.Column<DateTime>(name: "Contract.Site Visit", type: "date", nullable: true),
                    ContractBiddersDay = table.Column<DateTime>(name: "Contract.Bidders Day", type: "date", nullable: true),
                    ContractModular = table.Column<string>(name: "Contract.Modular", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ContractIsBIMrequiredfortheproject = table.Column<string>(name: "Contract.Is BIM required for the project?", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ContractHavetheEIRsbeenissued = table.Column<string>(name: "Contract.Have the EIRs been issued?", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ContractHavetheAIRsbeenissued = table.Column<string>(name: "Contract.Have the AIRs been issued?", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ContractHastheBEPbeenreceivedfromthecontractor = table.Column<string>(name: "Contract.Has the BEP been received from the contractor?", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ContractContractorworkingtoBEPEIRsthroughoutdesignconstructionhandover = table.Column<string>(name: "Contract.Contractor working to BEP & EIRs throughout design, construction & handover?", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ContractContractor = table.Column<string>(name: "Contract.Contractor", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ContractTypeofcontractorappointment = table.Column<string>(name: "Contract.Type of contractor appointment", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ContractTypeofcontractorappointmentifother = table.Column<string>(name: "Contract.Type of contractor appointment if other", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ContractEarlyworkscostsexclVAT = table.Column<string>(name: "Contract.Early works costs (excl VAT)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ContractContractbudgetvalueexclVAT = table.Column<string>(name: "Contract.Contract budget value (excl VAT)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ContractContractAwardvalueexclVAT = table.Column<string>(name: "Contract.Contract Award value (excl VAT)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ContractLatestcontractvalueexclVAT = table.Column<string>(name: "Contract.Latest contract value (excl VAT)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ContractFinalcontractvalueexclVAT = table.Column<string>(name: "Contract.Final contract value (excl VAT)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ContractPrincipaldesigner = table.Column<string>(name: "Contract.Principal designer", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ContractRAGrating = table.Column<string>(name: "Contract.RAG rating", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ContractPlannedprogrammesetwithTA = table.Column<DateTime>(name: "Contract.Planned programme set with TA", type: "date", nullable: true),
                    ContractContractnotes = table.Column<string>(name: "Contract.Contract notes", type: "varchar(max)", unicode: false, nullable: true),
                    ContractExternalTechnicalAdviserappointedactual = table.Column<DateTime>(name: "Contract.External Technical Adviser appointed (actual)", type: "date", nullable: true),
                    ContractFeasibiltyreportstarted = table.Column<DateTime>(name: "Contract.Feasibilty report started", type: "date", nullable: true),
                    ContractFeasibilityreportsubmittedtoESFAactual = table.Column<DateTime>(name: "Contract.Feasibility report submitted to ESFA (actual)", type: "date", nullable: true),
                    ContractFeasibilityreportapprovedbyESFAactual = table.Column<DateTime>(name: "Contract.Feasibility report approved by ESFA (actual)", type: "date", nullable: true),
                    ContractFeasibilityreportlink = table.Column<string>(name: "Contract.Feasibility report link", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ContractProcurementstartTenderIssuedforecast = table.Column<DateTime>(name: "Contract.Procurement start / Tender Issued (forecast)", type: "date", nullable: true),
                    ContractProcurementstartTenderIssuedactual = table.Column<DateTime>(name: "Contract.Procurement start / Tender Issued (actual)", type: "date", nullable: true),
                    ContractTenderreportsubmittedtoEFAforecast = table.Column<DateTime>(name: "Contract.Tender report submitted to EFA (forecast)", type: "date", nullable: true),
                    ContractTenderreportsubmittedtoEFAactual = table.Column<DateTime>(name: "Contract.Tender report submitted to EFA (actual)", type: "date", nullable: true),
                    ContractTenderreportapprovedbyEFAforecast = table.Column<DateTime>(name: "Contract.Tender report approved by EFA (forecast)", type: "date", nullable: true),
                    ContractTenderreportapprovedbyEFAactual = table.Column<DateTime>(name: "Contract.Tender report approved by EFA (actual)", type: "date", nullable: true),
                    ContractTenderreportlink = table.Column<string>(name: "Contract.Tender report link", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ContractContractorappointedSPMPCSAEWAOtherforecast = table.Column<DateTime>(name: "Contract.Contractor appointed (SPM / PCSA / EWA / Other) (forecast)", type: "date", nullable: true),
                    ContractContractorappointedSPMPCSAEWAOtheractual = table.Column<DateTime>(name: "Contract.Contractor appointed (SPM / PCSA / EWA / Other) (actual)", type: "date", nullable: true),
                    ContractPlanningapplicationID = table.Column<string>(name: "Contract.Planning application ID", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ContractPlanningapplicationsubmittedforecast = table.Column<DateTime>(name: "Contract.Planning application submitted (forecast)", type: "date", nullable: true),
                    ContractPlanningapplicationsubmittedactual = table.Column<DateTime>(name: "Contract.Planning application submitted (actual)", type: "date", nullable: true),
                    ContractPlanningdecisiongrantedforecast = table.Column<DateTime>(name: "Contract.Planning decision granted (forecast)", type: "date", nullable: true),
                    ContractPlanningdecisiongrantedactual = table.Column<DateTime>(name: "Contract.Planning decision granted (actual)", type: "date", nullable: true),
                    ContractContractorsproposalssubmittedforecast = table.Column<DateTime>(name: "Contract.Contractor’s proposals submitted (forecast)", type: "date", nullable: true),
                    ContractContractorsproposalssubmittedactual = table.Column<DateTime>(name: "Contract.Contractor’s proposals submitted (actual)", type: "date", nullable: true),
                    ContractContractorsproposalsapprovedforecast = table.Column<DateTime>(name: "Contract.Contractor’s proposals approved (forecast)", type: "date", nullable: true),
                    ContractContractorsproposalsapprovedactual = table.Column<DateTime>(name: "Contract.Contractor’s proposals approved (actual)", type: "date", nullable: true),
                    ContractEnterintomaincontractforecast = table.Column<DateTime>(name: "Contract.Enter into main contract (forecast)", type: "date", nullable: true),
                    ContractEnterintomaincontractactual = table.Column<DateTime>(name: "Contract.Enter into main contract (actual)", type: "date", nullable: true),
                    ContractHSEF10notificationofconstructionprojectformsubmittedactual = table.Column<DateTime>(name: "Contract.HSE F10 notification of construction project form submitted (actual)", type: "date", nullable: true),
                    ContractStartonsiteforecast = table.Column<DateTime>(name: "Contract.Start on site (forecast)", type: "date", nullable: true),
                    ContractStartonsiteactual = table.Column<DateTime>(name: "Contract.Start on site (actual)", type: "date", nullable: true),
                    ContractConstructionSiteOpen = table.Column<string>(name: "Contract.Construction Site Open", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    Contract1stsectionalcompletionforecast = table.Column<DateTime>(name: "Contract.1st sectional completion (forecast)", type: "date", nullable: true),
                    Contract1stsectionalcompletionactual = table.Column<DateTime>(name: "Contract.1st sectional completion (actual)", type: "date", nullable: true),
                    Contract2ndsectionalcompletionforecast = table.Column<DateTime>(name: "Contract.2nd sectional completion (forecast)", type: "date", nullable: true),
                    Contract2ndsectionalcompletionactual = table.Column<DateTime>(name: "Contract.2nd sectional completion (actual)", type: "date", nullable: true),
                    Contract3rdsectionalcompletionforecast = table.Column<DateTime>(name: "Contract.3rd sectional completion (forecast)", type: "date", nullable: true),
                    Contract3rdsectionalcompletionactual = table.Column<DateTime>(name: "Contract.3rd sectional completion (actual)", type: "date", nullable: true),
                    ContractSectionalcompletioncertificateslink = table.Column<string>(name: "Contract.Sectional completion certificates link", type: "varchar(500)", unicode: false, maxLength: 500, nullable: true),
                    ContractAllworkscompleteinclstatutorycertificationissuedforecast = table.Column<DateTime>(name: "Contract.All works complete (incl statutory certification issued) (forecast)", type: "date", nullable: true),
                    ContractAllworkscompleteinclstatutorycertificationissuedactual = table.Column<DateTime>(name: "Contract.All works complete (incl statutory certification issued) (actual)", type: "date", nullable: true),
                    ContractPracticalcompletioncertificateissuedforecast = table.Column<DateTime>(name: "Contract.Practical completion certificate issued (forecast)", type: "date", nullable: true),
                    ContractPracticalcompletioncertificateissuedactual = table.Column<DateTime>(name: "Contract.Practical completion certificate issued (actual)", type: "date", nullable: true),
                    ContractPracticalcompletioncertificatelink = table.Column<string>(name: "Contract.Practical completion certificate link", type: "varchar(500)", unicode: false, maxLength: 500, nullable: true),
                    ContractFinalaccountsagreedforecast = table.Column<DateTime>(name: "Contract.Final accounts agreed (forecast)", type: "date", nullable: true),
                    ContractFinalaccountsagreedactual = table.Column<DateTime>(name: "Contract.Final accounts agreed (actual)", type: "date", nullable: true),
                    ContractMakinggooddefectsreinstatementworkscompleteforecast = table.Column<DateTime>(name: "Contract.Making good defects / reinstatement works complete (forecast)", type: "date", nullable: true),
                    ContractMakinggooddefectsreinstatementworkscompleteactual = table.Column<DateTime>(name: "Contract.Making good defects / reinstatement works complete (actual)", type: "date", nullable: true),
                    ContractEndofdefectsliabilitycertificateslink = table.Column<string>(name: "Contract.End of defects liability certificates link", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "FAL",
                columns: table => new
                {
                    p_rid = table.Column<string>(type: "varchar(11)", unicode: false, maxLength: 11, nullable: true),
                    RID = table.Column<string>(type: "varchar(11)", unicode: false, maxLength: 11, nullable: true),
                    FundingApprovalLettersID = table.Column<string>(name: "Funding Approval Letters.ID", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FundingApprovalLettersFundingapprovalletterissueddate = table.Column<DateTime>(name: "Funding Approval Letters.Funding approval letter issued date", type: "date", nullable: true),
                    FundingApprovalLettersLinktofundingapprovalletter = table.Column<string>(name: "Funding Approval Letters.Link to funding approval letter", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FundingApprovalLettersFundingapprovalletterrecipient = table.Column<string>(name: "Funding Approval Letters.Funding approval letter recipient", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FundingApprovalLettersTotalconstruction = table.Column<string>(name: "Funding Approval Letters.Total construction", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FundingApprovalLettersTotalFFEbudget = table.Column<string>(name: "Funding Approval Letters.Total FF&E budget", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FundingApprovalLettersTotalICTbudget = table.Column<string>(name: "Funding Approval Letters.Total ICT budget", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FundingApprovalLettersTotaltemporarysitebudget = table.Column<string>(name: "Funding Approval Letters.Total temporary site budget", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FundingApprovalLettersFundingapprovalletterTotalvalue = table.Column<string>(name: "Funding Approval Letters.Funding approval letter Total value", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "FS_KIM",
                columns: table => new
                {
                    p_rid = table.Column<string>(type: "varchar(11)", unicode: false, maxLength: 11, nullable: true),
                    RID = table.Column<string>(type: "varchar(11)", unicode: false, maxLength: 11, nullable: true),
                    GeneralDetailsURN = table.Column<string>(name: "General Details.URN", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    GeneralDetailsLAESTAB = table.Column<string>(name: "General Details.LAESTAB", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    GeneralDetailsProjectName = table.Column<string>(name: "General Details.Project Name", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    GeneralDetailsAcademyURN = table.Column<string>(name: "General Details.Academy URN", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    GeneralDetailsAcademyLAESTAB = table.Column<string>(name: "General Details.Academy LAESTAB", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    GeneralDetailsAcademyUKPRN = table.Column<string>(name: "General Details.Academy UKPRN", type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    GeneralDetailsAcademyName = table.Column<string>(name: "General Details.Academy Name", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    GeneralDetailsProjectstatus = table.Column<string>(name: "General Details.Project status", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    Rebrokeragestatus = table.Column<string>(name: "Re-brokerage status", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    GeneralDetailsAcademyStatus = table.Column<string>(name: "General Details.Academy Status", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    GeneralDetailsRebrokereddate = table.Column<DateTime>(name: "General Details.Re-brokered date", type: "date", nullable: true),
                    GeneralDetailsLocalAuthority = table.Column<string>(name: "General Details.Local Authority", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    GeneralDetailsRSCRegion = table.Column<string>(name: "General Details.RSC Region", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    GeneralDetailsPhase = table.Column<string>(name: "General Details.Phase", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    GeneralDetailsRouteofProject = table.Column<string>(name: "General Details.Route of Project", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "KAI",
                columns: table => new
                {
                    p_rid = table.Column<string>(type: "varchar(11)", unicode: false, maxLength: 11, nullable: true),
                    RID = table.Column<string>(type: "varchar(11)", unicode: false, maxLength: 11, nullable: true),
                    ApplicationDetailsLinktopreregistration = table.Column<string>(name: "Application Details.Link to pre-registration", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ApplicationDetailsHowdoestheproposerdescribetheirgroup = table.Column<string>(name: "Application Details.How does the proposer describe their group?", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ApplicationDetailsIstheproposaladirectresultofarequestfromgroups = table.Column<string>(name: "Application Details.Is the proposal a direct result of a request from groups", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ApplicationDetailsHasthegroupappliedbeforetoopenthisschoolwhetherunderthecurrentnameoranothername = table.Column<string>(name: "Application Details.Has the group  applied before to open this school, whether under the current name or another name?", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ApplicationDetailsIfyesandthenameoftheschoolwasdifferentstatewhattheoriginalnamewas = table.Column<string>(name: "Application Details.If yes and the name of the school was different, state what the original name was:", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ApplicationDetailsIfyeswhendidthegrouplastapply = table.Column<string>(name: "Application Details.If yes, when did the group last apply?", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ApplicationDetailsHastheproposergroupestablishedatrustinaccordancewiththeDfEmodelarticlesofassociation = table.Column<string>(name: "Application Details.Has the proposer group established a trust in accordance with the DfE model articles of association?", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ApplicationDetailsCompanyname = table.Column<string>(name: "Application Details.Company name", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ApplicationDetailsCompanyaddress = table.Column<string>(name: "Application Details.Company address", type: "varchar(max)", unicode: false, nullable: true),
                    ApplicationDetailsCompanyregistrationnumber = table.Column<string>(name: "Application Details.Company registration number", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ApplicationDetailsDatewhencompanywasincorporated = table.Column<DateTime>(name: "Application Details.Date when company was incorporated", type: "date", nullable: true),
                    ApplicationDetailsNumberofcompanymembers = table.Column<string>(name: "Application Details.Number of company members", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ApplicationDetailsNumberoftrustees = table.Column<string>(name: "Application Details.Number of trustees", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ApplicationDetailsProposedchairoftrustees = table.Column<string>(name: "Application Details.Proposed chair of trustees", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ApplicationDetailsIsanyoneconnectedwiththisapplicationrelatedinanyway = table.Column<string>(name: "Application Details.Is anyone connected with this application related in any way?", type: "varchar(max)", unicode: false, nullable: true),
                    ApplicationDetailsIfthetrustrunsacademiesfreeschoolshasanythingchangedinthetrustwithinthelastmonth = table.Column<string>(name: "Application Details.If the trust runs academies/free schools, has anything changed in the trust within the last month?", type: "varchar(max)", unicode: false, nullable: true),
                    ApplicationDetailsNamesanduniquereferencenumbersforeachofthetrustsopenschools = table.Column<string>(name: "Application Details.Names and unique reference number(s) for each of the trust's open schools", type: "varchar(max)", unicode: false, nullable: true),
                    ApplicationDetailsForindependentschoolsnameratinganduniquereferencenumber = table.Column<string>(name: "Application Details.For independent schools, name, rating and unique reference number", type: "varchar(max)", unicode: false, nullable: true),
                    ApplicationDetailsForindependentschoolslinktothemostrecentinspectionreport = table.Column<string>(name: "Application Details.For independent schools, link to the most recent inspection report", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ApplicationDetailsHowmanyapplicationsistheproposergroupseekingtoopeninthisapplicationround = table.Column<string>(name: "Application Details.How many applications is the proposer group seeking to open in this application round?", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ApplicationDetailsDoesthegrouprunaschoolofthesamephaseandtype = table.Column<string>(name: "Application Details.Does the group run a school of the same phase and type?", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ApplicationDetailsDoesthegrouprunaschoolinthelocalarea = table.Column<string>(name: "Application Details.Does the group run a school in the local area?", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ApplicationDetailsArethereanyconnectionswithotherorganisationswithintheUKoroverseas = table.Column<string>(name: "Application Details.Are there any connections with other organisations within the UK or overseas?", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ApplicationDetailsDetailsofconnectionswithorganisationswithintheUKoroverseas = table.Column<string>(name: "Application Details.Details of connections with organisations within the UK or overseas", type: "varchar(max)", unicode: false, nullable: true),
                    ApplicationDetailsArethereanyconnectionswithreligiousorganisationsorinstitutions = table.Column<string>(name: "Application Details.Are there any connections with religious organisations or institutions?", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ApplicationDetailsDetailsofanyconnectionswithreligiousorganisationsorinstitutions = table.Column<string>(name: "Application Details.Details of any connections with religious organisations or institutions", type: "varchar(max)", unicode: false, nullable: true),
                    ApplicationDetailsAreanymembersofthegroupalsoinvolvedinotherapplicationstoopenfreeschoolsinthisround = table.Column<string>(name: "Application Details.Are any members of the group also involved in other applications to open free schools in this round?", type: "varchar(max)", unicode: false, nullable: true),
                    ApplicationDetailsDidtheproposergroupseekhelpandsupportfromtheNewSchoolsNetwork = table.Column<string>(name: "Application Details.Did the proposer group seek help and support from the New Schools Network?", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ApplicationDetailsDidtheproposergrouphavehelpandsupportfromanothercompanyororganisation = table.Column<string>(name: "Application Details.Did the proposer group have help and support from another company or organisation?", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ApplicationDetailsIfyesstatethenamessoftheorganisationssanddescribetheirrole = table.Column<string>(name: "Application Details.If yes, state the names (s) of the organisations(s) and describe their role", type: "varchar(max)", unicode: false, nullable: true),
                    ApplicationDetailsInwhichlocalauthoritydistrictisyourpreferredlocation = table.Column<string>(name: "Application Details.In which local authority district is your preferred location?", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ApplicationDetailsIfanurseryisproposedstatenurserypupilcapacityandagerange = table.Column<string>(name: "Application Details.If a nursery is proposed, state nursery pupil capacity and age range", type: "varchar(max)", unicode: false, nullable: true),
                    ApplicationDetailsIfanurseryisproposedpleasestatepupilcapacity = table.Column<string>(name: "Application Details.If a nursery is proposed, please state pupil capacity", type: "varchar(max)", unicode: false, nullable: true),
                    ApplicationDetailsIfanurseryisproposedpleasestatetheagerange = table.Column<string>(name: "Application Details.If a nursery is proposed, please state the age range", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ApplicationDetailsIfasixthformisproposedpleasestatethesixthformpupilcapacity = table.Column<string>(name: "Application Details.If a sixth form is proposed, please state the sixth form pupil capacity", type: "varchar(max)", unicode: false, nullable: true),
                    ApplicationDetailsMaximumcapacityofthefreeschoolincluding1619sixthformbutnotincludingnursery = table.Column<string>(name: "Application Details.Maximum capacity of the free school (including 16-19/sixth form, but not including nursery)", type: "varchar(max)", unicode: false, nullable: true),
                    ApplicationDetailsStateyeartheschoolwillhavetheopeningandPANnumber = table.Column<string>(name: "Application Details.State year the school will have the opening and PAN number", type: "varchar(max)", unicode: false, nullable: true),
                    ApplicationDetailsWilltheschoolhaveadistinctivepedagogyoreducationalphilosophyforexampleSteinerorMontessori = table.Column<string>(name: "Application Details.Will the school have a distinctive pedagogy or educational philosophy, for example Steiner or Montessori?", type: "varchar(max)", unicode: false, nullable: true),
                    ApplicationDetailsIstheproposergroupplanningtocontractthemanagementoftheschooltoanotherorganisation = table.Column<string>(name: "Application Details.Is the proposer group planning to contract the management of the school to another organisation?", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ApplicationDetailsHastheprincipaldesignatebeenidentified = table.Column<string>(name: "Application Details.Has the principal designate been identified?", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ApplicationDetailsTimededicatedtofaithstudieshoursperweek = table.Column<string>(name: "Application Details.Time dedicated to faith studies (hours per week)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ApplicationDetailsTimededicatedtominoritylanguagestudyhoursperweek = table.Column<string>(name: "Application Details.Time dedicated to minority language study (hours per week)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ApplicationDetailsWilltheschooloperateanonstandardschoolday = table.Column<string>(name: "Application Details.Will the school operate a non-standard school day?", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ApplicationDetailsWilltheschooloperateanonstandardschoolyear = table.Column<string>(name: "Application Details.Will the school operate a non-standard school year?", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ApplicationDetailsWilltheschooladoptthenationalcurriculum = table.Column<string>(name: "Application Details.Will the school adopt the national curriculum?", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ApplicationDetailsWilltheschooladoptnonstandardtermsandconditionsforteachers = table.Column<string>(name: "Application Details.Will the school adopt non-standard terms and conditions for teachers?", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ApplicationDetailsWilltheschoolemployteacherswithoutqualifiedteacherstatusQTS = table.Column<string>(name: "Application Details.Will the school employ teachers without qualified teacher status (QTS)?", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ApplicationDetailsAnyotherfreedomstheschoolintendstouse = table.Column<string>(name: "Application Details.Any other freedoms the school intends to use", type: "varchar(max)", unicode: false, nullable: true),
                    ApplicationDetailsDatespecificationissuedbyLA = table.Column<DateTime>(name: "Application Details.Date specification issued by LA", type: "date", nullable: true),
                    ApplicationDetailsLinktospecification = table.Column<string>(name: "Application Details.Link to specification", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ApplicationDetailsLAclosingdateforreceiptofproposals = table.Column<DateTime>(name: "Application Details.LA closing date for receipt of proposals", type: "date", nullable: true),
                    ApplicationDetailsDateproposalsexpected = table.Column<DateTime>(name: "Application Details.Date proposals expected", type: "date", nullable: true),
                    ApplicationDetailsDateLAdecisionexpected = table.Column<DateTime>(name: "Application Details.Date LA decision expected", type: "date", nullable: true),
                    ApplicationDetailsProposalsreceived = table.Column<string>(name: "Application Details.Proposals received", type: "varchar(max)", unicode: false, nullable: true),
                    AssessmentDetailsInterviewpanel = table.Column<string>(name: "Assessment Details.Interview panel", type: "varchar(max)", unicode: false, nullable: true),
                    AssessmentDetailsInterviewAttendees = table.Column<string>(name: "Assessment Details.Interview Attendees", type: "varchar(max)", unicode: false, nullable: true),
                    AssessmentDetailsPostpaperrecommendationtotheMinister = table.Column<string>(name: "Assessment Details.Post-paper recommendation to the Minister", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    AssessmentDetailsRSCpaperbasedrecommendation = table.Column<string>(name: "Assessment Details.RSC paper-based recommendation", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    AssessmentDetailsMinisterialpostpaperdecision = table.Column<string>(name: "Assessment Details.Ministerial post-paper decision", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    AssessmentDetailsPostinterviewrecommendationtotheMinister = table.Column<string>(name: "Assessment Details.Post-interview recommendation to the Minister", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    AssessmentDetailsRSCpostinterviewrecommendation = table.Column<string>(name: "Assessment Details.RSC post-interview recommendation", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    AssessmentDetailsMinisterialpostinterviewdecision = table.Column<string>(name: "Assessment Details.Ministerial post-interview decision", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    AssessmentDetailsEqualitiesimpactassessment = table.Column<string>(name: "Assessment Details.Equalities impact assessment", type: "varchar(max)", unicode: false, nullable: true),
                    AssessmentDetailsDateofLAFSpresumptionassessment = table.Column<DateTime>(name: "Assessment Details.Date of LA FS presumption assessment", type: "date", nullable: true),
                    AssessmentDetailsDfErepresentationonFSpresumptionpanel = table.Column<string>(name: "Assessment Details.DfE representation on FS presumption panel?", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    AssessmentDetailsNameofDfEindividualsonFSpresumptionassessmentpanel = table.Column<string>(name: "Assessment Details.Name of DfE individual(s) on FS presumption assessment panel", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    AssessmentDetailsDateofRSCHTBpresumptiondecisionmeeting = table.Column<DateTime>(name: "Assessment Details.Date of RSC/HTB presumption decision meeting", type: "date", nullable: true),
                    AssessmentDetailsWassuccessfulFSpresumptionsponsorrecommendedbytheLA = table.Column<string>(name: "Assessment Details.Was successful FS presumption sponsor recommended by the LA?", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    AssessmentCriteriaFinalScore = table.Column<string>(name: "Assessment Criteria.Final Score", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    AssessmentCriteriaFinalrecommendation = table.Column<string>(name: "Assessment Criteria.Final recommendation", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    AssessmentCriteriaAreyourecommendingapprovalofthe1619element = table.Column<string>(name: "Assessment Criteria.Are you recommending approval of the 16-19 element?", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    AssessmentCriteriaRecommendationcommentary = table.Column<string>(name: "Assessment Criteria.Recommendation commentary", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    AssessmentCriteriaNurseryrecommendation = table.Column<string>(name: "Assessment Criteria.Nursery recommendation", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    AssessmentCriteriaNurseryrecommendationcommentary = table.Column<string>(name: "Assessment Criteria.Nursery recommendation commentary", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    AssessmentCriteriaConditions = table.Column<string>(name: "Assessment Criteria.Conditions", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionBNeedFinaltotalpercentagescoreforSectionB = table.Column<string>(name: "Section B - Need.Final total percentage score for Section B", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionBNeedNeedapplicationassessmentscore = table.Column<string>(name: "Section B - Need.Need application assessment score", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionBNeedNeedsummarycomments = table.Column<string>(name: "Section B - Need.Need summary comments", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionBNeedPostcode = table.Column<string>(name: "Section B - Need.Postcode", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionBNeedB11Siftassessmentscore = table.Column<string>(name: "Section B - Need.B1.1 Sift assessment score", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionBNeedB11IndicatorsCore = table.Column<string>(name: "Section B - Need.B1.1 Indicators - Core", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionBNeedB11IndicatorsContributory = table.Column<string>(name: "Section B - Need.B1.1 Indicators - Contributory", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionBNeedB11Siftassessmentcomments = table.Column<string>(name: "Section B - Need.B1.1 Sift assessment comments", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionBNeedB11Applicationassessmentscore = table.Column<string>(name: "Section B - Need.B1.1 Application assessment score", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionBNeedB11IstheLocalAuthoritysupportiveoftheschool = table.Column<string>(name: "Section B - Need.B1.1 Is the Local Authority supportive of the school?", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionBNeedB11CharacteristicsOld = table.Column<string>(name: "Section B - Need.B1.1 Characteristics (Old)", type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true),
                    SectionBNeedB11CharacteristicsWave14 = table.Column<string>(name: "Section B - Need.B1.1 Characteristics (Wave 14)", type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true),
                    SectionBNeedB11Applicationassessmentcomments = table.Column<string>(name: "Section B - Need.B1.1 Application assessment comments", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionBNeedB11Scoreafterinterview = table.Column<string>(name: "Section B - Need.B1.1 Score after interview", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionBNeedB11Interviewcommentsevidencethatledtoascorechangeifapplicable = table.Column<string>(name: "Section B - Need.B1.1 Interview comments – evidence that led to a score change (if applicable)", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionBNeedB11Finalscore = table.Column<string>(name: "Section B - Need.B1.1 Final score", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionBNeedB12Siftassessmentscore = table.Column<string>(name: "Section B - Need.B1.2 Sift assessment score", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionBNeedB12Siftassessmentcomments = table.Column<string>(name: "Section B - Need.B1.2 Sift assessment comments", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionBNeedB12Applicationassessmentscore = table.Column<string>(name: "Section B - Need.B1.2 Application assessment score", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionBNeedB12Applicationassessmentcomments = table.Column<string>(name: "Section B - Need.B1.2 Application assessment comments", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionBNeedB12Scoreafterinterview = table.Column<string>(name: "Section B - Need.B1.2 Score after interview", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionBNeedB12Interviewcommentsevidencethatledtoascorechangeifapplicable = table.Column<string>(name: "Section B - Need.B1.2 Interview comments – evidence that led to a score change (if applicable)", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionBNeedB12Finalscore = table.Column<string>(name: "Section B - Need.B1.2 Final score", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionBNeedB11619Siftassessmentscore = table.Column<string>(name: "Section B - Need.B1(16-19) Sift assessment score", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionBNeedB11619Indicators = table.Column<string>(name: "Section B - Need.B1(16-19) Indicators", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionBNeedB11619Siftassessmentcomments = table.Column<string>(name: "Section B - Need.B1(16-19) Sift assessment comments", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionBNeedB11619Applicationassessmentscore = table.Column<string>(name: "Section B - Need.B1(16-19) Application assessment score", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionBNeedB11619IstheLocalAuthoritysupportiveoftheschool = table.Column<string>(name: "Section B - Need.B1(16-19) Is the Local Authority supportive of the school?", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionBNeedB11619CharacteristicsOld = table.Column<string>(name: "Section B - Need.B1(16-19) Characteristics (Old)", type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true),
                    SectionBNeedB11619CharacteristicsWave14 = table.Column<string>(name: "Section B - Need.B1(16-19) Characteristics (Wave 14)", type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true),
                    SectionBNeedB11619Applicationassessmentcomments = table.Column<string>(name: "Section B - Need.B1(16-19) Application assessment comments", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionBNeedB11619Scoreafterinterview = table.Column<string>(name: "Section B - Need.B1(16-19) Score after interview", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionBNeedB11619Interviewcommentsevidencethatledtoascorechangeifapplicable = table.Column<string>(name: "Section B - Need.B1(16-19) Interview comments – evidence that led to a score change (if applicable)", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionBNeedB11619Finalscore = table.Column<string>(name: "Section B - Need.B1(16-19) Final score", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionBNeedB2Siftassessmentscore = table.Column<string>(name: "Section B - Need.B2 Sift assessment score", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionBNeedB2IndicatorsCore = table.Column<string>(name: "Section B - Need.B2 Indicators - Core", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionBNeedB2IndicatorsContributory = table.Column<string>(name: "Section B - Need.B2 Indicators – Contributory", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionBNeedB2Siftassessmentcomments = table.Column<string>(name: "Section B - Need.B2 Sift assessment comments", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionBNeedB2Applicationassessmentscore = table.Column<string>(name: "Section B - Need.B2 Application assessment score", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionBNeedB2CharacteristicsOld = table.Column<string>(name: "Section B - Need.B2 Characteristics (Old)", type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true),
                    SectionBNeedB2CharacteristicsWave14 = table.Column<string>(name: "Section B - Need.B2 Characteristics (Wave 14)", type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true),
                    SectionBNeedB2Applicationassessmentcomments = table.Column<string>(name: "Section B - Need.B2 Application assessment comments", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionBNeedB2Scoreafterinterview = table.Column<string>(name: "Section B - Need.B2 Score after interview", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionBNeedB2Interviewcommentsevidencethatledtoascorechangeifapplicable = table.Column<string>(name: "Section B - Need.B2 Interview comments – evidence that led to a score change (if applicable)", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionBNeedB2Finalscore = table.Column<string>(name: "Section B - Need.B2 Final score", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionBNeedB21619Siftassessmentscore = table.Column<string>(name: "Section B - Need.B2(16-19) Sift assessment score", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionBNeedB21619IndicatorsCore = table.Column<string>(name: "Section B - Need.B2(16-19) Indicators – Core", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionBNeedB21619IndicatorsContributory = table.Column<string>(name: "Section B - Need.B2(16-19) Indicators – Contributory", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionBNeedB21619Siftassessmentcomments = table.Column<string>(name: "Section B - Need.B2(16-19) Sift assessment comments", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionBNeedB21619Applicationassessmentscore = table.Column<string>(name: "Section B - Need.B2(16-19) Application assessment score", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionBNeedB21619CharacteristicsOld = table.Column<string>(name: "Section B - Need.B2(16-19) Characteristics (Old)", type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true),
                    SectionBNeedB21619CharacteristicsWave14 = table.Column<string>(name: "Section B - Need.B2(16-19) Characteristics (Wave 14)", type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true),
                    SectionBNeedB21619Applicationassessmentcomments = table.Column<string>(name: "Section B - Need.B2(16-19) Application assessment comments", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionBNeedB21619Scoreafterinterview = table.Column<string>(name: "Section B - Need.B2(16-19) Score after interview", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionBNeedB21619Interviewcommentsevidencethatledtoascorechangeifapplicable = table.Column<string>(name: "Section B - Need.B2(16-19) Interview comments – evidence that led to a score change (if applicable)", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionBNeedB21619Finalscore = table.Column<string>(name: "Section B - Need.B2(16-19) Final score", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionBNeedWillwecontinuetoassess1619 = table.Column<string>(name: "Section B - Need.Will we continue to assess 16-19?", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionBNeedNeedcommentaryandinterviewprompts = table.Column<string>(name: "Section B - Need.Need commentary and interview prompts", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionBNeedBNEngagementwiththelocalauthority = table.Column<string>(name: "Section B - Need.B(N) Engagement with the local authority", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionBNeedBNNurseryneedsummarycomments = table.Column<string>(name: "Section B - Need.B(N) Nursery need summary comments", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionBNeedBNNurseryneedinterviewprompts = table.Column<string>(name: "Section B - Need.B(N) Nursery need interview prompts", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionBNeedBNAfterinterviewnurseryneedsummarycomments = table.Column<string>(name: "Section B - Need.B(N) After interview nursery need summary comments", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionCVisionFinaltotalpercentagescoreforsectionC = table.Column<string>(name: "Section C - Vision.Final total percentage score for section C", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionCVisionVisionapplicationassessmentscore = table.Column<string>(name: "Section C - Vision.Vision application assessment score", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionCVisionVisionsummarycomments = table.Column<string>(name: "Section C - Vision.Vision summary comments", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionCVisionC1Applicationassessmentscore = table.Column<string>(name: "Section C - Vision.C1 Application assessment score", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionCVisionC1CharacteristicsOld = table.Column<string>(name: "Section C - Vision.C1 Characteristics (Old)", type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true),
                    SectionCVisionC1CharacteristicsWave14 = table.Column<string>(name: "Section C - Vision.C1 Characteristics (Wave 14)", type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true),
                    SectionCVisionC1Applicationassessmentcomments = table.Column<string>(name: "Section C - Vision.C1 Application assessment comments", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionCVisionC1Scoreafterinterview = table.Column<string>(name: "Section C - Vision.C1 Score after interview", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionCVisionC1Interviewcommentsevidencethatledtoascorechangeifapplicable = table.Column<string>(name: "Section C - Vision.C1 Interview comments – evidence that led to a score change (if applicable)", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionCVisionC1Finalscore = table.Column<string>(name: "Section C - Vision.C1 Final score", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionCVisionVisioninterviewprompts = table.Column<string>(name: "Section C - Vision.Vision interview prompts", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionCVisionCNAssessment = table.Column<string>(name: "Section C - Vision.C(N) Assessment", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionCVisionCNAssessmentsummarycomments = table.Column<string>(name: "Section C - Vision.C(N) Assessment summary comments", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionCVisionCNNurseryvisioninterviewprompts = table.Column<string>(name: "Section C - Vision.C(N) Nursery vision interview prompts", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionCVisionCNAssessmentafterinterview = table.Column<string>(name: "Section C - Vision.C(N) Assessment after interview", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionCVisionCNAfterinterviewsummarycomments = table.Column<string>(name: "Section C - Vision.C(N) After interview summary comments", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionDEngagementFinaltotalpercentagescoreforsectionD = table.Column<string>(name: "Section D - Engagement.Final total percentage score for section D", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionDEngagementEngagementwithparentsandthelocalcommunityapplicationassessmentscore = table.Column<string>(name: "Section D - Engagement.Engagement with parents and the local community application assessment score", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionDEngagementEngagementwithparentsandthelocalcommunitysummarycomments = table.Column<string>(name: "Section D - Engagement.Engagement with parents and the local community summary comments", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionDEngagementD1Applicationassessmentscore = table.Column<string>(name: "Section D - Engagement.D1 Application assessment score", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionDEngagementCharacteristicsOld = table.Column<string>(name: "Section D - Engagement.Characteristics (Old)", type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true),
                    SectionDEngagementCharacteristicsWave14 = table.Column<string>(name: "Section D - Engagement.Characteristics (Wave 14)", type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true),
                    SectionDEngagementD1Applicationassessmentcomments = table.Column<string>(name: "Section D - Engagement.D1 Application assessment comments", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionDEngagementD1Scoreafterinterview = table.Column<string>(name: "Section D - Engagement.D1 Score after interview", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionDEngagementD1Interviewcommentsevidencethatledtoascorechangeifapplicable = table.Column<string>(name: "Section D - Engagement.D1 Interview comments - evidence that led to a score change (if applicable)", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionDEngagementD1Finalscore = table.Column<string>(name: "Section D - Engagement.D1 Final score", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionDEngagementEngagementwithparentsandthelocalcommunityinterviewprompts = table.Column<string>(name: "Section D - Engagement.Engagement with parents and the local community interview prompts", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionEEducationPlanFinaltotalpercentagescoreforsectionE = table.Column<string>(name: "Section E - Education Plan.Final total percentage score for section E", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionEEducationPlanEducationplanapplicationassessmentscore = table.Column<string>(name: "Section E - Education Plan.Education plan application assessment score", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionEEducationPlanEducationplansummarycomments = table.Column<string>(name: "Section E - Education Plan.Education plan summary comments", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionEEducationPlanEducationadviserassessment = table.Column<string>(name: "Section E - Education Plan.Education adviser assessment", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionEEducationPlanE1Applicationassessmentscore = table.Column<string>(name: "Section E - Education Plan.E1 Application assessment score", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionEEducationPlanE1CharacteristicsOld = table.Column<string>(name: "Section E - Education Plan.E1 Characteristics (Old)", type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true),
                    SectionEEducationPlanE1CharacteristicsWave14 = table.Column<string>(name: "Section E - Education Plan.E1 Characteristics (Wave 14)", type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true),
                    SectionEEducationPlanE1Applicationassessmentcomments = table.Column<string>(name: "Section E - Education Plan.E1 Application assessment comments", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionEEducationPlanE1Scoreafterinterview = table.Column<string>(name: "Section E - Education Plan.E1 Score after interview", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionEEducationPlanE1Interviewcommentsevidencethatledtoascorechangeifapplicable = table.Column<string>(name: "Section E - Education Plan.E1 Interview comments – evidence that led to a score change (if applicable)", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionEEducationPlanE1Finalscore = table.Column<string>(name: "Section E - Education Plan.E1 Final score", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionEEducationPlanE2Applicationassessmentscore = table.Column<string>(name: "Section E - Education Plan.E2 Application assessment score", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionEEducationPlanE2CharacteristicsOld = table.Column<string>(name: "Section E - Education Plan.E2 Characteristics (Old)", type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true),
                    SectionEEducationPlanE2CharacteristicsWave14 = table.Column<string>(name: "Section E - Education Plan.E2 Characteristics (Wave 14)", type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true),
                    SectionEEducationPlanE2Applicationassessmentcomments = table.Column<string>(name: "Section E - Education Plan.E2 Application assessment comments", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionEEducationPlanE2Scoreafterinterview = table.Column<string>(name: "Section E - Education Plan.E2 Score after interview", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionEEducationPlanE2Interviewcommentsevidencethatledtoascorechangeifapplicable = table.Column<string>(name: "Section E - Education Plan.E2 Interview comments – evidence that led to a score change (if applicable)", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionEEducationPlanE2Finalscore = table.Column<string>(name: "Section E - Education Plan.E2 Final score", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionEEducationPlanE3Applicationassessmentscore = table.Column<string>(name: "Section E - Education Plan.E3 Application assessment score", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionEEducationPlanE3CharacteristicsOld = table.Column<string>(name: "Section E - Education Plan.E3 Characteristics (Old)", type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true),
                    SectionEEducationPlanE3CharacteristicsWave14 = table.Column<string>(name: "Section E - Education Plan.E3 Characteristics (Wave 14)", type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true),
                    SectionEEducationPlanE3Applicationassessmentcomments = table.Column<string>(name: "Section E - Education Plan.E3 Application assessment comments", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionEEducationPlanE3Scoreafterinterview = table.Column<string>(name: "Section E - Education Plan.E3 Score after interview", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionEEducationPlanE3Interviewcommentsevidencethatledtoascorechangeifapplicable = table.Column<string>(name: "Section E - Education Plan.E3 Interview comments – evidence that led to a score change (if applicable)", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionEEducationPlanE3Finalscore = table.Column<string>(name: "Section E - Education Plan.E3 Final score", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionEEducationPlanE4Applicationassessmentscore = table.Column<string>(name: "Section E - Education Plan.E4 Application assessment score", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionEEducationPlanE4CharacteristicsOld = table.Column<string>(name: "Section E - Education Plan.E4 Characteristics (Old)", type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true),
                    SectionEEducationPlanE4CharacteristicsWave14 = table.Column<string>(name: "Section E - Education Plan.E4 Characteristics (Wave 14)", type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true),
                    SectionEEducationPlanIoDResidentialRAG = table.Column<string>(name: "Section E - Education Plan.IoD Residential RAG", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionEEducationPlanIoDSchoolBasedRAG = table.Column<string>(name: "Section E - Education Plan.IoD School Based RAG", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionEEducationPlanRAGcommentarybox = table.Column<string>(name: "Section E - Education Plan.RAG commentary box", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionEEducationPlanE4Applicationassessmentcomments = table.Column<string>(name: "Section E - Education Plan.E4 Application assessment comments", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionEEducationPlanE4Scoreafterinterview = table.Column<string>(name: "Section E - Education Plan.E4 Score after interview", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionEEducationPlanE4Interviewcommentsevidencethatledtoascorechangeifapplicable = table.Column<string>(name: "Section E - Education Plan.E4 Interview comments – evidence that led to a score change (if applicable)", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionEEducationPlanE4Finalscore = table.Column<string>(name: "Section E - Education Plan.E4 Final score", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionEEducationPlanEducationplaninterviewprompts = table.Column<string>(name: "Section E - Education Plan.Education plan interview prompts", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionEEducationPlanENModeltype = table.Column<string>(name: "Section E - Education Plan.E(N) Model type", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionEEducationPlanENNurserymodelandviabilitysummarycomments = table.Column<string>(name: "Section E - Education Plan.E(N) Nursery model and viability summary comments", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionEEducationPlanENNurserymodelandviabilityinterviewprompts = table.Column<string>(name: "Section E - Education Plan.E(N) Nursery model and viability interview prompts", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionEEducationPlanENAfterinterviewmodelandviabilitysummarycomments = table.Column<string>(name: "Section E - Education Plan.E(N) After interview model and viability summary comments", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionFCapacityandcapabilityFinaltotalpercentagescoreforsectionF = table.Column<string>(name: "Section F - Capacity and capability.Final total percentage score for section F", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionFCapacityandcapabilityCapacityandcapabilityapplicationassessmentscore = table.Column<string>(name: "Section F - Capacity and capability.Capacity and capability application assessment score", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionFCapacityandcapabilityCapacityandcapabilitysummarycomments = table.Column<string>(name: "Section F - Capacity and capability.Capacity and capability summary comments", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionFCapacityandcapabilityDoestheproposergrouphaveanyopenschools = table.Column<string>(name: "Section F - Capacity and capability.Does the proposer group have any open schools?", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionFCapacityandcapabilityExistingprovidersummary = table.Column<string>(name: "Section F - Capacity and capability.Existing provider summary", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionFCapacityandcapabilityDoestheproposergrouprunanyopenstatefundedschools = table.Column<string>(name: "Section F - Capacity and capability.Does the proposer group run any open state funded schools?", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionFCapacityandcapabilityF1Applicationassessmentscore = table.Column<string>(name: "Section F - Capacity and capability.F1 Application assessment score", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionFCapacityandcapabilityF1CharacteristicsOld = table.Column<string>(name: "Section F - Capacity and capability.F1 Characteristics (Old)", type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true),
                    SectionFCapacityandcapabilityF1CharacteristicsWave14 = table.Column<string>(name: "Section F - Capacity and capability.F1 Characteristics (Wave 14)", type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true),
                    SectionFCapacityandcapabilityMATReview = table.Column<string>(name: "Section F - Capacity and capability.MAT Review", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionFCapacityandcapabilitySinglelist = table.Column<string>(name: "Section F - Capacity and capability.Single list", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionFCapacityandcapabilityF1Applicationassessmentcomments = table.Column<string>(name: "Section F - Capacity and capability.F1 Application assessment comments", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionFCapacityandcapabilityF1Scoreafterinterview = table.Column<string>(name: "Section F - Capacity and capability.F1 Score after interview", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionFCapacityandcapabilityF1Interviewcommentsevidencethatledtoascorechangeifapplicable = table.Column<string>(name: "Section F - Capacity and capability.F1 Interview comments – evidence that led to a score change (if applicable)", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionFCapacityandcapabilityF1Finalscore = table.Column<string>(name: "Section F - Capacity and capability.F1 Final score", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionFCapacityandcapabilityF2Applicationassessmentscore = table.Column<string>(name: "Section F - Capacity and capability.F2 Application assessment score", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionFCapacityandcapabilityF2CharacteristicsOld = table.Column<string>(name: "Section F - Capacity and capability.F2 Characteristics (Old)", type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true),
                    SectionFCapacityandcapabilityF2CharacteristicsWave14 = table.Column<string>(name: "Section F - Capacity and capability.F2 Characteristics (Wave 14)", type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true),
                    SectionFCapacityandcapabilityF2Applicationassessmentcomments = table.Column<string>(name: "Section F - Capacity and capability.F2 Application assessment comments", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionFCapacityandcapabilityF2Scoreafterinterview = table.Column<string>(name: "Section F - Capacity and capability.F2 Score after interview", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionFCapacityandcapabilityF2Interviewcommentsevidencethatledtoascorechangeifapplicable = table.Column<string>(name: "Section F - Capacity and capability.F2 Interview comments – evidence that led to a score change (if applicable)", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionFCapacityandcapabilityF2Finalscore = table.Column<string>(name: "Section F - Capacity and capability.F2 Final score", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionFCapacityandcapabilityF3Applicationassessmentscore = table.Column<string>(name: "Section F - Capacity and capability.F3 Application assessment score", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionFCapacityandcapabilityF3CharacteristicsOld = table.Column<string>(name: "Section F - Capacity and capability.F3 Characteristics (Old)", type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true),
                    SectionFCapacityandcapabilityF3CharacteristicsWave14 = table.Column<string>(name: "Section F - Capacity and capability.F3 Characteristics (Wave 14)", type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true),
                    SectionFCapacityandcapabilityF3Applicationassessmentcomments = table.Column<string>(name: "Section F - Capacity and capability.F3 Application assessment comments", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionFCapacityandcapabilityF3Scoreafterinterview = table.Column<string>(name: "Section F - Capacity and capability.F3 Score after interview", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionFCapacityandcapabilityF3Interviewcommentsevidencethatledtoascorechangeifapplicable = table.Column<string>(name: "Section F - Capacity and capability.F3 Interview comments – evidence that led to a score change (if applicable)", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionFCapacityandcapabilityF3Finalscore = table.Column<string>(name: "Section F - Capacity and capability.F3 Final score", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionFCapacityandcapabilityMembersnamesexperienceandexpertise = table.Column<string>(name: "Section F - Capacity and capability.Members' names, experience and expertise", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionFCapacityandcapabilityTrusteesnamesexperienceandexpertise = table.Column<string>(name: "Section F - Capacity and capability.Trustees' names, experience and expertise", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionFCapacityandcapabilityCapacityandcapabilityinterviewprompts = table.Column<string>(name: "Section F - Capacity and capability.Capacity and capability interview prompts", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionFCapacityandcapabilityFNTrustsnurseryexperience = table.Column<string>(name: "Section F - Capacity and capability.F(N) Trust's nursery experience", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionFCapacityandcapabilityFNNurserycapacityandcapabilitysummarycomments = table.Column<string>(name: "Section F - Capacity and capability.F(N) Nursery capacity and capability summary comments", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionFCapacityandcapabilityFNNurserycapacityandcapabilityinterviewprompts = table.Column<string>(name: "Section F - Capacity and capability.F(N) Nursery capacity and capability interview prompts", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionFCapacityandcapabilityFNAfterinterviewcapacityandcapabilitysummarycomments = table.Column<string>(name: "Section F - Capacity and capability.F(N) After interview capacity and capability summary comments", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionGFinancialviabilityFinaltotalpercentagescoreforsectionG = table.Column<string>(name: "Section G - Financial viability.Final total percentage score for section G", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionGFinancialviabilityFinancialviabilityapplicationassessmentscore = table.Column<string>(name: "Section G - Financial viability.Financial viability application assessment score", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionGFinancialviabilityFinancialviabilitysummarycomments = table.Column<string>(name: "Section G - Financial viability.Financial viability summary comments", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionGFinancialviabilityG1Applicationassessmentscore = table.Column<string>(name: "Section G - Financial viability.G1 Application assessment score", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionGFinancialviabilityG1CharacteristicsOld = table.Column<string>(name: "Section G - Financial viability.G1 Characteristics (Old)", type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true),
                    SectionGFinancialviabilityG1CharacteristicsWave14 = table.Column<string>(name: "Section G - Financial viability.G1 Characteristics (Wave 14)", type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true),
                    SectionGFinancialviabilityG1Applicationassessmentcomments = table.Column<string>(name: "Section G - Financial viability.G1 Application assessment comments", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionGFinancialviabilityG1Scoreafterinterview = table.Column<string>(name: "Section G - Financial viability.G1 Score after interview", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionGFinancialviabilityG1Interviewcommentsevidencethatledtoascorechangeifapplicable = table.Column<string>(name: "Section G - Financial viability.G1 Interview comments - evidence that led to a score change (if applicable)", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionGFinancialviabilityG1Finalscore = table.Column<string>(name: "Section G - Financial viability.G1 Final score", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionGFinancialviabilityG2Applicationassessmentscore = table.Column<string>(name: "Section G - Financial viability.G2 Application assessment score", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionGFinancialviabilityG2CharacteristicsOld = table.Column<string>(name: "Section G - Financial viability.G2 Characteristics (Old)", type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true),
                    SectionGFinancialviabilityG2CharacteristicsWave14 = table.Column<string>(name: "Section G - Financial viability.G2 Characteristics (Wave 14)", type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true),
                    SectionGFinancialviabilityG2Applicationassessmentcomments = table.Column<string>(name: "Section G - Financial viability.G2 Application assessment comments", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionGFinancialviabilityG2Scoreafterinterview = table.Column<string>(name: "Section G - Financial viability.G2 Score after interview", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionGFinancialviabilityG2Interviewcommentsevidencethatledtoascorechangeifapplicable = table.Column<string>(name: "Section G - Financial viability.G2 Interview comments – evidence that led to a score change (if applicable)", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionGFinancialviabilityG2Finalscore = table.Column<string>(name: "Section G - Financial viability.G2 Final score", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionGFinancialviabilityFinancialviabilityinterviewprompts = table.Column<string>(name: "Section G - Financial viability.Financial viability interview prompts", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionHTheproposedsiteSitesummarycomments = table.Column<string>(name: "Section H - The proposed site.Site summary comments", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionHTheproposedsiteSiteavailabilityRAG = table.Column<string>(name: "Section H - The proposed site.Site availability RAG", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionHTheproposedsiteSiteavailabilityconfidence = table.Column<string>(name: "Section H - The proposed site.Site availability confidence", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionHTheproposedsiteSiteavailabilitycomments = table.Column<string>(name: "Section H - The proposed site.Site availability comments", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionHTheproposedsiteHasasitebeenidentified = table.Column<string>(name: "Section H - The proposed site.Has a site been identified?", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionHTheproposedsiteAddress = table.Column<string>(name: "Section H - The proposed site.Address", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionHTheproposedsitePostcode = table.Column<string>(name: "Section H - The proposed site.Postcode", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionHTheproposedsitePropertyRAG = table.Column<string>(name: "Section H - The proposed site.Property RAG", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionHTheproposedsitePropertyRAGconfidence = table.Column<string>(name: "Section H - The proposed site.Property RAG confidence", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionHTheproposedsiteTenurecharacteristicsOld = table.Column<string>(name: "Section H - The proposed site.Tenure characteristics (Old)", type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true),
                    SectionHTheproposedsiteTenurecharacteristicsWave14 = table.Column<string>(name: "Section H - The proposed site.Tenure characteristics (Wave 14)", type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true),
                    SectionHTheproposedsitePropertyRAGcomments = table.Column<string>(name: "Section H - The proposed site.Property RAG comments", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionHTheproposedsitePlanningRAG = table.Column<string>(name: "Section H - The proposed site.Planning RAG", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionHTheproposedsitePlanningRAGconfidence = table.Column<string>(name: "Section H - The proposed site.Planning RAG confidence", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionHTheproposedsitePlanningpermissioncharacteristicsOld = table.Column<string>(name: "Section H - The proposed site.Planning permission characteristics (Old)", type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true),
                    SectionHTheproposedsitePlanningpermissioncharacteristicsWave14 = table.Column<string>(name: "Section H - The proposed site.Planning permission characteristics (Wave 14)", type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true),
                    SectionHTheproposedsitePlanningRAGcomments = table.Column<string>(name: "Section H - The proposed site.Planning RAG comments", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionHTheproposedsiteCostTier = table.Column<string>(name: "Section H - The proposed site.Cost Tier", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionHTheproposedsiteHighcostoutlier = table.Column<string>(name: "Section H - The proposed site.High cost outlier", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionHTheproposedsiteHighcostoutliercommentarybox = table.Column<string>(name: "Section H - The proposed site.High cost outlier commentary box", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionHTheproposedsiteProposedsiteinterviewprompts = table.Column<string>(name: "Section H - The proposed site.Proposed site interview prompts", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionIDueDiligenceHaveduediligencechecksbeenundertakenbyFSD = table.Column<string>(name: "Section I - Due Diligence.Have due diligence checks been undertaken by FSD?", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionIDueDiligenceDateofchecks = table.Column<string>(name: "Section I - Due Diligence.Date of checks", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionIDueDiligenceHasFSDengagedwithotherareasofthedepartmentARDDotherunitswithinFSD = table.Column<string>(name: "Section I - Due Diligence.Has FSD engaged with other areas of the department? (ARDD, other units within FSD)", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionIDueDiligenceIsthereanythingofconcernorinterest = table.Column<string>(name: "Section I - Due Diligence.Is there anything of concern or interest?", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionIDueDiligencePleaseprovidedetailsandsuggestedactionsremedies = table.Column<string>(name: "Section I - Due Diligence.Please provide details and suggested actions/remedies", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionIDueDiligenceDidDDCEDreportanythingofconcernorinterest = table.Column<string>(name: "Section I - Due Diligence.Did DDCED report anything of concern or interest?", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionIDueDiligencePleaseprovidedetailsandsuggestedactionsremediesDDCED = table.Column<string>(name: "Section I - Due Diligence.Please provide details and suggested actions/remedies (DDCED)", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionIDueDiligenceHavepotentialrisksbeenescalatedandactionsidentified = table.Column<string>(name: "Section I - Due Diligence.Have potential risks been escalated and actions identified?", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionIDueDiligenceComments = table.Column<string>(name: "Section I - Due Diligence.Comments", type: "varchar(4799)", unicode: false, maxLength: 4799, nullable: true),
                    SectionIDueDiligenceIsaDDCEDrepresentativerequiredtositontheinterviewpanel = table.Column<string>(name: "Section I - Due Diligence.Is a DDCED representative required to sit on the interview panel?", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SectionIDueDiligenceLinktoduediligencechecklist = table.Column<string>(name: "Section I - Due Diligence.Link to due diligence checklist", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "KPI",
                columns: table => new
                {
                    RID = table.Column<string>(type: "varchar(11)", unicode: false, maxLength: 11, nullable: false),
                    p_rid = table.Column<string>(type: "varchar(11)", unicode: false, maxLength: 11, nullable: true),
                    ProjectStatusCurrentfreeschoolname = table.Column<string>(name: "Project Status.Current free school name", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectStatusHasthefreeschoolchangeditsname = table.Column<string>(name: "Project Status.Has the free school changed its name?", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectStatusPreviousfreeschoolname = table.Column<string>(name: "Project Status.Previous free school name", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectStatusProjectstatus = table.Column<string>(name: "Project Status.Project status", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectStatusFreeschoolsapplicationnumber = table.Column<string>(name: "Project Status.Free schools application number", type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    ProjectStatusProjectID = table.Column<string>(name: "Project Status.Project ID", type: "varchar(25)", unicode: false, maxLength: 25, nullable: true),
                    ProjectStatusFreeschoolapplicationwave = table.Column<string>(name: "Project Status.Free school application wave", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectStatusDateofapplicationifoutsidewave = table.Column<DateTime>(name: "Project Status.Date of application if outside wave", type: "date", nullable: true),
                    ProjectStatusRealisticyearofopening = table.Column<string>(name: "Project Status.Realistic year of opening", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectStatusDateofentryintopreopening = table.Column<DateTime>(name: "Project Status.Date of entry into pre-opening", type: "date", nullable: true),
                    ProjectStatusTrustspreferredyearofopening = table.Column<string>(name: "Project Status.Trusts preferred year of opening", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectStatusProvisionalopeningdateagreedwithtrust = table.Column<DateTime>(name: "Project Status.Provisional opening date agreed with trust", type: "date", nullable: true),
                    ProjectStatusActualopeningdate = table.Column<DateTime>(name: "Project Status.Actual opening date", type: "date", nullable: true),
                    ProjectStatusPlannedmovedatetopermanentsite = table.Column<DateTime>(name: "Project Status.Planned move date to permanent site", type: "date", nullable: true),
                    ProjectStatusHastheprojectbeendeferred = table.Column<string>(name: "Project Status.Has the project been deferred?", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectStatusDateoffirstdeferral = table.Column<DateTime>(name: "Project Status.Date of first deferral", type: "date", nullable: true),
                    ProjectStatusPrimaryreasonforfirstdeferral = table.Column<string>(name: "Project Status.Primary reason for first deferral", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectStatusReasonforsitedeferral = table.Column<string>(name: "Project Status.Reason for site deferral", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectStatusCommentaryforfirstdeferral = table.Column<string>(name: "Project Status.Commentary for first deferral", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectStatusNewopeningdatefollowingfirstdeferral = table.Column<DateTime>(name: "Project Status.New opening date following first deferral", type: "date", nullable: true),
                    ProjectStatusHasprojectbeendeferredforasecondtime = table.Column<string>(name: "Project Status.Has project been deferred for a second time?", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectStatusDateofseconddeferral = table.Column<DateTime>(name: "Project Status.Date of second deferral", type: "date", nullable: true),
                    ProjectStatusPrimaryreasonforseconddeferral = table.Column<string>(name: "Project Status.Primary reason for second deferral", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectStatusKP05_Reasonforsitedeferral = table.Column<string>(name: "Project Status.KP05_Reason for site deferral", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectStatusCommentaryforseconddeferral = table.Column<string>(name: "Project Status.Commentary for second deferral", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectStatusNewopeningdatefollowingseconddeferral = table.Column<DateTime>(name: "Project Status.New opening date following second deferral", type: "date", nullable: true),
                    ProjectStatusHasprojectbeendeferredforathirdtime = table.Column<string>(name: "Project Status.Has project been deferred for a third time?", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectStatusDateofthirddeferral = table.Column<DateTime>(name: "Project Status.Date of third deferral", type: "date", nullable: true),
                    ProjectStatusPrimaryreasonforthirddeferral = table.Column<string>(name: "Project Status.Primary reason for third deferral", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectStatusKP06_Reasonforsitedeferral = table.Column<string>(name: "Project Status.KP06_Reason for site deferral", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectStatusCommentaryforthirddeferral = table.Column<string>(name: "Project Status.Commentary for third deferral", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectStatusNewopeningdatefollowingthirddeferral = table.Column<DateTime>(name: "Project Status.New opening date following third deferral", type: "date", nullable: true),
                    ProjectStatusHasprojectbeenwithdrawn = table.Column<string>(name: "Project Status.Has project been withdrawn?", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectStatusDatewithdrawn = table.Column<DateTime>(name: "Project Status.Date withdrawn", type: "date", nullable: true),
                    ProjectStatusPrimaryreasonforwithdrawal = table.Column<string>(name: "Project Status.Primary reason for withdrawal", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectStatusReasonforsitewithdrawal = table.Column<string>(name: "Project Status.Reason for site withdrawal", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectStatusCommentaryforwithdrawal = table.Column<string>(name: "Project Status.Commentary for withdrawal", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectStatusHasprojectbeencancelled = table.Column<string>(name: "Project Status.Has project been cancelled?", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectStatusDatecancelled = table.Column<DateTime>(name: "Project Status.Date cancelled", type: "date", nullable: true),
                    ProjectStatusPrimaryreasonforcancellation = table.Column<string>(name: "Project Status.Primary reason for cancellation", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectStatusReasonforsitecancellation = table.Column<string>(name: "Project Status.Reason for site cancellation", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectStatusCommentaryforcancellation = table.Column<string>(name: "Project Status.Commentary for cancellation", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectStatusDateclosed = table.Column<DateTime>(name: "Project Status.Date closed", type: "date", nullable: true),
                    ProjectStatusActualdateofopeninginpermanentaccommodation = table.Column<DateTime>(name: "Project Status.Actual date of opening in permanent accommodation", type: "date", nullable: true),
                    ProjectStatusActualdateofopeningintemporaryaccommodation = table.Column<DateTime>(name: "Project Status.Actual date of opening in temporary accommodation", type: "date", nullable: true),
                    ProjectStatusFreeschoolpenportrait = table.Column<string>(name: "Project Status.Free school pen portrait", type: "varchar(max)", unicode: false, nullable: true),
                    ProjectStatusURNwhengivenone = table.Column<string>(name: "Project Status.URN (when given one)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectStatusRebrokeredURN = table.Column<string>(name: "Project Status.Rebrokered URN", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolDetailsLAESTABwhengivenone = table.Column<string>(name: "School Details.LAESTAB (when given one)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolDetailsLocalauthority = table.Column<string>(name: "School Details.Local authority", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    Localauthority = table.Column<string>(name: "Local authority", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolDetailsLocalauthoritycontrol = table.Column<string>(name: "School Details.Local authority control", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolDetailsDistrict = table.Column<string>(name: "School Details.District", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolDetailsAEACatagory = table.Column<string>(name: "School Details.AEA Catagory", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolDetailsStartoftermdate = table.Column<DateTime>(name: "School Details.Start of term date", type: "date", nullable: true),
                    SchoolDetailsDeprivationdecline = table.Column<string>(name: "School Details.Deprivation decline", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolDetailsNEETinLA = table.Column<string>(name: "School Details.% NEET in LA", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolDetailsRSCregion = table.Column<string>(name: "School Details.RSC region", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolDetailsGeographicalRegion = table.Column<string>(name: "School Details.Geographical Region", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolDetailsEFATerritory = table.Column<string>(name: "School Details.EFA Territory", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolDetailsConstituency = table.Column<string>(name: "School Details.Constituency", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolDetailsConstituencyMP = table.Column<string>(name: "School Details.Constituency MP", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolDetailsPoliticalparty = table.Column<string>(name: "School Details.Political party", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolDetailsNumberofformsofentry = table.Column<string>(name: "School Details.Number of forms of entry", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolDetailsSchooltypemainstreamAPetc = table.Column<string>(name: "School Details.School type (mainstream, AP etc)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolDetailsSchoolphaseprimarysecondary = table.Column<string>(name: "School Details.School phase (primary, secondary)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolDetailsAgerange = table.Column<string>(name: "School Details.Age range", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolDetailsGender = table.Column<string>(name: "School Details.Gender", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolDetailsResidentialorboardingprovision = table.Column<string>(name: "School Details.Residential or boarding provision", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolDetailsDetailsofresidentialboardingprovision = table.Column<string>(name: "School Details.Details of residential/boarding provision", type: "varchar(max)", unicode: false, nullable: true),
                    SchoolDetailsNursery = table.Column<string>(name: "School Details.Nursery", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolDetailsSixthform = table.Column<string>(name: "School Details.Sixth form", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolDetailsSixthformtype = table.Column<string>(name: "School Details.Sixth form type", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolDetailsIndependentconverter = table.Column<string>(name: "School Details.Independent converter", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolDetailsSpecialistResourceProvision = table.Column<string>(name: "School Details.Specialist Resource Provision", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolDetailsSizeofGoverningBody = table.Column<string>(name: "School Details.Size of Governing Body", type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    SchoolDetailsFaithstatus = table.Column<string>(name: "School Details.Faith status", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolDetailsFaithtype = table.Column<string>(name: "School Details.Faith type", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolDetailsPleasespecifyotherfaithtype = table.Column<string>(name: "School Details.Please specify other faith type", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolDetailsSpecialism = table.Column<string>(name: "School Details.Specialism", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolDetailsDistinguishingfeatures = table.Column<string>(name: "School Details.Distinguishing features", type: "varchar(max)", unicode: false, nullable: true),
                    SchoolDetailsEmployersponsorsUTCsSSonly = table.Column<string>(name: "School Details.Employer sponsors - UTCs/SS only", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolDetailsUniversitySponsor = table.Column<string>(name: "School Details.University Sponsor", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolDetailsEmployerPartners = table.Column<string>(name: "School Details.Employer Partners", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolDetailsOtherPartners = table.Column<string>(name: "School Details.Other Partners", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolDetailsTypeofproposergroup = table.Column<string>(name: "School Details.Type of proposer group", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolDetailsPleasespecifyothertypeofproposergroup = table.Column<string>(name: "School Details.Please specify other type of proposer group", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolDetailsLeadsponsorID = table.Column<string>(name: "School Details.Lead sponsor ID", type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    SchoolDetailsLeadsponsorname = table.Column<string>(name: "School Details.Lead sponsor name", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolDetailsSponsortype = table.Column<string>(name: "School Details.Sponsor type", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolDetailsTrustID = table.Column<string>(name: "School Details.Trust ID", type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    SchoolDetailsTrustname = table.Column<string>(name: "School Details.Trust name", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolDetailsTrusttype = table.Column<string>(name: "School Details.Trust type", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BasicNeedSchoolinplanningareaofbasicneedassessment = table.Column<string>(name: "Basic Need.School in planning area of basic need (assessment)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BasicNeedKP02_Planningareacode = table.Column<string>(name: "Basic Need.KP02_Planning area code", type: "varchar(8)", unicode: false, maxLength: 8, nullable: true),
                    BasicNeedSchoolinplanningareaofbasicneedsecondaryassessment = table.Column<string>(name: "Basic Need.School in planning area of basic need - secondary (assessment)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BasicNeedSchoolinlocalareawithashortfallofplacessecondaryassessment = table.Column<string>(name: "Basic Need.School in local area with a shortfall of places - secondary (assessment)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BasicNeedYearofprojectedneedsecondaryassessment = table.Column<string>(name: "Basic Need.Year of projected need - secondary (assessment)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BasicNeedPlanningareacodesecondaryassessment = table.Column<string>(name: "Basic Need.Planning area code - secondary (assessment)", type: "varchar(8)", unicode: false, maxLength: 8, nullable: true),
                    BasicNeedAdditionalevidenceofneedsecondaryassessment = table.Column<string>(name: "Basic Need.Additional evidence of need - secondary (assessment)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BasicNeedSchoolinplanningareaofbasicneed = table.Column<string>(name: "Basic Need.School in planning area of basic need", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BasicNeedSchoolinlocalareawithashortfallofplacesinlocalarea = table.Column<string>(name: "Basic Need.School in local area with a shortfall of places in local area", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BasicNeedYearofSCAPsurvey = table.Column<string>(name: "Basic Need.Year of SCAP survey", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BasicNeedShortfallofplacesinlocalareaallyeargroupsinSCAPyear4 = table.Column<string>(name: "Basic Need.Shortfall of places in local area (all year groups in SCAP year +4)", type: "varchar(4)", unicode: false, maxLength: 4, nullable: true),
                    BasicNeedPercentageshortfallinlocalareaallyeargroupsinSCAPyear4 = table.Column<string>(name: "Basic Need.Percentage shortfall in local area (all year groups in SCAP year +4)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BasicNeedShortfallofplacesinlocalareayearofopeningallyeargroups = table.Column<string>(name: "Basic Need.Shortfall of places in local area — year of opening (all year groups)", type: "varchar(4)", unicode: false, maxLength: 4, nullable: true),
                    BasicNeedPercentageshortfallinlocalareayearofopeningallyeargroups = table.Column<string>(name: "Basic Need.Percentage shortfall in local area — year of opening (all year groups)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BasicNeedKP04_Planningareacode = table.Column<string>(name: "Basic Need.KP04_Planning area code", type: "varchar(8)", unicode: false, maxLength: 8, nullable: true),
                    BasicNeedAdditionalevidenceofneed = table.Column<string>(name: "Basic Need.Additional evidence of need", type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true),
                    BasicNeedSchoolinplanningareaofbasicneedsecondary = table.Column<string>(name: "Basic Need.School in planning area of basic need - secondary", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BasicNeedSchoolinlocalareawithashortfallofplacesinlocalareasecondary = table.Column<string>(name: "Basic Need.School in local area with a shortfall of places in local area - secondary", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BasicNeedYearofSCAPsurveysecondary = table.Column<string>(name: "Basic Need.Year of SCAP survey - secondary", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BasicNeedShortfallofplacesinlocalareaallyeargroupsinSCAPyear4secondary = table.Column<string>(name: "Basic Need.Shortfall of places in local area (all year groups in SCAP year +4) - secondary", type: "varchar(4)", unicode: false, maxLength: 4, nullable: true),
                    BasicNeedPercentageshortfallinlocalareaallyeargroupsinSCAPyear4secondary = table.Column<string>(name: "Basic Need.Percentage shortfall in local area (all year groups in SCAP year +4) - secondary", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BasicNeedShortfallofplacesinlocalareayearofopeningallyeargroupssecondary = table.Column<string>(name: "Basic Need.Shortfall of places in local area - year of opening (all year groups) - secondary", type: "varchar(4)", unicode: false, maxLength: 4, nullable: true),
                    BasicNeedPercentageshortfallinlocalareayearofopeningallyeargroupssecondary = table.Column<string>(name: "Basic Need.Percentage shortfall in local area - year of opening (all year groups) - secondary", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BasicNeedPlanningareacodesecondary = table.Column<string>(name: "Basic Need.Planning area code - secondary", type: "varchar(8)", unicode: false, maxLength: 8, nullable: true),
                    BasicNeedAdditionalevidenceofneedsecondary = table.Column<string>(name: "Basic Need.Additional evidence of need - secondary", type: "varchar(999)", unicode: false, maxLength: 999, nullable: true),
                    KeyContactsSchooladdress = table.Column<string>(name: "Key Contacts.School address", type: "varchar(max)", unicode: false, nullable: true),
                    KeyContactsPostcode = table.Column<string>(name: "Key Contacts.Postcode", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KeyContactsPostCodeforMapping = table.Column<string>(name: "Key Contacts.PostCode for Mapping", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KeyContactsLeadproposername = table.Column<string>(name: "Key Contacts.Lead proposer name", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KeyContactsLeadproposerphone = table.Column<string>(name: "Key Contacts.Lead proposer phone", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KeyContactsLeadproposeremail = table.Column<string>(name: "Key Contacts.Lead proposer email ", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KeyContactsAddressofleadproposer = table.Column<string>(name: "Key Contacts.Address of lead proposer", type: "varchar(max)", unicode: false, nullable: true),
                    KeyContactsLocalauthoritycontactpresumptionproject = table.Column<string>(name: "Key Contacts.Local authority contact (presumption project)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KeyContactsPrincipalDesignateName = table.Column<string>(name: "Key Contacts.Principal Designate Name", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KeyContactsPrincipalDesignatephone = table.Column<string>(name: "Key Contacts.Principal Designate phone", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KeyContactsPrincipalDesignateemail = table.Column<string>(name: "Key Contacts.Principal Designate email", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KeyContactsSeniorExecutiveLeadername = table.Column<string>(name: "Key Contacts.Senior Executive Leader name", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KeyContactsSeniorExecutiveLeaderphone = table.Column<string>(name: "Key Contacts.Senior Executive Leader phone", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KeyContactsSeniorExecutiveLeaderemail = table.Column<string>(name: "Key Contacts.Senior Executive Leader email", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KeyContactsChairofGovernorsname = table.Column<string>(name: "Key Contacts.Chair of Governors name", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KeyContactsChairofGovernorsphone = table.Column<string>(name: "Key Contacts.Chair of Governors phone", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KeyContactsChairofGovernorsemail = table.Column<string>(name: "Key Contacts.Chair of Governors email", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KeyContactsChairofgovernorsMAT = table.Column<string>(name: "Key Contacts.Chair of governors MAT", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KeyContactsChairofgovernorsMATphone = table.Column<string>(name: "Key Contacts.Chair of governors MAT phone", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KeyContactsChairofgovernorsMATemail = table.Column<string>(name: "Key Contacts.Chair of governors MAT email", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KeyContactsTrustsICTleadcontact = table.Column<string>(name: "Key Contacts.Trust's ICT lead contact", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KeyContactsTrustsICTleadcontactphone = table.Column<string>(name: "Key Contacts.Trust's ICT lead contact phone", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KeyContactsTrustsICTleadcontactemail = table.Column<string>(name: "Key Contacts.Trust's ICT lead contact email", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KeyContactsFSGassessmentlead = table.Column<string>(name: "Key Contacts.FSG assessment lead", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KeyContactsAssessmentteamleader = table.Column<string>(name: "Key Contacts.Assessment team leader", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KeyContactsInterviewchair = table.Column<string>(name: "Key Contacts.Interview chair", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KeyContactsFSGleadcontact = table.Column<string>(name: "Key Contacts.FSG lead contact", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KeyContactsFSGteamleader = table.Column<string>(name: "Key Contacts.FSG team leader", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KeyContactsFSGGrade6 = table.Column<string>(name: "Key Contacts.FSG Grade 6", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KeyContactsESFACapitalprojectmanager = table.Column<string>(name: "Key Contacts.ESFA Capital project manager", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KeyContactsESFACapitalprojectmanagerfirm = table.Column<string>(name: "Key Contacts.ESFA Capital project manager firm", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KeyContactsESFACapitalprojectdirector = table.Column<string>(name: "Key Contacts.ESFA Capital project director", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KeyContactsESFACapitalHeadofRegion = table.Column<string>(name: "Key Contacts.ESFA Capital Head of Region", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KeyContactsESFAacademiessenioradviser = table.Column<string>(name: "Key Contacts.ESFA academies senior adviser", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KeyContactsESFALinkOfficer = table.Column<string>(name: "Key Contacts.ESFA Link Officer", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KeyContactsEducationadviserassessment = table.Column<string>(name: "Key Contacts.Education adviser (assessment)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KeyContactsEducationadviserpreopening = table.Column<string>(name: "Key Contacts.Education adviser (pre-opening)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KeyContactsNamedcontactonceschoolisopen = table.Column<string>(name: "Key Contacts.Named contact once school is open", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KeyContactsEAonceschoolisopen = table.Column<string>(name: "Key Contacts.EA once school is open", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KeyContactsICTadviser = table.Column<string>(name: "Key Contacts.ICT adviser", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KeyContactsESFApropertylead = table.Column<string>(name: "Key Contacts.ESFA property lead", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KeyContactsLocatEDacquisitionmanager = table.Column<string>(name: "Key Contacts.LocatED acquisition manager", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KeyContactsESFAregionalpropertylead = table.Column<string>(name: "Key Contacts.ESFA regional property lead", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KeyContactsLegalmanager = table.Column<string>(name: "Key Contacts.Legal manager", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KeyContactsCommercialManager = table.Column<string>(name: "Key Contacts.Commercial Manager", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KeyContactsPropertyfirmdealing = table.Column<string>(name: "Key Contacts.Property firm dealing", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KeyContactsPropertyadviserallocated = table.Column<string>(name: "Key Contacts.Property adviser allocated", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KeyContactsAllocatedlawfirm = table.Column<string>(name: "Key Contacts.Allocated law firm", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KeyContactsFrameworkplanningconsultant = table.Column<string>(name: "Key Contacts.Framework planning consultant", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KeyContactsFrameworkplanningfirm = table.Column<string>(name: "Key Contacts.Framework planning firm", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KeyContactsFrameworkplanningfirmother = table.Column<string>(name: "Key Contacts.Framework planning firm – other", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KeyContactsPlanningAdviser = table.Column<string>(name: "Key Contacts.Planning Adviser", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KeyContactsPropertydocumentrepositorylink = table.Column<string>(name: "Key Contacts.Property document repository link", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KeyContactsESFAtechnicaladviser = table.Column<string>(name: "Key Contacts.ESFA technical adviser", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KeyContactsStrategicdesignadviser = table.Column<string>(name: "Key Contacts.Strategic design adviser", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KeyContactsTechnicaladvisoryfirm = table.Column<string>(name: "Key Contacts.Technical advisory firm", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KeyContactsLegalfirm = table.Column<string>(name: "Key Contacts.Legal firm", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    CommunicationsMediapenportrait = table.Column<string>(name: "Communications.Media pen portrait", type: "varchar(max)", unicode: false, nullable: true),
                    CommunicationsCurrentlinestotake = table.Column<string>(name: "Communications.Current lines to take", type: "varchar(max)", unicode: false, nullable: true),
                    CommunicationsArchivedlinestotake = table.Column<string>(name: "Communications.Archived lines to take", type: "varchar(max)", unicode: false, nullable: true),
                    ContingencyPlanningRDDSiteContingencyRAG = table.Column<string>(name: "Contingency Planning.RDD Site Contingency RAG", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ContingencyPlanningRDDRationale = table.Column<string>(name: "Contingency Planning.RDD Rationale", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ContingencyPlanningIfOtherwhyforRandAexplainanythingbeingexploredornextsteps = table.Column<string>(name: "Contingency Planning.If 'Other', why? (for R and A, explain anything being explored or next steps)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ContingencyPlanningEssentialthatitisdeliveredforSeptemberorcurrentscheduleddateintheRealisticYearofOpening = table.Column<string>(name: "Contingency Planning.Essential that it is delivered for September (or current scheduled date) in the Realistic Year of Opening?", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ContingencyPlanningIfYeswhy = table.Column<string>(name: "Contingency Planning.If ‘Yes’, why?", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ContingencyPlanningIfOtherwhy = table.Column<string>(name: "Contingency Planning.If 'Other', why?", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ContingencyPlanningBackupField = table.Column<string>(name: "Contingency Planning.Back-up Field", type: "varchar(max)", unicode: false, nullable: true),
                    ContingencyPlanningFSCDeliverabilityAssessment = table.Column<string>(name: "Contingency Planning.FSC Deliverability Assessment", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ContingencyPlanningFSCDeliverabilityComment = table.Column<string>(name: "Contingency Planning.FSC Deliverability Comment", type: "varchar(max)", unicode: false, nullable: true),
                    ContingencyPlanningSiteshutdown = table.Column<string>(name: "Contingency Planning.Site shutdown", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ContingencyPlanningCantempsbeextended = table.Column<string>(name: "Contingency Planning.Can temps be extended?", type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true),
                    ContingencyPlanningHowlongcantempsbeextended = table.Column<string>(name: "Contingency Planning.How long can temps be extended?", type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true),
                    ContingencyPlanningCancurrentcohortremaininschool = table.Column<string>(name: "Contingency Planning.Can current cohort remain in school?", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ContingencyPlanningCanschooltakeonanothercohort = table.Column<string>(name: "Contingency Planning.Can school take on another cohort?", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ContingencyPlanningHowmanystudentswillneedalternativearrangements = table.Column<string>(name: "Contingency Planning.How many students will need alternative arrangements?", type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true),
                    ContingencyPlanningProjectedlengthofdelaytoproject = table.Column<string>(name: "Contingency Planning.Projected length of delay to project", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ContingencyPlanningExtrainformation = table.Column<string>(name: "Contingency Planning.Extra information", type: "varchar(max)", unicode: false, nullable: true),
                    LeadsponsorID = table.Column<string>(name: "Lead sponsor ID", type: "varchar(7)", unicode: false, maxLength: 7, nullable: true),
                    Leadsponsorname = table.Column<string>(name: "Lead sponsor name", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TrustID = table.Column<string>(name: "Trust ID", type: "varchar(7)", unicode: false, maxLength: 7, nullable: true),
                    Trustname = table.Column<string>(name: "Trust name", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    Trusttype = table.Column<string>(name: "Trust type", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FS_Type = table.Column<string>(type: "varchar(14)", unicode: false, maxLength: 14, nullable: false),
                    FS_Type_1 = table.Column<string>(type: "varchar(16)", unicode: false, maxLength: 16, nullable: false),
                    SponsorUnitProjects = table.Column<string>(name: "Sponsor Unit Projects", type: "varchar(39)", unicode: false, maxLength: 39, nullable: false),
                    MATUnitProjects = table.Column<string>(name: "MAT Unit Projects", type: "varchar(32)", unicode: false, maxLength: 32, nullable: false),
                    RATProvisionalopeningdateagreedwithtrust = table.Column<DateTime>(name: "RAT Provisional opening date agreed with trust", type: "date", nullable: true),
                    AprilIndicator = table.Column<string>(name: "April Indicator", type: "varchar(10)", unicode: false, maxLength: 10, nullable: false),
                    Wave = table.Column<string>(type: "varchar(16)", unicode: false, maxLength: 16, nullable: false),
                    RYOO_WD = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    UpperStatus = table.Column<string>(name: "Upper Status", type: "varchar(10)", unicode: false, maxLength: 10, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KPI", x => x.RID);
                });

            migrationBuilder.CreateTable(
                name: "LA_Data",
                columns: table => new
                {
                    LocalAuthoritiesLAName = table.Column<string>(name: "Local Authorities.LA Name", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    LocalAuthoritiesLACode = table.Column<string>(name: "Local Authorities.LA Code", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    LocalAuthoritiesLALondonBased = table.Column<string>(name: "Local Authorities.LA London Based", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    LocalAuthoritiesRSCRegion = table.Column<string>(name: "Local Authorities.RSC Region", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    LocalAuthoritiesGeographicalregion = table.Column<string>(name: "Local Authorities.Geographical region", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    LocalAuthoritiesCapitalcosttier = table.Column<string>(name: "Local Authorities.Capital cost tier", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    LocalAuthoritiesLondonNotLondon = table.Column<string>(name: "Local Authorities.London/Not London", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "Milestones",
                columns: table => new
                {
                    p_rid = table.Column<string>(type: "varchar(11)", unicode: false, maxLength: 11, nullable: true),
                    RID = table.Column<string>(type: "varchar(11)", unicode: false, maxLength: 11, nullable: true),
                    FSGPreOpeningMilestonesViewCostPlan1 = table.Column<string>(name: "FSG Pre Opening Milestones.View Cost Plan 1", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FSGPreOpeningMilestonesViewCostPlan2 = table.Column<string>(name: "FSG Pre Opening Milestones.View Cost Plan 2", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FSGPreOpeningMilestonesDetailsofFundingarrangementagreedbetweenLAandSponsor = table.Column<string>(name: "FSG Pre Opening Milestones.Details of Funding arrangement agreed between LA and Sponsor", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FSGPreOpeningMilestonesKickoffmeetingheldActualDate = table.Column<DateTime>(name: "FSG Pre Opening Milestones.Kick off meeting held Actual Date", type: "date", nullable: true),
                    FSGPreOpeningMilestonesSiteKickoffmeetingheldactualdate = table.Column<DateTime>(name: "FSG Pre Opening Milestones.Site Kick off meeting held ( actual date)", type: "date", nullable: true),
                    FSGPreOpeningMilestonesHaveyoucompletedandsavedyourRiskAppraisalForm = table.Column<string>(name: "FSG Pre Opening Milestones.Have you completed and saved your Risk Appraisal Form?", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FSGPreOpeningMilestonesLinktoRiskAppraisalForm = table.Column<string>(name: "FSG Pre Opening Milestones.Link to Risk Appraisal Form", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FSGPreOpeningMilestonesIsthisprojectratedhighorlowriskforeducation = table.Column<string>(name: "FSG Pre Opening Milestones.Is this project rated high or low risk for education?", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FSGPreOpeningMilestonesIsthisprojectratedhighorlowriskforgovernance = table.Column<string>(name: "FSG Pre Opening Milestones.Is this project rated high or low risk for governance?", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FSGPreOpeningMilestonesIsthisprojectratedhighorlowriskforfinance = table.Column<string>(name: "FSG Pre Opening Milestones.Is this project rated high or low risk for finance?", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FSGPreOpeningMilestonesSAPBaselinedate = table.Column<DateTime>(name: "FSG Pre Opening Milestones.SAP Baseline date", type: "date", nullable: true),
                    FSGPreOpeningMilestonesSAPForecastDate = table.Column<DateTime>(name: "FSG Pre Opening Milestones.SAP Forecast Date", type: "date", nullable: true),
                    FSGPreOpeningMilestonesSAPActualdateofcompletion = table.Column<DateTime>(name: "FSG Pre Opening Milestones.SAP Actual date of completion", type: "date", nullable: true),
                    FSGPreOpeningMilestonesMI54_Commentsondecisiontoapproveifapplicable = table.Column<string>(name: "FSG Pre Opening Milestones.MI54_Comments on decision to approve (if applicable)", type: "varchar(999)", unicode: false, maxLength: 999, nullable: true),
                    FSGPreOpeningMilestonesMI105_Linktosaveddocument = table.Column<string>(name: "FSG Pre Opening Milestones.MI105_Link to saved document", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FSGPreOpeningMilestonesMAABaselinedate = table.Column<DateTime>(name: "FSG Pre Opening Milestones.MAA Baseline date", type: "date", nullable: true),
                    FSGPreOpeningMilestonesMAAForecastdate = table.Column<DateTime>(name: "FSG Pre Opening Milestones.MAA Forecast date", type: "date", nullable: true),
                    FSGPreOpeningMilestonesMAAActualdateofcompletion = table.Column<DateTime>(name: "FSG Pre Opening Milestones.MAA Actual date of completion", type: "date", nullable: true),
                    FSGPreOpeningMilestonesMI56_Commentsondecisiontoapproveifapplicable = table.Column<string>(name: "FSG Pre Opening Milestones.MI56_Comments on decision to approve (if applicable)", type: "varchar(999)", unicode: false, maxLength: 999, nullable: true),
                    FSGPreOpeningMilestonesMI107_Linktosaveddocument = table.Column<string>(name: "FSG Pre Opening Milestones.MI107_Link to saved document", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FSGPreOpeningMilestonesMFADBaselinedate = table.Column<DateTime>(name: "FSG Pre Opening Milestones.MFAD  Baseline date", type: "date", nullable: true),
                    FSGPreOpeningMilestonesMFADForecastdate = table.Column<DateTime>(name: "FSG Pre Opening Milestones.MFAD Forecast date", type: "date", nullable: true),
                    FSGPreOpeningMilestonesMFADActualdateofcompletion = table.Column<DateTime>(name: "FSG Pre Opening Milestones.MFAD  Actual date of completion", type: "date", nullable: true),
                    FSGPreOpeningMilestonesMI58_Commentsondecisiontoapproveifapplicable = table.Column<string>(name: "FSG Pre Opening Milestones.MI58_Comments on decision to approve (if applicable)", type: "varchar(999)", unicode: false, maxLength: 999, nullable: true),
                    FSGPreOpeningMilestonesMI109_Linktosaveddocument = table.Column<string>(name: "FSG Pre Opening Milestones.MI109_Link to saved document", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FSGPreOpeningMilestonesDGPBaselinedate = table.Column<DateTime>(name: "FSG Pre Opening Milestones.DGP  Baseline date", type: "date", nullable: true),
                    FSGPreOpeningMilestonesDGPForecastdate = table.Column<DateTime>(name: "FSG Pre Opening Milestones.DGP Forecast date", type: "date", nullable: true),
                    FSGPreOpeningMilestonesDGPActualdateofcompletion = table.Column<DateTime>(name: "FSG Pre Opening Milestones.DGP Actual date of completion", type: "date", nullable: true),
                    FSGPreOpeningMilestonesMI60_Commentsondecisiontoapproveifapplicable = table.Column<string>(name: "FSG Pre Opening Milestones.MI60_Comments on decision to approve (if applicable)", type: "varchar(999)", unicode: false, maxLength: 999, nullable: true),
                    FSGPreOpeningMilestonesMI111_Linktosaveddocument = table.Column<string>(name: "FSG Pre Opening Milestones.MI111_Link to saved document", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FSGPreOpeningMilestonesCoGappBaselinedate = table.Column<DateTime>(name: "FSG Pre Opening Milestones.CoGapp Baseline date", type: "date", nullable: true),
                    FSGPreOpeningMilestonesCoGappForecastdate = table.Column<DateTime>(name: "FSG Pre Opening Milestones.CoGapp Forecast date", type: "date", nullable: true),
                    FSGPreOpeningMilestonesCoGappActualdateofcompletion = table.Column<DateTime>(name: "FSG Pre Opening Milestones.CoGapp Actual date of completion", type: "date", nullable: true),
                    FSGPreOpeningMilestonesMI62_Commentsondecisiontoapproveifapplicable = table.Column<string>(name: "FSG Pre Opening Milestones.MI62_Comments on decision to approve (if applicable)", type: "varchar(999)", unicode: false, maxLength: 999, nullable: true),
                    FSGPreOpeningMilestonesMI113_Linktosaveddocument = table.Column<string>(name: "FSG Pre Opening Milestones.MI113_Link to saved document", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FSGPreOpeningMilestonesPDappBaselinedate = table.Column<DateTime>(name: "FSG Pre Opening Milestones.PDapp Baseline date", type: "date", nullable: true),
                    FSGPreOpeningMilestonesPDappForecastdate = table.Column<DateTime>(name: "FSG Pre Opening Milestones.PDapp Forecast date", type: "date", nullable: true),
                    FSGPreOpeningMilestonesPDappActualdateofcompletion = table.Column<DateTime>(name: "FSG Pre Opening Milestones.PDapp Actual date of completion", type: "date", nullable: true),
                    FSGPreOpeningMilestonesMI64_Commentsondecisiontoapproveifapplicable = table.Column<string>(name: "FSG Pre Opening Milestones.MI64_Comments on decision to approve (if applicable)", type: "varchar(999)", unicode: false, maxLength: 999, nullable: true),
                    FSGPreOpeningMilestonesMI115_Linktosaveddocument = table.Column<string>(name: "FSG Pre Opening Milestones.MI115_Link to saved document", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FSGPreOpeningMilestonesS9LBaselinedate = table.Column<DateTime>(name: "FSG Pre Opening Milestones.S9L Baseline date", type: "date", nullable: true),
                    FSGPreOpeningMilestonesS9LForecastdate = table.Column<DateTime>(name: "FSG Pre Opening Milestones.S9L Forecast date", type: "date", nullable: true),
                    FSGPreOpeningMilestonesS9LActualdateofcompletion = table.Column<DateTime>(name: "FSG Pre Opening Milestones.S9L Actual date of completion", type: "date", nullable: true),
                    FSGPreOpeningMilestonesMI66_Commentsondecisiontoapproveifapplicable = table.Column<string>(name: "FSG Pre Opening Milestones.MI66_Comments on decision to approve (if applicable)", type: "varchar(999)", unicode: false, maxLength: 999, nullable: true),
                    FSGPreOpeningMilestonesMI117_Linktosaveddocument = table.Column<string>(name: "FSG Pre Opening Milestones.MI117_Link to saved document", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FSGPreOpeningMilestonesEdBrBaselinedate = table.Column<DateTime>(name: "FSG Pre Opening Milestones.EdBr Baseline date", type: "date", nullable: true),
                    FSGPreOpeningMilestonesEdBrForecastdate = table.Column<DateTime>(name: "FSG Pre Opening Milestones.EdBr Forecast date", type: "date", nullable: true),
                    FSGPreOpeningMilestonesEdBrActualdateofcompletion = table.Column<DateTime>(name: "FSG Pre Opening Milestones.EdBr Actual date of completion", type: "date", nullable: true),
                    FSGPreOpeningMilestonesMI68_Commentsondecisiontoapproveifapplicable = table.Column<string>(name: "FSG Pre Opening Milestones.MI68_Comments on decision to approve (if applicable)", type: "varchar(999)", unicode: false, maxLength: 999, nullable: true),
                    FSGPreOpeningMilestonesMI119_Linktosaveddocument = table.Column<string>(name: "FSG Pre Opening Milestones.MI119_Link to saved document", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FSGPreOpeningMilestonesAppEvApplicable = table.Column<string>(name: "FSG Pre Opening Milestones.AppEv Applicable", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FSGPreOpeningMilestonesAppEvReasonnotapplicable = table.Column<string>(name: "FSG Pre Opening Milestones.AppEv - Reason not applicable", type: "varchar(max)", unicode: false, nullable: true),
                    FSGPreOpeningMilestonesAppEvBaselinedate = table.Column<DateTime>(name: "FSG Pre Opening Milestones.AppEv Baseline date", type: "date", nullable: true),
                    FSGPreOpeningMilestonesAppEvForecastdate = table.Column<DateTime>(name: "FSG Pre Opening Milestones.AppEv Forecast date", type: "date", nullable: true),
                    FSGPreOpeningMilestonesAppEvActualdateofcompletion = table.Column<DateTime>(name: "FSG Pre Opening Milestones.AppEv Actual date of completion", type: "date", nullable: true),
                    FSGPreOpeningMilestonesMI70_Commentsondecisiontoapproveifapplicable = table.Column<string>(name: "FSG Pre Opening Milestones.MI70_Comments on decision to approve (if applicable)", type: "varchar(999)", unicode: false, maxLength: 999, nullable: true),
                    FSGPreOpeningMilestonesMI121_Linktosaveddocument = table.Column<string>(name: "FSG Pre Opening Milestones.MI121_Link to saved document", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FSGPreOpeningMilestonesBEFPApplicable = table.Column<string>(name: "FSG Pre Opening Milestones.BEFP Applicable", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FSGPreOpeningMilestonesBEFPReasonnotapplicable = table.Column<string>(name: "FSG Pre Opening Milestones.BEFP - Reason not applicable", type: "varchar(max)", unicode: false, nullable: true),
                    FSGPreOpeningMilestonesBEFPBaselinedate = table.Column<DateTime>(name: "FSG Pre Opening Milestones.BEFP Baseline date", type: "date", nullable: true),
                    FSGPreOpeningMilestonesBEFPForecastdate = table.Column<DateTime>(name: "FSG Pre Opening Milestones.BEFP Forecast date", type: "date", nullable: true),
                    FSGPreOpeningMilestonesBEFPActualdateofcompletion = table.Column<DateTime>(name: "FSG Pre Opening Milestones.BEFP Actual date of completion", type: "date", nullable: true),
                    FSGPreOpeningMilestonesMI72_Commentsondecisiontoapproveifapplicable = table.Column<string>(name: "FSG Pre Opening Milestones.MI72_Comments on decision to approve (if applicable)", type: "varchar(999)", unicode: false, maxLength: 999, nullable: true),
                    FSGPreOpeningMilestonesMI123_Linktosaveddocument = table.Column<string>(name: "FSG Pre Opening Milestones.MI123_Link to saved document", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FSGPreOpeningMilestonesFGPABaselinedate = table.Column<DateTime>(name: "FSG Pre Opening Milestones.FGPA Baseline date", type: "date", nullable: true),
                    FSGPreOpeningMilestonesFGPAForecastdate = table.Column<DateTime>(name: "FSG Pre Opening Milestones.FGPA Forecast date", type: "date", nullable: true),
                    FSGPreOpeningMilestonesFGPAActualdateofcompletion = table.Column<DateTime>(name: "FSG Pre Opening Milestones.FGPA Actual date of completion", type: "date", nullable: true),
                    FSGPreOpeningMilestonesMI74_Commentsondecisiontoapproveifapplicable = table.Column<string>(name: "FSG Pre Opening Milestones.MI74_Comments on decision to approve (if applicable)", type: "varchar(999)", unicode: false, maxLength: 999, nullable: true),
                    FSGPreOpeningMilestonesMI125_Linktosaveddocument = table.Column<string>(name: "FSG Pre Opening Milestones.MI125_Link to saved document", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FSGPreOpeningMilestonesPFACMMilestoneapplicable = table.Column<string>(name: "FSG Pre Opening Milestones.PFACM - Milestone applicable", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FSGPreOpeningMilestonesPFACMReasonnotapplicable = table.Column<string>(name: "FSG Pre Opening Milestones.PFACM - Reason not applicable", type: "varchar(max)", unicode: false, nullable: true),
                    FSGPreOpeningMilestonesPFACMBaselinedate = table.Column<DateTime>(name: "FSG Pre Opening Milestones.PFACM Baseline date", type: "date", nullable: true),
                    FSGPreOpeningMilestonesPFACMForecastdate = table.Column<DateTime>(name: "FSG Pre Opening Milestones.PFACM Forecast date", type: "date", nullable: true),
                    FSGPreOpeningMilestonesPFACMActualdateofcompletion = table.Column<DateTime>(name: "FSG Pre Opening Milestones.PFACM Actual date of completion", type: "date", nullable: true),
                    FSGPreOpeningMilestonesMI76_Commentsondecisiontoapproveifapplicable = table.Column<string>(name: "FSG Pre Opening Milestones.MI76_Comments on decision to approve (if applicable)", type: "varchar(999)", unicode: false, maxLength: 999, nullable: true),
                    FSGPreOpeningMilestonesMI127_Linktosaveddocument = table.Column<string>(name: "FSG Pre Opening Milestones.MI127_Link to saved document", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FSGPreOpeningMilestonesSCCBaselinedate = table.Column<DateTime>(name: "FSG Pre Opening Milestones.SCC Baseline date", type: "date", nullable: true),
                    FSGPreOpeningMilestonesSCCForecastdate = table.Column<DateTime>(name: "FSG Pre Opening Milestones.SCC Forecast date", type: "date", nullable: true),
                    FSGPreOpeningMilestonesSCCActualdateofcompletion = table.Column<DateTime>(name: "FSG Pre Opening Milestones.SCC Actual date of completion", type: "date", nullable: true),
                    FSGPreOpeningMilestonesMI78_Commentsondecisiontoapproveifapplicable = table.Column<string>(name: "FSG Pre Opening Milestones.MI78_Comments on decision to approve (if applicable)", type: "varchar(999)", unicode: false, maxLength: 999, nullable: true),
                    FSGPreOpeningMilestonesMI129_Linktosaveddocument = table.Column<string>(name: "FSG Pre Opening Milestones.MI129_Link to saved document", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FSGPreOpeningMilestonesSCRBaselinedate = table.Column<DateTime>(name: "FSG Pre Opening Milestones.SCR Baseline date", type: "date", nullable: true),
                    FSGPreOpeningMilestonesSCRForecastdate = table.Column<DateTime>(name: "FSG Pre Opening Milestones.SCR Forecast date", type: "date", nullable: true),
                    FSGPreOpeningMilestonesSCRActualdateofcompletion = table.Column<DateTime>(name: "FSG Pre Opening Milestones.SCR Actual date of completion", type: "date", nullable: true),
                    FSGPreOpeningMilestonesMI80_Commentsondecisiontoapproveifapplicable = table.Column<string>(name: "FSG Pre Opening Milestones.MI80_Comments on decision to approve (if applicable)", type: "varchar(999)", unicode: false, maxLength: 999, nullable: true),
                    FSGPreOpeningMilestonesMI131_Linktosaveddocument = table.Column<string>(name: "FSG Pre Opening Milestones.MI131_Link to saved document", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FSGPreOpeningMilestonesDBSIBaselinedate = table.Column<DateTime>(name: "FSG Pre Opening Milestones.DBSI Baseline date", type: "date", nullable: true),
                    FSGPreOpeningMilestonesDBSIForecastdate = table.Column<DateTime>(name: "FSG Pre Opening Milestones.DBSI Forecast date", type: "date", nullable: true),
                    FSGPreOpeningMilestonesDBSIActualdateofcompletion = table.Column<DateTime>(name: "FSG Pre Opening Milestones.DBSI Actual date of completion", type: "date", nullable: true),
                    FSGPreOpeningMilestonesMI81_Commentsondecisiontoapproveifapplicable = table.Column<string>(name: "FSG Pre Opening Milestones.MI81_Comments on decision to approve (if applicable)", type: "varchar(999)", unicode: false, maxLength: 999, nullable: true),
                    FSGPreOpeningMilestonesMI133_Linktosaveddocument = table.Column<string>(name: "FSG Pre Opening Milestones.MI133_Link to saved document", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FSGPreOpeningMilestonesIAEABaselinedate = table.Column<DateTime>(name: "FSG Pre Opening Milestones.IAEA Baseline date", type: "date", nullable: true),
                    FSGPreOpeningMilestonesIAEAForecastdate = table.Column<DateTime>(name: "FSG Pre Opening Milestones.IAEA Forecast date", type: "date", nullable: true),
                    FSGPreOpeningMilestonesIAEAActualdateofcompletion = table.Column<DateTime>(name: "FSG Pre Opening Milestones.IAEA Actual date of completion", type: "date", nullable: true),
                    FSGPreOpeningMilestonesMI83_Commentsondecisiontoapproveifapplicable = table.Column<string>(name: "FSG Pre Opening Milestones.MI83_Comments on decision to approve (if applicable)", type: "varchar(999)", unicode: false, maxLength: 999, nullable: true),
                    FSGPreOpeningMilestonesMI135_Linktosaveddocument = table.Column<string>(name: "FSG Pre Opening Milestones.MI135_Link to saved document", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FSGPreOpeningMilestonesEAPolBaselinedate = table.Column<DateTime>(name: "FSG Pre Opening Milestones.EAPol Baseline date", type: "date", nullable: true),
                    FSGPreOpeningMilestonesEAPolForecastdate = table.Column<DateTime>(name: "FSG Pre Opening Milestones.EAPol  Forecast date", type: "date", nullable: true),
                    FSGPreOpeningMilestonesEAPolActualdateofcompletion = table.Column<DateTime>(name: "FSG Pre Opening Milestones.EAPol Actual date of completion", type: "date", nullable: true),
                    FSGPreOpeningMilestonesMI85_Commentsondecisiontoapproveifapplicable = table.Column<string>(name: "FSG Pre Opening Milestones.MI85_Comments on decision to approve (if applicable)", type: "varchar(999)", unicode: false, maxLength: 999, nullable: true),
                    FSGPreOpeningMilestonesMI137_Linktosaveddocument = table.Column<string>(name: "FSG Pre Opening Milestones.MI137_Link to saved document", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FSGPreOpeningMilestonesFSRDBaselinedate = table.Column<DateTime>(name: "FSG Pre Opening Milestones.FSRD Baseline date", type: "date", nullable: true),
                    FSGPreOpeningMilestonesFSRDForecastdate = table.Column<DateTime>(name: "FSG Pre Opening Milestones.FSRD Forecast date", type: "date", nullable: true),
                    FSGPreOpeningMilestonesFSRDActualdateofcompletion = table.Column<DateTime>(name: "FSG Pre Opening Milestones.FSRD Actual date of completion", type: "date", nullable: true),
                    FSGPreOpeningMilestonesMI87_Commentsondecisiontoapproveifapplicable = table.Column<string>(name: "FSG Pre Opening Milestones.MI87_Comments on decision to approve (if applicable)", type: "varchar(999)", unicode: false, maxLength: 999, nullable: true),
                    FSGPreOpeningMilestonesMI139_Linktosaveddocument = table.Column<string>(name: "FSG Pre Opening Milestones.MI139_Link to saved document", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FSGPreOpeningMilestonesFABaselinedate = table.Column<DateTime>(name: "FSG Pre Opening Milestones.FA Baseline date", type: "date", nullable: true),
                    FSGPreOpeningMilestonesFAForecastdate = table.Column<DateTime>(name: "FSG Pre Opening Milestones.FA Forecast date", type: "date", nullable: true),
                    FSGPreOpeningMilestonesFAActualdateofcompletion = table.Column<DateTime>(name: "FSG Pre Opening Milestones.FA Actual date of completion", type: "date", nullable: true),
                    FSGPreOpeningMilestonesMI89_Commentsondecisiontoapproveifapplicable = table.Column<string>(name: "FSG Pre Opening Milestones.MI89_Comments on decision to approve (if applicable)", type: "varchar(999)", unicode: false, maxLength: 999, nullable: true),
                    FSGPreOpeningMilestonesMI141_Linktosaveddocument = table.Column<string>(name: "FSG Pre Opening Milestones.MI141_Link to saved document", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FSGPreOpeningMilestonesEAOMilestoneapplicable = table.Column<string>(name: "FSG Pre Opening Milestones.EAO - Milestone applicable", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FSGPreOpeningMilestonesEAOReasonnotapplicable = table.Column<string>(name: "FSG Pre Opening Milestones.EAO - Reason not applicable", type: "varchar(max)", unicode: false, nullable: true),
                    FSGPreOpeningMilestonesEAOBaselinedate = table.Column<DateTime>(name: "FSG Pre Opening Milestones.EAO Baseline date", type: "date", nullable: true),
                    FSGPreOpeningMilestonesEAOForecastdate = table.Column<DateTime>(name: "FSG Pre Opening Milestones.EAO Forecast date", type: "date", nullable: true),
                    FSGPreOpeningMilestonesEAOActualdateofcompletion = table.Column<DateTime>(name: "FSG Pre Opening Milestones.EAO Actual date of completion", type: "date", nullable: true),
                    FSGPreOpeningMilestonesMI91_Commentsondecisiontoapproveifapplicable = table.Column<string>(name: "FSG Pre Opening Milestones.MI91_Comments on decision to approve (if applicable)", type: "varchar(999)", unicode: false, maxLength: 999, nullable: true),
                    FSGPreOpeningMilestonesMI143_Linktosaveddocument = table.Column<string>(name: "FSG Pre Opening Milestones.MI143_Link to saved document", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FSGPreOpeningMilestonesFCPBaselinedate = table.Column<DateTime>(name: "FSG Pre Opening Milestones.FCP Baseline date", type: "date", nullable: true),
                    FSGPreOpeningMilestonesFCPForecastdate = table.Column<DateTime>(name: "FSG Pre Opening Milestones.FCP Forecast date", type: "date", nullable: true),
                    FSGPreOpeningMilestonesFCPActualdateofcompletion = table.Column<DateTime>(name: "FSG Pre Opening Milestones.FCP Actual date of completion", type: "date", nullable: true),
                    FSGPreOpeningMilestonesMI93_Commentsondecisiontoapproveifapplicable = table.Column<string>(name: "FSG Pre Opening Milestones.MI93_Comments on decision to approve (if applicable)", type: "varchar(999)", unicode: false, maxLength: 999, nullable: true),
                    FSGPreOpeningMilestonesMI145_Linktosaveddocument = table.Column<string>(name: "FSG Pre Opening Milestones.MI145_Link to saved document", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FSGPreOpeningMilestonesOPRBaselinedate = table.Column<DateTime>(name: "FSG Pre Opening Milestones.OPR Baseline date", type: "date", nullable: true),
                    FSGPreOpeningMilestonesOPRForecastdate = table.Column<DateTime>(name: "FSG Pre Opening Milestones.OPR Forecast date", type: "date", nullable: true),
                    FSGPreOpeningMilestonesOPRActualdateofcompletion = table.Column<DateTime>(name: "FSG Pre Opening Milestones.OPR Actual date of completion", type: "date", nullable: true),
                    FSGPreOpeningMilestonesOutcomeofinspectionasadvisedbyOfsted = table.Column<string>(name: "FSG Pre Opening Milestones.Outcome of inspection as advised by Ofsted", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FSGPreOpeningMilestonesInspectionconditionsmet = table.Column<string>(name: "FSG Pre Opening Milestones.Inspection conditions met?", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FSGPreOpeningMilestonesMI95_Commentsondecisiontoapproveifapplicable = table.Column<string>(name: "FSG Pre Opening Milestones.MI95_Comments on decision to approve (if applicable)", type: "varchar(999)", unicode: false, maxLength: 999, nullable: true),
                    FSGPreOpeningMilestonesMI147_Linktosaveddocument = table.Column<string>(name: "FSG Pre Opening Milestones.MI147_Link to saved document", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FSGPreOpeningMilestonesROMBaselinedate = table.Column<DateTime>(name: "FSG Pre Opening Milestones.ROM Baseline date", type: "date", nullable: true),
                    FSGPreOpeningMilestonesROMForecastdate = table.Column<DateTime>(name: "FSG Pre Opening Milestones.ROM Forecast date", type: "date", nullable: true),
                    FSGPreOpeningMilestonesROMActualdateofcompletion = table.Column<DateTime>(name: "FSG Pre Opening Milestones.ROM Actual date of completion", type: "date", nullable: true),
                    FSGPreOpeningMilestonesOutcomeofROM = table.Column<string>(name: "FSG Pre Opening Milestones.Outcome of ROM", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FSGPreOpeningMilestonesROMconditionsmet = table.Column<string>(name: "FSG Pre Opening Milestones.ROM conditions met?", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FSGPreOpeningMilestonesMI97_Commentsondecisiontoapproveifapplicable = table.Column<string>(name: "FSG Pre Opening Milestones.MI97_Comments on decision to approve (if applicable)", type: "varchar(999)", unicode: false, maxLength: 999, nullable: true),
                    FSGPreOpeningMilestonesMI149_Linktosaveddocument = table.Column<string>(name: "FSG Pre Opening Milestones.MI149_Link to saved document", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FSGPreOpeningMilestonesROMReasonnotapplicable = table.Column<string>(name: "FSG Pre Opening Milestones.ROM - Reason not applicable", type: "varchar(max)", unicode: false, nullable: true),
                    FSGPreOpeningMilestonesFPABaselinedate = table.Column<DateTime>(name: "FSG Pre Opening Milestones.FPA Baseline date", type: "date", nullable: true),
                    FSGPreOpeningMilestonesFPAForecastdate = table.Column<DateTime>(name: "FSG Pre Opening Milestones.FPA Forecast date", type: "date", nullable: true),
                    FSGPreOpeningMilestonesFPAActualdateofcompletion = table.Column<DateTime>(name: "FSG Pre Opening Milestones.FPA Actual date of completion", type: "date", nullable: true),
                    FSGPreOpeningMilestonesMI99_Commentsondecisiontoapproveifapplicable = table.Column<string>(name: "FSG Pre Opening Milestones.MI99_Comments on decision to approve (if applicable)", type: "varchar(999)", unicode: false, maxLength: 999, nullable: true),
                    FSGPreOpeningMilestonesMI151_Linktosaveddocument = table.Column<string>(name: "FSG Pre Opening Milestones.MI151_Link to saved document", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FSGPreOpeningMilestonesDBSCBaselinedate = table.Column<DateTime>(name: "FSG Pre Opening Milestones.DBSC Baseline date", type: "date", nullable: true),
                    FSGPreOpeningMilestonesDBSCForecastdate = table.Column<DateTime>(name: "FSG Pre Opening Milestones.DBSC Forecast date", type: "date", nullable: true),
                    FSGPreOpeningMilestonesDBSCActualdateofcompletion = table.Column<DateTime>(name: "FSG Pre Opening Milestones.DBSC Actual date of completion", type: "date", nullable: true),
                    FSGPreOpeningMilestonesMI101_Commentsondecisiontoapproveifapplicable = table.Column<string>(name: "FSG Pre Opening Milestones.MI101_Comments on decision to approve (if applicable)", type: "varchar(999)", unicode: false, maxLength: 999, nullable: true),
                    FSGPreOpeningMilestonesMI153_Linktosaveddocument = table.Column<string>(name: "FSG Pre Opening Milestones.MI153_Link to saved document", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FSGPreOpeningMilestonesGIASBaselinedate = table.Column<DateTime>(name: "FSG Pre Opening Milestones.GIAS Baseline date", type: "date", nullable: true),
                    FSGPreOpeningMilestonesGIASForecastdate = table.Column<DateTime>(name: "FSG Pre Opening Milestones.GIAS Forecast date", type: "date", nullable: true),
                    FSGPreOpeningMilestonesGIASActualdateofcompletion = table.Column<DateTime>(name: "FSG Pre Opening Milestones.GIAS Actual date of completion", type: "date", nullable: true),
                    FSGPreOpeningMilestonesMI103_Commentsondecisiontoapproveifapplicable = table.Column<string>(name: "FSG Pre Opening Milestones.MI103_Comments on decision to approve (if applicable)", type: "varchar(999)", unicode: false, maxLength: 999, nullable: true),
                    FSGPreOpeningMilestonesMI155_Linktosaveddocument = table.Column<string>(name: "FSG Pre Opening Milestones.MI155_Link to saved document", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "Ofsted_Archive",
                columns: table => new
                {
                    URN = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    Inspectiondate = table.Column<DateTime>(name: "Inspection date", type: "date", nullable: true),
                    OfstedRating = table.Column<string>(name: "Ofsted Rating", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "Ofsted_FSG",
                columns: table => new
                {
                    p_rid = table.Column<string>(type: "varchar(11)", unicode: false, maxLength: 11, nullable: true),
                    RID = table.Column<string>(type: "varchar(11)", unicode: false, maxLength: 11, nullable: true),
                    EducationalEstablishmentURN = table.Column<string>(name: "Educational Establishment.URN", type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    ProjectURN = table.Column<string>(name: "Project URN", type: "varchar(25)", unicode: false, maxLength: 25, nullable: true),
                    EducationalEstablishmentSchoolname = table.Column<string>(name: "Educational Establishment.School name", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    EducationalEstablishmentLAESTAB = table.Column<string>(name: "Educational Establishment.LAESTAB", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    EducationalEstablishmentLocalauthority = table.Column<string>(name: "Educational Establishment.Local authority", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    Localauthority = table.Column<string>(name: "Local authority", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    EducationalEstablishmentRegion = table.Column<string>(name: "Educational Establishment.Region", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    EducationalEstablishmentRSCRegion = table.Column<string>(name: "Educational Establishment.RSC Region", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    EducationalEstablishmentConstituency = table.Column<string>(name: "Educational Establishment.Constituency", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    EducationalEstablishmentStatus = table.Column<string>(name: "Educational Establishment.Status", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    EducationalEstablishmentSchoolphase = table.Column<string>(name: "Educational Establishment.School phase", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    Phase = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: false),
                    EducationalEstablishmentSchooltype = table.Column<string>(name: "Educational Establishment.School type", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    EducationalEstablishmentOpendate = table.Column<DateTime>(name: "Educational Establishment.Open date", type: "date", nullable: true),
                    EducationalEstablishmentDateClosed = table.Column<DateTime>(name: "Educational Establishment.Date Closed", type: "date", nullable: true),
                    EducationalEstablishmentAddresspostcode = table.Column<string>(name: "Educational Establishment.Address postcode", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    EducationalEstablishmentDistrict = table.Column<string>(name: "Educational Establishment.District", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OfstedDataOfstedsection5inspectiondate = table.Column<DateTime>(name: "Ofsted Data.Ofsted section 5 inspection date", type: "date", nullable: true),
                    OfstedDataOfstedsection5inspectiondateL = table.Column<DateTime>(name: "Ofsted Data.Ofsted section 5 inspection date L", type: "date", nullable: true),
                    OfstedDataOfstedsection5Overalleffectiveness = table.Column<string>(name: "Ofsted Data.Ofsted section 5 Overall effectiveness", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OfstedDataOfstedsection5OveralleffectivenessL = table.Column<string>(name: "Ofsted Data.Ofsted section 5 Overall effectiveness L", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OfstedDataOfstedsection5CategoryOfConcern = table.Column<string>(name: "Ofsted Data.Ofsted section 5 Category Of Concern", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OfstedDataOfstedsection5CategoryOfConcernL = table.Column<string>(name: "Ofsted Data.Ofsted section 5 Category Of Concern L", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OfstedDataOfstedsection5DateinCategory4 = table.Column<DateTime>(name: "Ofsted Data.Ofsted section 5 Date in Category 4", type: "date", nullable: true),
                    OfstedDataOfstedsection5DateinCategory4L = table.Column<DateTime>(name: "Ofsted Data.Ofsted section 5 Date in Category 4 L", type: "date", nullable: true),
                    OfstedDataOfstedsection5DateoutofCategory4 = table.Column<DateTime>(name: "Ofsted Data.Ofsted section 5 Date out of Category 4", type: "date", nullable: true),
                    OfstedDataOfstedsection5DateoutofCategory4L = table.Column<DateTime>(name: "Ofsted Data.Ofsted section 5 Date out of Category 4 L", type: "date", nullable: true),
                    OfstedDataModerationdate = table.Column<DateTime>(name: "Ofsted Data.Moderation date", type: "date", nullable: true),
                    OfstedDataModerationdateL = table.Column<DateTime>(name: "Ofsted Data.Moderation date L", type: "date", nullable: true),
                    OfstedDataNumberofmonthsinCategory4 = table.Column<string>(name: "Ofsted Data.Number of months in Category 4", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OfstedDataNumberofmonthsinCategory4L = table.Column<string>(name: "Ofsted Data.Number of months in Category 4 L", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OfstedDataOfstedsection5Sixthformprovision = table.Column<string>(name: "Ofsted Data.Ofsted section 5 Sixth form provision", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OfstedDataOfstedsection5Outcomesforchildrenandlearners = table.Column<string>(name: "Ofsted Data.Ofsted section 5 Outcomes for children and learners", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OfstedDataOfstedsection5Qualityofteachinglearningandassessment = table.Column<string>(name: "Ofsted Data.Ofsted section 5 Quality of teaching, learning and assessment", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OfstedDataOfstedsection5Personaldevelopmentbehaviourandwelfare = table.Column<string>(name: "Ofsted Data.Ofsted section 5 Personal development, behaviour and welfare", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OfstedDataOfstedsection5Effectivenessleadershipandmanagement = table.Column<string>(name: "Ofsted Data.Ofsted section 5 Effectiveness leadership and management", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OfstedDataPreviousOfstedsection5inspectiondate = table.Column<DateTime>(name: "Ofsted Data.Previous Ofsted section 5 inspection date", type: "date", nullable: true),
                    OfstedDataPreviousOfstedsection5inspectiondateL = table.Column<DateTime>(name: "Ofsted Data.Previous Ofsted section 5 inspection date L", type: "date", nullable: true),
                    OfstedDataPreviousOfstedsection5Overalleffectiveness = table.Column<string>(name: "Ofsted Data.Previous Ofsted section 5 Overall effectiveness", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OfstedDataPreviousOfstedsection5OveralleffectivenessL = table.Column<string>(name: "Ofsted Data.Previous Ofsted section 5 Overall effectiveness L", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OfstedDataOfstedsection8inspectiondate = table.Column<DateTime>(name: "Ofsted Data.Ofsted section 8 inspection date", type: "date", nullable: true),
                    OfstedDataOfstedsection8judgement = table.Column<string>(name: "Ofsted Data.Ofsted section 8 judgement", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "Opens",
                columns: table => new
                {
                    p_rid = table.Column<string>(type: "varchar(11)", unicode: false, maxLength: 11, nullable: true),
                    RID = table.Column<string>(type: "varchar(11)", unicode: false, maxLength: 11, nullable: true),
                    CurrentStatusCasenote = table.Column<string>(name: "Current Status.Case note", type: "varchar(max)", unicode: false, nullable: true),
                    CurrentStatusDateoflatestcasenote = table.Column<DateTime>(name: "Current Status.Date of latest case note", type: "date", nullable: true),
                    CurrentStatusIntervention = table.Column<string>(name: "Current Status.Intervention", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    CurrentStatusEFAterritoryconcernlevel = table.Column<string>(name: "Current Status.EFA territory concern level", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    CurrentStatusDuediligenceconcerns = table.Column<string>(name: "Current Status.Due diligence concerns?", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    CurrentStatusFinancialconcerns = table.Column<string>(name: "Current Status.Financial concerns", type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true),
                    CurrentStatusPrincipalsameasonopening = table.Column<string>(name: "Current Status.Principal same as on opening", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    CurrentStatusGovernanceandcompliance = table.Column<string>(name: "Current Status.Governance and compliance", type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true),
                    CurrentStatusIrregularity = table.Column<string>(name: "Current Status.Irregularity", type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true),
                    OpenPupilNumbersCapacityagreedinpreopening = table.Column<string>(name: "Open Pupil Numbers.Capacity agreed in pre-opening", type: "varchar(4)", unicode: false, maxLength: 4, nullable: true),
                    OpenPupilNumbersFundednumberforthecurrentacademicyear = table.Column<string>(name: "Open Pupil Numbers.Funded number for the current academic year", type: "varchar(4)", unicode: false, maxLength: 4, nullable: true),
                    OpenPupilNumbersViabilitythresholdforthecurrentacademicyear = table.Column<string>(name: "Open Pupil Numbers.Viability threshold for the current academic year", type: "varchar(4)", unicode: false, maxLength: 4, nullable: true),
                    OpenPupilNumbersEFAringroundpupilnumbers = table.Column<string>(name: "Open Pupil Numbers.EFA ring round pupil numbers", type: "varchar(4)", unicode: false, maxLength: 4, nullable: true),
                    OpenPupilNumbersDateEFAringroundpupilnumbersupdated = table.Column<DateTime>(name: "Open Pupil Numbers.Date EFA ring round pupil numbers updated", type: "date", nullable: true),
                    OpenPupilNumbersCurrentpupilsonroll = table.Column<string>(name: "Open Pupil Numbers.Current pupils on roll", type: "varchar(4)", unicode: false, maxLength: 4, nullable: true),
                    OpenPupilNumbersCensusdate = table.Column<DateTime>(name: "Open Pupil Numbers.Census date", type: "date", nullable: true),
                    OpenPupilNumbersfull = table.Column<string>(name: "Open Pupil Numbers.%full", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OpenPupilNumbersNORasoffundednumber = table.Column<string>(name: "Open Pupil Numbers.NOR as % of funded number", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OpenPupilNumbersApplicationsYr10forthecomingyear = table.Column<string>(name: "Open Pupil Numbers.Applications Yr 10 for the coming year", type: "varchar(4)", unicode: false, maxLength: 4, nullable: true),
                    OpenPupilNumbersApplicationsYr12forthecomingyear = table.Column<string>(name: "Open Pupil Numbers.Applications Yr 12 for the coming year", type: "varchar(4)", unicode: false, maxLength: 4, nullable: true),
                    OpenPupilNumbersAcceptedapplicationsYr10fornextyear = table.Column<string>(name: "Open Pupil Numbers.Accepted applications Yr 10 for next year", type: "varchar(4)", unicode: false, maxLength: 4, nullable: true),
                    OpenPupilNumbersAcceptedapplicationsYr12fornextyear = table.Column<string>(name: "Open Pupil Numbers.Accepted applications Yr 12 for next year", type: "varchar(4)", unicode: false, maxLength: 4, nullable: true),
                    OpenPupilNumbersFundednumberforthecomingyear = table.Column<string>(name: "Open Pupil Numbers.Funded number for the coming year", type: "varchar(4)", unicode: false, maxLength: 4, nullable: true),
                    OpenPupilNumbersViabilitythresholdforthecomingyear = table.Column<string>(name: "Open Pupil Numbers.Viability threshold for the coming year", type: "varchar(4)", unicode: false, maxLength: 4, nullable: true),
                    OpenPupilNumbersReception = table.Column<string>(name: "Open Pupil Numbers.Reception", type: "varchar(4)", unicode: false, maxLength: 4, nullable: true),
                    OpenPupilNumbersYear1 = table.Column<string>(name: "Open Pupil Numbers.Year 1", type: "varchar(4)", unicode: false, maxLength: 4, nullable: true),
                    OpenPupilNumbersYear2 = table.Column<string>(name: "Open Pupil Numbers.Year 2", type: "varchar(4)", unicode: false, maxLength: 4, nullable: true),
                    OpenPupilNumbersYear3 = table.Column<string>(name: "Open Pupil Numbers.Year 3", type: "varchar(4)", unicode: false, maxLength: 4, nullable: true),
                    OpenPupilNumbersYear4 = table.Column<string>(name: "Open Pupil Numbers.Year 4", type: "varchar(4)", unicode: false, maxLength: 4, nullable: true),
                    OpenPupilNumbersYear5 = table.Column<string>(name: "Open Pupil Numbers.Year 5", type: "varchar(4)", unicode: false, maxLength: 4, nullable: true),
                    OpenPupilNumbersYear6 = table.Column<string>(name: "Open Pupil Numbers.Year 6", type: "varchar(4)", unicode: false, maxLength: 4, nullable: true),
                    OpenPupilNumbersYRY6Total = table.Column<string>(name: "Open Pupil Numbers.YR - Y6 Total", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OpenPupilNumbersYear7 = table.Column<string>(name: "Open Pupil Numbers.Year 7", type: "varchar(4)", unicode: false, maxLength: 4, nullable: true),
                    OpenPupilNumbersYear8 = table.Column<string>(name: "Open Pupil Numbers.Year 8", type: "varchar(4)", unicode: false, maxLength: 4, nullable: true),
                    OpenPupilNumbersYear9 = table.Column<string>(name: "Open Pupil Numbers.Year 9", type: "varchar(4)", unicode: false, maxLength: 4, nullable: true),
                    OpenPupilNumbersYear10 = table.Column<string>(name: "Open Pupil Numbers.Year 10", type: "varchar(4)", unicode: false, maxLength: 4, nullable: true),
                    OpenPupilNumbersYear11 = table.Column<string>(name: "Open Pupil Numbers.Year 11", type: "varchar(4)", unicode: false, maxLength: 4, nullable: true),
                    OpenPupilNumbersY7Y11Total = table.Column<string>(name: "Open Pupil Numbers.Y7 - Y11 Total", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OpenPupilNumbersYear12 = table.Column<string>(name: "Open Pupil Numbers.Year 12", type: "varchar(4)", unicode: false, maxLength: 4, nullable: true),
                    OpenPupilNumbersYear13 = table.Column<string>(name: "Open Pupil Numbers.Year 13", type: "varchar(4)", unicode: false, maxLength: 4, nullable: true),
                    OpenPupilNumbersYear14 = table.Column<string>(name: "Open Pupil Numbers.Year 14", type: "varchar(4)", unicode: false, maxLength: 4, nullable: true),
                    OpenPupilNumbersY12Y14Total = table.Column<string>(name: "Open Pupil Numbers.Y12 - Y14 Total", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OpenPupilNumbersTotal = table.Column<string>(name: "Open Pupil Numbers.Total", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FinancialChecksMostrecentauditedaccountsreceivedontime = table.Column<string>(name: "Financial Checks.Most recent audited accounts received on time", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FinancialChecksFinancialstatementssubmittedbylastdeadline = table.Column<string>(name: "Financial Checks.Financial statements submitted by last deadline", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FinancialChecksFinancialstatementsqualified = table.Column<string>(name: "Financial Checks.Financial statements qualified", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FinancialChecksRegularityopinionqualified = table.Column<string>(name: "Financial Checks.Regularity opinion qualified", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FinancialChecksProjectDevelopmentGrantfinalreturnreceived = table.Column<string>(name: "Financial Checks.Project Development Grant final return received", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FinancialChecksBudgetreturnsubmittedbylastdeadline = table.Column<string>(name: "Financial Checks.Budget return submitted by last deadline", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FinancialChecksFMGSreturnsubmittedbylastdeadline = table.Column<string>(name: "Financial Checks.FMGS return submitted by last deadline", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FinancialChecksMindedtoissueFNTI = table.Column<string>(name: "Financial Checks.Minded to issue FNTI", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FinancialChecksFinancialNoticetoImproveissued = table.Column<string>(name: "Financial Checks.Financial Notice to Improve issued", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FinancialChecksTotalOutstandingPNA = table.Column<string>(name: "Financial Checks.Total Outstanding PNA", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FinancialChecksAdditionalDebtDeficit = table.Column<string>(name: "Financial Checks.Additional Debt/ Deficit", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FinancialChecksTotalRevenueLiabilities = table.Column<string>(name: "Financial Checks.Total Revenue Liabilities", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "PDFD",
                columns: table => new
                {
                    p_rid = table.Column<string>(type: "varchar(11)", unicode: false, maxLength: 11, nullable: true),
                    RID = table.Column<string>(type: "varchar(11)", unicode: false, maxLength: 11, nullable: true),
                    ProjectDirectorForecastingDashboardFD_Year = table.Column<string>(name: "Project Director Forecasting Dashboard.FD_Year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectDirectorForecastingDashboardRealisticYearofOpening = table.Column<string>(name: "Project Director Forecasting Dashboard.Realistic Year of Opening", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectDirectorForecastingDashboardSiteidenfitifiedformainschoolbuildingActual = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.Site idenfitified for main school building (Actual)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardHoTAgreedforsiteforMainSchoolBuildingRP1 = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.HoT Agreed for site for Main School Building (RP1)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardHoTAgreedforsiteforMainSchoolBuildingRP2 = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.HoT Agreed for site for Main School Building (RP2)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardHoTAgreedforsiteforMainSchoolBuildingRP3 = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.HoT Agreed for site for Main School Building (RP3)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardHoTAgreedforsiteforMainSchoolBuildingActual = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.HoT Agreed for site for Main School Building (Actual)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardFeasibilityStartedforMainSchoolBuildingActual = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.Feasibility Started for Main School Building (Actual)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardExchangeonsiteforMainSchoolBuildingRP1 = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.Exchange on site for Main School Building (RP1)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardExchangeonsiteforMainSchoolBuildingRP2 = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.Exchange on site for Main School Building (RP2)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardExchangeonsiteforMainSchoolBuildingRP3 = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.Exchange on site for Main School Building (RP3)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardExchangeonsiteforMainSchoolBuildingActual = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.Exchange on site for Main School Building (Actual)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardDateofHoTsecuredontemporaryaccommodationsiteifrequiredRP1 = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.Date of HoT secured on temporary accommodation site, if required (RP1)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardDateofHoTsecuredontemporaryaccommodationsiteifrequiredRP2 = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.Date of HoT secured on temporary accommodation site, if required (RP2)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardDateofHoTsecuredontemporaryaccommodationsiteifrequiredRP3 = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.Date of HoT secured on temporary accommodation site, if required (RP3)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardDateofHoTsecuredontemporaryaccommodationsiteifrequiredActual = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.Date of HoT secured on temporary accommodation site, if required (Actual)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardDateofcompletionontemporaryaccommodationsiteifrequiredRP1 = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.Date of completion on temporary accommodation site, if required (RP1)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardDateofcompletionontemporaryaccommodationsiteifrequiredRP2 = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.Date of completion on temporary accommodation site, if required (RP2)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardDateofcompletionontemporaryaccommodationsiteifrequiredRP3 = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.Date of completion on temporary accommodation site, if required (RP3)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardDateofcompletionontemporaryaccommodationsiteifrequiredActual = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.Date of completion on temporary accommodation site, if required (Actual)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardCompleteonsiteforMainSchoolBuildingRP1 = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.Complete on site for Main School Building (RP1)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardCompleteonsiteforMainSchoolBuildingRP2 = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.Complete on site for Main School Building (RP2)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardCompleteonsiteforMainSchoolBuildingRP3 = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.Complete on site for Main School Building (RP3)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardCompleteonsiteforMainSchoolBuildingActual = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.Complete on site for Main School Building (Actual)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardEnterintocontractfortheinitialprovisionoftemporaryaccommodationRP1 = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.Enter into contract for the initial provision of temporary accommodation (RP1)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardEnterintocontractfortheinitialprovisionoftemporaryaccommodationRP2 = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.Enter into contract for the initial provision of temporary accommodation (RP2)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardEnterintocontractfortheinitialprovisionoftemporaryaccommodationRP3 = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.Enter into contract for the initial provision of temporary accommodation (RP3)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardEnterintocontractfortheinitialprovisionoftemporaryaccommodationActual = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.Enter into contract for the initial provision of temporary accommodation (Actual)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardTemporaryaccommodationfirstreadyforoccupationRP1 = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.Temporary accommodation first ready for occupation (RP1)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardTemporaryaccommodationfirstreadyforoccupationRP2 = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.Temporary accommodation first ready for occupation (RP2)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardTemporaryaccommodationfirstreadyforoccupationRP3 = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.Temporary accommodation first ready for occupation (RP3)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardTemporaryaccommodationfirstreadyforoccupationActual = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.Temporary accommodation first ready for occupation (Actual)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardIfrequiredenterintocontractforadditionaltemporaryaccommodationRP1 = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.If required, enter into contract for additional temporary accommodation (RP1)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardIfrequiredenterintocontractforadditionaltemporaryaccommodationRP2 = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.If required, enter into contract for additional temporary accommodation (RP2)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardIfrequiredenterintocontractforadditionaltemporaryaccommodationRP3 = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.If required, enter into contract for additional temporary accommodation (RP3)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardIfrequiredenterintocontractforadditionaltemporaryaccommodationActual = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.If required, enter into contract for additional temporary accommodation (Actual)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardIfrequiredadditionaltemporaryaccommodationreadyforoccupationRP1 = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.If required, additional temporary accommodation ready for occupation (RP1)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardIfrequiredadditionaltemporaryaccommodationreadyforoccupationRP2 = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.If required, additional temporary accommodation ready for occupation (RP2)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardIfrequiredadditionaltemporaryaccommodationreadyforoccupationRP3 = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.If required, additional temporary accommodation ready for occupation (RP3)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardIfrequiredadditionaltemporaryaccommodationreadyforoccupationActual = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.If required, additional temporary accommodation ready for occupation (Actual)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardStartofprocurementforMainSchoolBuildingRP1 = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.Start of procurement for Main School Building (RP1)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardStartofprocurementforMainSchoolBuildingRP2 = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.Start of procurement for Main School Building (RP2)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardStartofprocurementforMainSchoolBuildingRP3 = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.Start of procurement for Main School Building (RP3)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardStartofprocurementforMainSchoolBuildingActual = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.Start of procurement for Main School Building (Actual)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardSubmissionofplanningpermissionforpermanentmainschoolbuildingRP1 = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.Submission of planning permission for permanent main school building (RP1)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardSubmissionofplanningpermissionforpermanentmainschoolbuildingRP2 = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.Submission of planning permission for permanent main school building (RP2)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardSubmissionofplanningpermissionforpermanentmainschoolbuildingRP3 = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.Submission of planning permission for permanent main school building (RP3)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardSubmissionofplanningpermissionforpermanentmainschoolbuildingActual = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.Submission of planning permission for permanent main school building (Actual)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardDateofpositiveplanningdecisionnoticesecuredformainschoolbuildingRP1 = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.Date of positive planning decision notice secured for main school building (RP1)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardDateofpositiveplanningdecisionnoticesecuredformainschoolbuildingRP2 = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.Date of positive planning decision notice secured for main school building (RP2)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardDateofpositiveplanningdecisionnoticesecuredformainschoolbuildingRP3 = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.Date of positive planning decision notice secured for main school building (RP3)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardDateofpositiveplanningdecisionnoticesecuredformainschoolbuildingActual = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.Date of positive planning decision notice secured for main school building (Actual)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardContractorappointedformainschoolbuildingSPMEWAPCSARP1 = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.Contractor appointed for main school building (SPM, EWA, PCSA) (RP1)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardContractorappointedformainschoolbuildingSPMEWAPCSARP2 = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.Contractor appointed for main school building (SPM, EWA, PCSA) (RP2)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardContractorappointedformainschoolbuildingSPMEWAPCSARP3 = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.Contractor appointed for main school building (SPM, EWA, PCSA) (RP3)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardContractorappointedformainschoolbuildingSPMEWAPCSAActual = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.Contractor appointed for main school building (SPM, EWA, PCSA) (Actual)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardStartofconstructionofmainschoolbuildingRP1 = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.Start of construction of main school building (RP1)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardStartofconstructionofmainschoolbuildingRP2 = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.Start of construction of main school building (RP2)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardStartofconstructionofmainschoolbuildingRP3 = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.Start of construction of main school building (RP3)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardStartofconstructionofmainschoolbuildingActual = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.Start of construction of main school building (Actual)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardEnterintoContractforMainSchoolBuildingRP1 = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.Enter into Contract for Main School Building (RP1)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardEnterintoContractforMainSchoolBuildingRP2 = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.Enter into Contract for Main School Building (RP2)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardEnterintoContractforMainSchoolBuildingRP3 = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.Enter into Contract for Main School Building (RP3)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardEnterintoContractforMainSchoolBuildingActual = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.Enter into Contract for Main School Building (Actual)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardEnterintoFundingAgreementRP1 = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.Enter into Funding Agreement (RP1)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardEnterintoFundingAgreementRP2 = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.Enter into Funding Agreement (RP2)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardEnterintoFundingAgreementRP3 = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.Enter into Funding Agreement (RP3)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardEnterintoFundingAgreementActual = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.Enter into Funding Agreement (Actual)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardMainSchoolBuildingfirstreadyforoccupationRP1 = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.Main School Building first ready for occupation (RP1)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardMainSchoolBuildingfirstreadyforoccupationRP2 = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.Main School Building first ready for occupation (RP2)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardMainSchoolBuildingfirstreadyforoccupationRP3 = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.Main School Building first ready for occupation (RP3)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardMainSchoolBuildingfirstreadyforoccupationActual = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.Main School Building first ready for occupation (Actual)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardPracticalcompletionofcontractforMainSchoolBuildingRP1 = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.Practical completion of contract for Main School Building (RP1)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardPracticalcompletionofcontractforMainSchoolBuildingRP2 = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.Practical completion of contract for Main School Building (RP2)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardPracticalcompletionofcontractforMainSchoolBuildingRP3 = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.Practical completion of contract for Main School Building (RP3)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardPracticalcompletionofcontractforMainSchoolBuildingActual = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.Practical completion of contract for Main School Building (Actual)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardActualdateofopeningActual = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.Actual date of opening (Actual)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardAllpupilsoutoftemporaryaccommodationRP1 = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.All pupils out of temporary accommodation (RP1)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardAllpupilsoutoftemporaryaccommodationRP2 = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.All pupils out of temporary accommodation (RP2)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardAllpupilsoutoftemporaryaccommodationRP3 = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.All pupils out of temporary accommodation (RP3)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardAllpupilsoutoftemporaryaccommodationActual = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.All pupils out of temporary accommodation (Actual)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardEndofProjectNomorecapitalspendendofdefectsRP1 = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.End of Project (No more capital spend/end of defects) (RP1)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardEndofProjectNomorecapitalspendendofdefectsRP2 = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.End of Project (No more capital spend/end of defects) (RP2)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardEndofProjectNomorecapitalspendendofdefectsRP3 = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.End of Project (No more capital spend/end of defects) (RP3)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardEndofProjectNomorecapitalspendendofdefectsActual = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.End of Project (No more capital spend/end of defects) (Actual)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardFSGLeadContactRP1LastUpdated = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.FSG Lead Contact (RP1) (Last Updated)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardFSGLeadContactRP2LastUpdated = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.FSG Lead Contact (RP2) (Last Updated)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardFSGLeadContactRP3LastUpdated = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.FSG Lead Contact (RP3) (Last Updated)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardFSGLeadContactActualLastUpdated = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.FSG Lead Contact (Actual) (Last Updated)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardESFAProjectDirectorRP1DateApproved = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.ESFA Project Director (RP1) (Date Approved)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardESFAProjectDirectorRP2DateApproved = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.ESFA Project Director (RP2) (Date Approved)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardESFAProjectDirectorRP3DateApproved = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.ESFA Project Director (RP3) (Date Approved)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardRHFreezedataforReportingPeriodRP1DateApproved = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.RH - Freeze data for Reporting Period (RP1) (Date Approved)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardRHFreezedataforReportingPeriodRP2DateApproved = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.RH - Freeze data for Reporting Period (RP2) (Date Approved)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardRHFreezedataforReportingPeriodRP3DateApproved = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.RH - Freeze data for Reporting Period (RP3) (Date Approved)", type: "date", nullable: true),
                    ProjectDirectorForecastingDashboardCapitalProjectRAGRating = table.Column<string>(name: "Project Director Forecasting Dashboard.Capital Project RAG Rating", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectDirectorForecastingDashboardCapitalProjectRAGRatingcommentary = table.Column<string>(name: "Project Director Forecasting Dashboard.Capital Project RAG Rating commentary", type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true),
                    ProjectDirectorForecastingDashboardProperty = table.Column<string>(name: "Project Director Forecasting Dashboard.Property", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectDirectorForecastingDashboardPropertycommentary = table.Column<string>(name: "Project Director Forecasting Dashboard.Property commentary", type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true),
                    ProjectDirectorForecastingDashboardPlanning = table.Column<string>(name: "Project Director Forecasting Dashboard.Planning", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectDirectorForecastingDashboardPlanningcommentary = table.Column<string>(name: "Project Director Forecasting Dashboard.Planning commentary", type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true),
                    ProjectDirectorForecastingDashboardConstruction = table.Column<string>(name: "Project Director Forecasting Dashboard.Construction", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectDirectorForecastingDashboardConstructioncommentary = table.Column<string>(name: "Project Director Forecasting Dashboard.Construction commentary", type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true),
                    ProjectDirectorForecastingDashboardTemporary = table.Column<string>(name: "Project Director Forecasting Dashboard.Temporary", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectDirectorForecastingDashboardTemporarycommentary = table.Column<string>(name: "Project Director Forecasting Dashboard.Temporary commentary", type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true),
                    ProjectDirectorForecastingDashboardLastUpdatedbyPD = table.Column<DateTime>(name: "Project Director Forecasting Dashboard.Last Updated by PD", type: "date", nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "PDFD_Archive",
                columns: table => new
                {
                    Month = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectID = table.Column<string>(name: "Project ID", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FreeSchoolName = table.Column<string>(name: "Free School Name", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    HeadofRegion = table.Column<string>(name: "Head of Region", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectDirector = table.Column<string>(name: "Project Director", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectManager = table.Column<string>(name: "Project Manager", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    RealisticYearofOpening = table.Column<string>(name: "Realistic Year of Opening", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SiteidentifiedformainschoolbuildingActual = table.Column<string>(name: "Site identified for main school building (Actual)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    DateHoTsecuredonsiteformainschoolbuildingBaseline = table.Column<string>(name: "Date HoT secured on site for main school building (Baseline)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    DateHoTsecuredonsiteformainschoolbuildingActual = table.Column<string>(name: "Date HoT secured on site for main school building (Actual)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FeasibilityStartedforMainSchoolBuildingActual = table.Column<string>(name: "Feasibility Started for Main School Building (Actual)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    DateofexchangeonsiteformainschoolbuildingBaseline = table.Column<string>(name: "Date of exchange on site for main school building (Baseline)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    DateofexchangeonsiteformainschoolbuildingActual = table.Column<string>(name: "Date of exchange on site for main school building (Actual)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    DateofHoTsecuredontemporaryaccommodationsiteifrequiredForecast = table.Column<string>(name: "Date of HoT secured on temporary accommodation site, if required (Forecast)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    DateofHoTsecuredontemporaryaccommodationsiteifrequiredActual = table.Column<string>(name: "Date of HoT secured on temporary accommodation site, if required (Actual)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    DateofcompletionontemporaryaccommodationsiteifrequiredForecast = table.Column<string>(name: "Date of completion on temporary accommodation site, if required (Forecast)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    DateofcompletionontemporaryaccommodationsiteifrequiredActual = table.Column<string>(name: "Date of completion on temporary accommodation site, if required (Actual)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    CompleteonsiteacquisitionforMainSchoolBuildingForecast = table.Column<string>(name: "Complete on site acquisition for Main School Building (Forecast)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    CompleteonsiteacquisitionforMainSchoolBuildingActual = table.Column<string>(name: "Complete on site acquisition for Main School Building (Actual)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    EnterintocontractfortheinitialprovisionoftemporaryaccommodationForecast = table.Column<string>(name: "Enter into contract for the initial provision of temporary accommodation (Forecast)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    EnterintocontractfortheinitialprovisionoftemporaryaccommodationActual = table.Column<string>(name: "Enter into contract for the initial provision of temporary accommodation (Actual)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TemporaryaccommodationfirstreadyforoccupationForecast = table.Column<string>(name: "Temporary accommodation first ready for occupation (Forecast)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TemporaryaccommodationfirstreadyforoccupationActual = table.Column<string>(name: "Temporary accommodation first ready for occupation (Actual)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    IfrequiredenterintocontractforadditionaltemporaryaccommodationForecast = table.Column<string>(name: "If required, enter into contract for additional temporary accommodation (Forecast)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    IfrequiredenterintocontractforadditionaltemporaryaccommodationActual = table.Column<string>(name: "If required, enter into contract for additional temporary accommodation (Actual)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    IfrequiredadditionaltemporaryaccommodationreadyforoccupationForecast = table.Column<string>(name: "If required, additional temporary accommodation ready for occupation (Forecast)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    IfrequiredadditionaltemporaryaccommodationreadyforoccupationActual = table.Column<string>(name: "If required, additional temporary accommodation ready for occupation (Actual)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    StartofprocurementforMainSchoolBuildingForecast = table.Column<string>(name: "Start of procurement for Main School Building (Forecast)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    StartofprocurementforMainSchoolBuildingActual = table.Column<string>(name: "Start of procurement for Main School Building (Actual)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ContractorappointedformainschoolbuildingSPMEWAPCSAForecast = table.Column<string>(name: "Contractor appointed for main school building (SPM, EWA, PCSA) (Forecast)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ContractorappointedformainschoolbuildingSPMEWAPCSAActual = table.Column<string>(name: "Contractor appointed for main school building (SPM, EWA, PCSA) (Actual)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SubmissionofplanningpermissionforpermanentmainschoolbuildingForecast = table.Column<string>(name: "Submission of planning permission for permanent main school building (Forecast)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SubmissionofplanningpermissionforpermanentmainschoolbuildingActual = table.Column<string>(name: "Submission of planning permission for permanent main school building (Actual)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    DateofpositiveplanningdecisionnoticesecuredformainschoolbuildingForecast = table.Column<string>(name: "Date of positive planning decision notice secured for main school building (Forecast)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    DateofpositiveplanningdecisionnoticesecuredformainschoolbuildingActual = table.Column<string>(name: "Date of positive planning decision notice secured for main school building (Actual)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    EnterintoContractforMainSchoolBuildingForecast = table.Column<string>(name: "Enter into Contract for Main School Building (Forecast)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    EnterintoContractforMainSchoolBuildingActual = table.Column<string>(name: "Enter into Contract for Main School Building (Actual)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    EnterintoFundingAgreementForecast = table.Column<string>(name: "Enter into Funding Agreement (Forecast)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    EnterintoFundingAgreementActual = table.Column<string>(name: "Enter into Funding Agreement (Actual)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    StartofconstructionofmainschoolbuildingForecast = table.Column<string>(name: "Start of construction of main school building (Forecast)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    StartofconstructionofmainschoolbuildingActual = table.Column<string>(name: "Start of construction of main school building (Actual)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    MainschoolbuildingfirstreadytobeopenedforoccupationForecast = table.Column<string>(name: "Main school building first ready to be opened for occupation (Forecast)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    MainschoolbuildingfirstreadytobeopenedforoccupationActual = table.Column<string>(name: "Main school building first ready to be opened for occupation (Actual)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PracticalcompletionofcontractforMainSchoolBuildingForecast = table.Column<string>(name: "Practical completion of contract for Main School Building (Forecast)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PracticalcompletionofcontractforMainSchoolBuildingActual = table.Column<string>(name: "Practical completion of contract for Main School Building (Actual)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ActualdateofopeningActual = table.Column<string>(name: "Actual date of opening (Actual)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    AllpupilsoutoftemporaryaccommodationForecast = table.Column<string>(name: "All pupils out of temporary accommodation (Forecast)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    AllpupilsoutoftemporaryaccommodationActual = table.Column<string>(name: "All pupils out of temporary accommodation (Actual)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    EndofProjectNomorecapitalspendendofdefectsForecast = table.Column<string>(name: "End of Project (No more capital spend/end of defects) (Forecast)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    EndofProjectNomorecapitalspendendofdefectsActual = table.Column<string>(name: "End of Project (No more capital spend/end of defects) (Actual)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectDirectorApproval = table.Column<string>(name: "Project Director Approval", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    RegionalHeadFreezeDate = table.Column<string>(name: "Regional Head - Freeze Date", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    CapitalProjectRAGRating = table.Column<string>(name: "Capital Project RAG Rating", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "PDGL",
                columns: table => new
                {
                    p_rid = table.Column<string>(type: "varchar(11)", unicode: false, maxLength: 11, nullable: true),
                    RID = table.Column<string>(type: "varchar(11)", unicode: false, maxLength: 11, nullable: true),
                    ProjectDeliveryGrantLetterPDGLID = table.Column<string>(name: "Project Delivery Grant Letter.PDGL ID", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectDeliveryGrantLetterProjectDeliveryGrantLetterissueddate = table.Column<DateTime>(name: "Project Delivery Grant Letter.Project Delivery Grant Letter issued date", type: "date", nullable: true),
                    ProjectDeliveryGrantLetterProjectDeliveryGrantLettertotalvalue = table.Column<string>(name: "Project Delivery Grant Letter.Project Delivery Grant Letter total value", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "Perf_FSG",
                columns: table => new
                {
                    p_rid = table.Column<string>(type: "varchar(11)", unicode: false, maxLength: 11, nullable: true),
                    RID = table.Column<string>(type: "varchar(11)", unicode: false, maxLength: 11, nullable: true),
                    SchoolPerformanceDataYear = table.Column<string>(name: "School Performance Data.Year", type: "varchar(4)", unicode: false, maxLength: 4, nullable: true),
                    SchoolPerformanceDataNumberofpupils = table.Column<string>(name: "School Performance Data.Number of pupils", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS2level4Engmaths = table.Column<string>(name: "School Performance Data.KS2 level 4+ Eng maths", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS2level5Engmaths = table.Column<string>(name: "School Performance Data.KS2 level 5+ Eng maths", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS2level4reading = table.Column<string>(name: "School Performance Data.KS2 level 4+ reading", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS2level4writing = table.Column<string>(name: "School Performance Data.KS2 level 4+ writing", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS2level4maths = table.Column<string>(name: "School Performance Data.KS2 level 4+ maths", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS2level4readwritemaths = table.Column<string>(name: "School Performance Data.KS2 level 4+ read write maths", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS2level5reading = table.Column<string>(name: "School Performance Data.KS2 level 5+ reading", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS2level5writing = table.Column<string>(name: "School Performance Data.KS2 level 5+ writing", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS2level5maths = table.Column<string>(name: "School Performance Data.KS2 level 5+ maths", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS2level5readwritemaths = table.Column<string>(name: "School Performance Data.KS2 level 5+ read write maths", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS2Engprogress = table.Column<string>(name: "School Performance Data.KS2 Eng progress", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS2readprogress = table.Column<string>(name: "School Performance Data.KS2 read progress", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS2writeprogress = table.Column<string>(name: "School Performance Data.KS2 write progress", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS2mathsprogress = table.Column<string>(name: "School Performance Data.KS2 maths progress", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS2expectedstandardinreading = table.Column<string>(name: "School Performance Data.KS2 expected standard in reading", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS2expectedstandardinwriting = table.Column<string>(name: "School Performance Data.KS2 expected standard in writing", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS2expectedstandardinmaths = table.Column<string>(name: "School Performance Data.KS2 expected standard in maths", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS2expectedstandardinreadingwritingandmaths = table.Column<string>(name: "School Performance Data.KS2 expected standard in reading writing and maths", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS2highinreading = table.Column<string>(name: "School Performance Data.KS2 high in reading", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS2highinwriting = table.Column<string>(name: "School Performance Data.KS2 high in writing", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS2highinmaths = table.Column<string>(name: "School Performance Data.KS2 high in maths", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS2highinreadingwritingandmaths = table.Column<string>(name: "School Performance Data.KS2 high in reading, writing and maths", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS2readingprogressscore = table.Column<string>(name: "School Performance Data.KS2 reading progress score", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS2writingprogressscore = table.Column<string>(name: "School Performance Data.KS2 writing progress score", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS2mathsprogressscore = table.Column<string>(name: "School Performance Data.KS2 maths progress score", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS1KS2valueadded = table.Column<string>(name: "School Performance Data.KS1-KS2 value added", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS2pupils = table.Column<string>(name: "School Performance Data.KS2 pupils", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS2readingprogressupperconfidenceinterval = table.Column<string>(name: "School Performance Data.KS2 reading progress upper confidence interval", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS2writingprogressupperconfidenceinterval = table.Column<string>(name: "School Performance Data.KS2 writing progress upper confidence interval", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS2mathsprogressupperconfidenceinterval = table.Column<string>(name: "School Performance Data.KS2 maths progress upper confidence interval", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS2readingprogresslowerconfidenceinterval = table.Column<string>(name: "School Performance Data.KS2 reading progress lower confidence interval", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS2writingprogresslowerconfidenceinterval = table.Column<string>(name: "School Performance Data.KS2 writing progress lower confidence interval", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS2mathsprogresslowerconfidenceinterval = table.Column<string>(name: "School Performance Data.KS2 maths progress lower confidence interval", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS2Averagescoreinreading = table.Column<string>(name: "School Performance Data.KS2 Average score in reading", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS2Averagescoreinmaths = table.Column<string>(name: "School Performance Data.KS2 Average score in maths", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS2pupilsachievingahighscoreinreadingwritingandmaths = table.Column<string>(name: "School Performance Data.KS2 pupils achieving a high score in reading, writing and maths", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS45ACincEngmathPupils = table.Column<string>(name: "School Performance Data.KS4 5AC inc Eng math Pupils", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS45ACincEngmath = table.Column<string>(name: "School Performance Data.KS4 5AC inc Eng math", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS45ACincEngmathPr = table.Column<string>(name: "School Performance Data.KS4 5AC inc Eng math Pr", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS4Engprogress = table.Column<string>(name: "School Performance Data.KS4 Eng progress", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS4EngprogressPr = table.Column<string>(name: "School Performance Data.KS4 Eng progress Pr", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS4mathsprogress = table.Column<string>(name: "School Performance Data.KS4 maths progress", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS4mathsprogressPr = table.Column<string>(name: "School Performance Data.KS4 maths progress Pr", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS4EbaccPupils = table.Column<string>(name: "School Performance Data.KS4 Ebacc Pupils", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS4EBacc = table.Column<string>(name: "School Performance Data.KS4 EBacc", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS4EBaccPr = table.Column<string>(name: "School Performance Data.KS4 EBacc Pr", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS4CinEnglishandmaths = table.Column<string>(name: "School Performance Data.KS4 C + in English and maths", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS4CinEnglishandmathsPupils = table.Column<string>(name: "School Performance Data.KS4 C + in English and maths Pupils", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS4achievingastrongpass5oraboveinEnglishandmaths = table.Column<string>(name: "School Performance Data.KS4 achieving a ‘strong pass’ (5 or above) in English and maths", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS4achievingastrongpass5oraboveinEnglishandmathsPr = table.Column<string>(name: "School Performance Data.KS4 achieving a ‘strong pass’ (5 or above) in English and maths Pr", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS4achievingastandardpass5oraboveinEnglishandmaths = table.Column<string>(name: "School Performance Data.KS4 achieving a ‘standard pass’ (5 or above) in English and maths", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS4achievingastandardpass5oraboveinEnglishandmathsPr = table.Column<string>(name: "School Performance Data.KS4 achieving a ‘standard pass’ (5 or above) in English and maths Pr", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS2KS4valueadded = table.Column<string>(name: "School Performance Data.KS2-KS4 value added", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS2KS4valueaddedPr = table.Column<string>(name: "School Performance Data.KS2-KS4 value added Pr", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS4pupils = table.Column<string>(name: "School Performance Data.KS4 pupils", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS4pupilsPr = table.Column<string>(name: "School Performance Data.KS4 pupils Pr", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataProgress8optin = table.Column<string>(name: "School Performance Data.Progress 8 opt in", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS4progress8pupils = table.Column<string>(name: "School Performance Data.KS4 progress 8 pupils", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS4progress8pupilsPr = table.Column<string>(name: "School Performance Data.KS4 progress 8 pupils Pr", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS4progress8score = table.Column<string>(name: "School Performance Data.KS4 progress 8 score", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS4progress8scorePr = table.Column<string>(name: "School Performance Data.KS4 progress 8 score Pr", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS4progress8scoreEnglish = table.Column<string>(name: "School Performance Data.KS4 progress 8 score - English", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS4progress8scoreMaths = table.Column<string>(name: "School Performance Data.KS4 progress 8 score - Maths", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS4progress8scoreOpen = table.Column<string>(name: "School Performance Data.KS4 progress 8 score - Open", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS4progress8scoreEbacc = table.Column<string>(name: "School Performance Data.KS4 progress 8 score -Ebacc", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS4Attainment8score = table.Column<string>(name: "School Performance Data.KS4 Attainment 8 score", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS4Attainment8scorePr = table.Column<string>(name: "School Performance Data.KS4 Attainment 8 score Pr", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS4Attainment8scoreEnglish = table.Column<string>(name: "School Performance Data.KS4 Attainment 8 score - English", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS4Attainment8scoreMaths = table.Column<string>(name: "School Performance Data.KS4 Attainment 8 score - Maths", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS4Attainment8scoreEbacc = table.Column<string>(name: "School Performance Data.KS4 Attainment 8 score - Ebacc", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS4Attainment8scoreOpen = table.Column<string>(name: "School Performance Data.KS4 Attainment 8 score - Open", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS4progress8upperconfidenceinterval = table.Column<string>(name: "School Performance Data.KS4 progress 8 upper confidence interval", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS4progress8upperconfidenceintervalPr = table.Column<string>(name: "School Performance Data.KS4 progress 8 upper confidence interval Pr", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS4progress8lowerconfidenceinterval = table.Column<string>(name: "School Performance Data.KS4 progress 8 lower confidence interval", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS4progress8lowerconfidenceintervalPr = table.Column<string>(name: "School Performance Data.KS4 progress 8 lower confidence interval Pr", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS5APSperentryAcademic = table.Column<string>(name: "School Performance Data.KS5 APS per entry (Academic)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS5APSperentryAcademicPr = table.Column<string>(name: "School Performance Data.KS5 APS per entry (Academic) Pr", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS5APSperentryVocational = table.Column<string>(name: "School Performance Data.KS5 APS per entry (Vocational)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS5APSperentryVocationalPr = table.Column<string>(name: "School Performance Data.KS5 APS per entry (Vocational) Pr", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS5valueaddedacademic = table.Column<string>(name: "School Performance Data.KS5 value added (academic)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS5valueaddedacademicPr = table.Column<string>(name: "School Performance Data.KS5 value added (academic) Pr", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS5valueaddedappliedgeneral = table.Column<string>(name: "School Performance Data.KS5 value added (applied general)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS5valueaddedappliedgeneralPr = table.Column<string>(name: "School Performance Data.KS5 value added (applied general) Pr", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS5valueaddedVocational = table.Column<string>(name: "School Performance Data.KS5 value added (Vocational)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS5valueaddedVocationalPr = table.Column<string>(name: "School Performance Data.KS5 value added (Vocational) Pr", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS5valueaddedlowerconfidenceinterval = table.Column<string>(name: "School Performance Data.KS5 value added lower confidence interval", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS5valueaddedlowerconfidenceintervalPr = table.Column<string>(name: "School Performance Data.KS5 value added lower confidence interval Pr", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS5valueaddedupperconfidenceinterval = table.Column<string>(name: "School Performance Data.KS5 value added upper confidence interval", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS5valueaddedupperconfidenceintervalPr = table.Column<string>(name: "School Performance Data.KS5 value added upper confidence interval Pr", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS5APSperentryappliedgeneral = table.Column<string>(name: "School Performance Data.KS5 APS per entry (applied general)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS5pupilsacademic = table.Column<string>(name: "School Performance Data.KS5 pupils (academic)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS5pupilsacademicPr = table.Column<string>(name: "School Performance Data.KS5 pupils (academic) Pr", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS5pupilsappliedgeneral = table.Column<string>(name: "School Performance Data.KS5 pupils (applied general)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS5pupilsappliedgeneralPr = table.Column<string>(name: "School Performance Data.KS5 pupils (applied general) Pr", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS5pupilsall = table.Column<string>(name: "School Performance Data.KS5 pupils (all)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SchoolPerformanceDataKS5pupilsallPR = table.Column<string>(name: "School Performance Data.KS5 pupils (all)PR", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "Perf_FSG_Local",
                columns: table => new
                {
                    URN = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    ProjectID = table.Column<string>(name: "Project ID", type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    Year = table.Column<string>(type: "varchar(4)", unicode: false, maxLength: 4, nullable: true),
                    Attainment8ScoreLAAverage = table.Column<string>(name: "Attainment 8 Score LA Average", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KS4CinEnglishMathsLAAverage = table.Column<string>(name: "KS4 C+ in English & Maths LA Average (%)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KS4EbaccenteredforEbacc = table.Column<string>(name: "KS4 Ebacc (% entered for Ebacc)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KS5ALevelAPSperEntry = table.Column<string>(name: "KS5 A-Level (APS per Entry)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KS5AcademicProgressScore = table.Column<string>(name: "KS5 Academic Progress Score", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KS5AcademicProgressScoreAverageGrade = table.Column<string>(name: "KS5 Academic Progress Score (Average Grade)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KS5TechLevelAPSperEntry = table.Column<string>(name: "KS5 Tech Level (APS per Entry)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KS5TechLevelAPSperEntryLAAverage = table.Column<string>(name: "KS5 Tech Level (APS per Entry - LA Average)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    Totalofstudentsstayingineducationoremployment = table.Column<string>(name: "Total % of students staying in education or employment", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    InEducationpercentage = table.Column<string>(name: "In Education (percentage)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "Planning",
                columns: table => new
                {
                    p_rid = table.Column<string>(type: "varchar(11)", unicode: false, maxLength: 11, nullable: true),
                    RID = table.Column<string>(type: "varchar(11)", unicode: false, maxLength: 11, nullable: true),
                    PlanningRecordIsthisthemainplanningrecord = table.Column<string>(name: "Planning Record.Is this the main planning record?", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PlanningRecordStoreplanningrecordID = table.Column<string>(name: "Planning Record.Store planning record ID", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PlanningRecordPlanningLeadcomments = table.Column<string>(name: "Planning Record.Planning Lead comments", type: "varchar(999)", unicode: false, maxLength: 999, nullable: true),
                    PlanningRecordPlanningrisk = table.Column<string>(name: "Planning Record.Planning risk", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PlanningRecordSiteID = table.Column<string>(name: "Planning Record.Site ID", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PlanningRecordPR_Nameofsite = table.Column<string>(name: "Planning Record.PR_Name of site", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PlanningRecordNameManualoverwrite = table.Column<bool>(name: "Planning Record.Name - Manual overwrite?", type: "bit", nullable: true),
                    PlanningRecordAddressofsite = table.Column<string>(name: "Planning Record.Address of site", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PlanningRecordAddressManualoverwrite = table.Column<bool>(name: "Planning Record.Address - Manual overwrite?", type: "bit", nullable: true),
                    PlanningRecordPostcodeofsite = table.Column<string>(name: "Planning Record.Postcode of site", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PlanningRecordPostcodeManualoverwrite = table.Column<bool>(name: "Planning Record.Postcode - Manual overwrite?", type: "bit", nullable: true),
                    PlanningRecordLocalplanningauthority = table.Column<string>(name: "Planning Record.Local planning authority", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PlanningRecordPlanningappraisalcompleted = table.Column<string>(name: "Planning Record.Planning appraisal completed", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PlanningRecordDateplanningappraisalcompletedactual = table.Column<DateTime>(name: "Planning Record.Date planning appraisal completed (actual)", type: "date", nullable: true),
                    PlanningRecordIsplanningpermissionrequired = table.Column<string>(name: "Planning Record.Is planning permission required?", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PlanningRecordTypeofplanningrequired = table.Column<string>(name: "Planning Record.Type of planning required", type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true),
                    PlanningRecordDatelettersenttolocalplanningauthorityForecast = table.Column<DateTime>(name: "Planning Record.Date letter sent to local planning authority (Forecast)", type: "date", nullable: true),
                    PlanningRecordDatelettersenttolocalplanningauthorityActual = table.Column<DateTime>(name: "Planning Record.Date letter sent to local planning authority (Actual)", type: "date", nullable: true),
                    PlanningRecordClassCexpirydateActual = table.Column<DateTime>(name: "Planning Record.Class C expiry date (Actual)", type: "date", nullable: true),
                    PlanningRecordDescriptionofdevelopment = table.Column<string>(name: "Planning Record.Description of development", type: "varchar(max)", unicode: false, nullable: true),
                    PlanningRecordLPAapplicationreference = table.Column<string>(name: "Planning Record.LPA application reference", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PlanningRecordDateplanningapplicationsubmittedforecast = table.Column<DateTime>(name: "Planning Record.Date planning application submitted (forecast)", type: "date", nullable: true),
                    PlanningRecordDateplanningapplicationsubmittedactual = table.Column<DateTime>(name: "Planning Record.Date planning application submitted (actual)", type: "date", nullable: true),
                    PlanningRecordDateplanningapplicationvalidatedactual = table.Column<DateTime>(name: "Planning Record.Date planning application validated (actual)", type: "date", nullable: true),
                    PlanningRecordDateofstatutorydeterminationactual = table.Column<DateTime>(name: "Planning Record.Date of statutory determination (actual)", type: "date", nullable: true),
                    PlanningRecordDateofplanningdecisionnoticeforecast = table.Column<DateTime>(name: "Planning Record.Date of planning decision notice (forecast)", type: "date", nullable: true),
                    PlanningRecordDateofplanningdecisionnoticeactual = table.Column<DateTime>(name: "Planning Record.Date of planning decision notice (actual)", type: "date", nullable: true),
                    PlanningRecordPlanningdecision = table.Column<string>(name: "Planning Record.Planning decision", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PlanningRecordWasplanningsecuredintimeforschoolrequirements = table.Column<string>(name: "Planning Record.Was planning secured in time for school requirements?", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PlanningRecordJRchallengeperiodfinishedactual = table.Column<DateTime>(name: "Planning Record.JR challenge period finished (actual)", type: "date", nullable: true),
                    PlanningRecordAppealrequired = table.Column<string>(name: "Planning Record.Appeal required?", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PlanningRecordAppealprocedure = table.Column<string>(name: "Planning Record.Appeal procedure", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PlanningRecordDateappealsubmittedforecast = table.Column<DateTime>(name: "Planning Record.Date appeal submitted (forecast)", type: "date", nullable: true),
                    PlanningRecordDateappealsubmittedactual = table.Column<DateTime>(name: "Planning Record.Date appeal submitted (actual)", type: "date", nullable: true),
                    PlanningRecordDateappealvalidatedactual = table.Column<DateTime>(name: "Planning Record.Date appeal validated (actual)", type: "date", nullable: true),
                    PlanningRecordDateofappealdecisionnoticeforecast = table.Column<DateTime>(name: "Planning Record.Date of appeal decision notice (forecast)", type: "date", nullable: true),
                    PlanningRecordDateofappealdecisionnoticeactual = table.Column<DateTime>(name: "Planning Record.Date of appeal decision notice (actual)", type: "date", nullable: true),
                    PlanningRecordAppealdecision = table.Column<string>(name: "Planning Record.Appeal decision", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PlanningRecordPlanningpermissionlimitedtoaspecifictimeandexpiryperiod = table.Column<string>(name: "Planning Record.Planning permission limited to a specific time and expiry period", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PlanningRecordPR_Planningpermissionexpirydateactual = table.Column<DateTime>(name: "Planning Record.PR_Planning permission expiry date (actual)", type: "date", nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "Planning_QA",
                columns: table => new
                {
                    Month = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    Planningriskhighlight = table.Column<int>(name: "Planning risk highlight", type: "int", nullable: false),
                    Typeofplanningrequiredhighlight = table.Column<int>(name: "Type of planning required highlight", type: "int", nullable: false),
                    DatelettersenttolocalplanningauthorityForecasthighlight = table.Column<int>(name: "Date letter sent to local planning authority (Forecast) highlight", type: "int", nullable: false),
                    DatelettersenttolocalplanningauthorityActualhighlight = table.Column<int>(name: "Date letter sent to local planning authority (Actual) highlight", type: "int", nullable: false),
                    ClassCexpirydateActualhighlight = table.Column<int>(name: "Class C expiry date (Actual) highlight", type: "int", nullable: false),
                    LPAapplicationreferencehighlight = table.Column<int>(name: "LPA application reference highlight", type: "int", nullable: false),
                    Dateplanningapplicationsubmittedforecasthighlight = table.Column<int>(name: "Date planning application submitted (forecast) highlight", type: "int", nullable: false),
                    Dateplanningapplicationsubmittedactualhighlight = table.Column<int>(name: "Date planning application submitted (actual) highlight", type: "int", nullable: false),
                    Dateplanningapplicationvalidatedactualhighlight = table.Column<int>(name: "Date planning application validated (actual) highlight", type: "int", nullable: false),
                    Dateofstatutorydeterminationactualhighlight = table.Column<int>(name: "Date of statutory determination (actual) highlight", type: "int", nullable: false),
                    Dateofplanningdecisionnoticeforecasthighlight = table.Column<int>(name: "Date of planning decision notice (forecast) highlight", type: "int", nullable: false),
                    Dateofplanningdecisionnoticeactualhighlight = table.Column<int>(name: "Date of planning decision notice (actual) highlight", type: "int", nullable: false),
                    Appealrequiredhighlight = table.Column<int>(name: "Appeal required? highlight", type: "int", nullable: false),
                    Appealprocedurehighlight = table.Column<int>(name: "Appeal procedure highlight", type: "int", nullable: false),
                    Dateappealsubmittedforecasthighlight = table.Column<int>(name: "Date appeal submitted (forecast) highlight", type: "int", nullable: false),
                    Dateappealsubmittedactualhighlight = table.Column<int>(name: "Date appeal submitted (actual) highlight", type: "int", nullable: false),
                    Dateappealvalidatedactualhighlight = table.Column<int>(name: "Date appeal validated (actual) highlight", type: "int", nullable: false),
                    Dateofappealdecisionnoticeforecasthighlight = table.Column<int>(name: "Date of appeal decision notice (forecast) highlight", type: "int", nullable: false),
                    Dateofappealdecisionnoticeactualhighlight = table.Column<int>(name: "Date of appeal decision notice (actual) highlight", type: "int", nullable: false),
                    Planningpermissionlimitedtoaspecifictimeandexpiryperiodhighlight = table.Column<int>(name: "Planning permission limited to a specific time and expiry period highlight", type: "int", nullable: false),
                    Planningpermissionexpirydateactualhighlight = table.Column<int>(name: "Planning permission expiry date (actual) highlight", type: "int", nullable: false)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "PO",
                columns: table => new
                {
                    p_rid = table.Column<string>(type: "varchar(11)", unicode: false, maxLength: 11, nullable: true),
                    RID = table.Column<string>(type: "varchar(11)", unicode: false, maxLength: 11, nullable: true),
                    PupilnumbersandcapacityAdmissionsbody = table.Column<string>(name: "Pupil numbers and capacity.Admissions body", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityYRY6capacity = table.Column<string>(name: "Pupil numbers and capacity.YR-Y6 capacity", type: "varchar(4)", unicode: false, maxLength: 4, nullable: true),
                    PupilnumbersandcapacityY7Y11capacity = table.Column<string>(name: "Pupil numbers and capacity.Y7-Y11 capacity", type: "varchar(4)", unicode: false, maxLength: 4, nullable: true),
                    PupilnumbersandcapacityYRY11pre16capacity = table.Column<string>(name: "Pupil numbers and capacity.YR-Y11 (pre-16) capacity", type: "varchar(4)", unicode: false, maxLength: 4, nullable: true),
                    PupilnumbersandcapacityY12Y14post16capacity = table.Column<string>(name: "Pupil numbers and capacity.Y12-Y14 (post-16) capacity", type: "varchar(4)", unicode: false, maxLength: 4, nullable: true),
                    PupilnumbersandcapacityTotalofcapacitytotals = table.Column<string>(name: "Pupil numbers and capacity.Total of capacity totals", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityManualoverwrite = table.Column<bool>(name: "Pupil numbers and capacity.Manual overwrite?", type: "bit", nullable: true),
                    PupilnumbersandcapacitySpecialistResourceProvisionSpecial = table.Column<string>(name: "Pupil numbers and capacity.Specialist Resource Provision - Special", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacitySpecialistResourceProvisionAP = table.Column<string>(name: "Pupil numbers and capacity.Specialist Resource Provision - AP", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityNurseryunder5s = table.Column<string>(name: "Pupil numbers and capacity.Nursery (under 5s)", type: "varchar(4)", unicode: false, maxLength: 4, nullable: true),
                    PupilnumbersandcapacityYRPAN = table.Column<string>(name: "Pupil numbers and capacity.YR PAN", type: "varchar(4)", unicode: false, maxLength: 4, nullable: true),
                    PupilnumbersandcapacityY7PAN = table.Column<string>(name: "Pupil numbers and capacity.Y7 PAN", type: "varchar(4)", unicode: false, maxLength: 4, nullable: true),
                    PupilnumbersandcapacityY10PAN = table.Column<string>(name: "Pupil numbers and capacity.Y10 PAN", type: "varchar(4)", unicode: false, maxLength: 4, nullable: true),
                    PupilnumbersandcapacityYotherPANpre16 = table.Column<string>(name: "Pupil numbers and capacity.Y other PAN pre-16", type: "varchar(4)", unicode: false, maxLength: 4, nullable: true),
                    PupilnumbersandcapacityTotalPANpre16 = table.Column<string>(name: "Pupil numbers and capacity.Total PAN: pre-16", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityY12PAN = table.Column<string>(name: "Pupil numbers and capacity.Y12 PAN", type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    PupilnumbersandcapacityYotherPANpost16 = table.Column<string>(name: "Pupil numbers and capacity.Y other PAN post-16", type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    PupilnumbersandcapacityTotalPANpost16 = table.Column<string>(name: "Pupil numbers and capacity.Total PAN: post-16", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityMinimumfirstyearrecruitmentforviabilityYRY6 = table.Column<string>(name: "Pupil numbers and capacity.Minimum first year recruitment for viability YR-Y6", type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    PupilnumbersandcapacityNoapplicationsreceivedYRY6 = table.Column<string>(name: "Pupil numbers and capacity.No. applications received YR-Y6", type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    PupilnumbersandcapacityreceivedapplicationsvsPANYRY6 = table.Column<string>(name: "Pupil numbers and capacity.% received applications vs PAN YR-Y6", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityreceivedapplicationsvsviabilityYRY6 = table.Column<string>(name: "Pupil numbers and capacity.% received applications vs viability YR-Y6", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityNoapplicationsacceptedYRY6 = table.Column<string>(name: "Pupil numbers and capacity.No. applications accepted YR-Y6", type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    PupilnumbersandcapacityacceptedapplicationsvsPANYRY6 = table.Column<string>(name: "Pupil numbers and capacity.% accepted applications vs PAN YR-Y6", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityacceptedapplicationsvsviabilityYRY6 = table.Column<string>(name: "Pupil numbers and capacity.% accepted applications vs viability YR-Y6", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityMinimumfirstyearrecruitmentforviabilityY7Y11 = table.Column<string>(name: "Pupil numbers and capacity.Minimum first year recruitment for viability Y7-Y11", type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    PupilnumbersandcapacityNoapplicationsreceivedY7Y11 = table.Column<string>(name: "Pupil numbers and capacity.No. applications received Y7-Y11", type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    PupilnumbersandcapacityreceivedapplicationsvsPANY7Y11 = table.Column<string>(name: "Pupil numbers and capacity.% received applications vs PAN Y7-Y11", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityreceivedapplicationsvsviabilityY7Y11 = table.Column<string>(name: "Pupil numbers and capacity.% received applications vs viability Y7-Y11", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityNoapplicationsacceptedY7Y11 = table.Column<string>(name: "Pupil numbers and capacity.No. applications accepted Y7-Y11", type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    PupilnumbersandcapacityacceptedapplicationsvsPANY7Y11 = table.Column<string>(name: "Pupil numbers and capacity.% accepted applications vs PAN Y7-Y11", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityacceptedapplicationsvsviabilityY7Y11 = table.Column<string>(name: "Pupil numbers and capacity.% accepted applications vs viability Y7-Y11", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityMinimumfirstyearrecruitmentforviabilityY12Y14 = table.Column<string>(name: "Pupil numbers and capacity.Minimum first year recruitment for viability Y12-Y14", type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    PupilnumbersandcapacityNoapplicationsreceivedY12Y14 = table.Column<string>(name: "Pupil numbers and capacity.No. applications received Y12-Y14", type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    PupilnumbersandcapacityreceivedapplicationsvsviabilityY12Y14 = table.Column<string>(name: "Pupil numbers and capacity.% received applications vs viability Y12-Y14", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityreceivedapplicationsvsPANY12Y14 = table.Column<string>(name: "Pupil numbers and capacity.% received applications vs PAN Y12-Y14", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityNoapplicationsacceptedY12Y14 = table.Column<string>(name: "Pupil numbers and capacity.No. applications accepted Y12-Y14", type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    PupilnumbersandcapacityacceptedapplicationsvsPANY12Y14 = table.Column<string>(name: "Pupil numbers and capacity.% accepted applications vs PAN Y12-Y14", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityacceptedapplicationsvsviabilityY12Y14 = table.Column<string>(name: "Pupil numbers and capacity.% accepted applications vs viability Y12-Y14", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityMinimumfirstyearrecruitmentforviabilityTotal = table.Column<string>(name: "Pupil numbers and capacity.Minimum first year recruitment for viability Total", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityNoapplicationsreceivedTotal = table.Column<string>(name: "Pupil numbers and capacity.No. applications received Total", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityNoapplicationsacceptedTotal = table.Column<string>(name: "Pupil numbers and capacity.No. applications accepted Total", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityAcademicyearFirstyear = table.Column<string>(name: "Pupil numbers and capacity.Academic year - First year", type: "varchar(4)", unicode: false, maxLength: 4, nullable: true),
                    PupilnumbersandcapacityAcademicyearSecondyear = table.Column<string>(name: "Pupil numbers and capacity.Academic year - Second year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityAcademicyearThirdyear = table.Column<string>(name: "Pupil numbers and capacity.Academic year- Third year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityAcademicyearFourthyear = table.Column<string>(name: "Pupil numbers and capacity.Academic year - Fourth year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityAcademicyearFifthyear = table.Column<string>(name: "Pupil numbers and capacity.Academic year - Fifth year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityAcademicyearSixthyear = table.Column<string>(name: "Pupil numbers and capacity.Academic year - Sixth year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityAcademicyearSeventhyear = table.Column<string>(name: "Pupil numbers and capacity.Academic year - Seventh year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_A1Nurserycurrentpupilnumbersifalreadyopen = table.Column<string>(name: "Pupil numbers and capacity.Cell_A1 Nursery - current pupil numbers (if already open)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_B1NurseryFirstyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_B1 Nursery - First year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_C1NurserySecondyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_C1 Nursery - Second year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_D1NurseryThirdyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_D1 Nursery - Third year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_E1NurseryFourthyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_E1 Nursery - Fourth year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_F1NurseryFifthyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_F1 Nursery - Fifth year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_G1NurserySixthyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_G1 Nursery - Sixth year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_H1NurserySeventhyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_H1 Nursery - Seventh year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_A2Receptioncurrentpupilnumbersifalreadyopen = table.Column<string>(name: "Pupil numbers and capacity.Cell_A2 Reception - current pupil numbers (if already open)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_B2ReceptionFirstyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_B2 Reception - First year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_C2ReceptionSecondyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_C2 Reception - Second year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_D2ReceptionThirdyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_D2 Reception - Third year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_E2ReceptionFourthyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_E2 Reception - Fourth year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_F2ReceptionFifthyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_F2 Reception - Fifth year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_G2ReceptionSixthyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_G2 Reception - Sixth year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_H2ReceptionSeventhyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_H2 Reception - Seventh year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_A3Year1currentpupilnumbersifalreadyopen = table.Column<string>(name: "Pupil numbers and capacity.Cell_A3 Year 1 - current pupil numbers (if already open)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_B3Year1Firstyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_B3 Year 1 - First year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_C3Year1Secondyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_C3 Year 1 - Second year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_D3Year1Thirdyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_D3 Year 1 - Third year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_E3Year1Fourthyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_E3 Year 1 - Fourth year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_F3Year1Fifthyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_F3 Year 1 - Fifth year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_G3Year1Sixthyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_G3 Year 1 - Sixth year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_H3Year1Seventhyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_H3 Year 1 - Seventh year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_A4Year2currentpupilnumbersifalreadyopen = table.Column<string>(name: "Pupil numbers and capacity.Cell_A4 Year 2 - current pupil numbers (if already open)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_B4Year2Firstyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_B4 Year 2 - First year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_C4Year2Secondyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_C4 Year 2 - Second year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_D4Year2Thirdyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_D4 Year 2 - Third year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_E4Year2Fourthyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_E4 Year 2 - Fourth year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_F4Year2Fifthyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_F4 Year 2 - Fifth year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_G4Year2Sixthyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_G4 Year 2 - Sixth year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_H4Year2Seventhyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_H4 Year 2 - Seventh year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_A5Year3currentpupilnumbersifalreadyopen = table.Column<string>(name: "Pupil numbers and capacity.Cell_A5 Year 3 - current pupil numbers (if already open)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_B5Year3Firstyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_B5 Year 3 - First year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_C5Year3Secondyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_C5 Year 3 - Second year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_D5Year3Thirdyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_D5 Year 3 - Third year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_E5Year3Fourthyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_E5 Year 3 - Fourth year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_F5Year3Fifthyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_F5 Year 3 - Fifth year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_G5Year3Sixthyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_G5 Year 3 - Sixth year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_H5Year3Seventhyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_H5 Year 3 - Seventh year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_A6Year4currentpupilnumbersifalreadyopen = table.Column<string>(name: "Pupil numbers and capacity.Cell_A6 Year 4 - current pupil numbers (if already open)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_B6Year4Firstyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_B6 Year 4 - First year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_C6Year4Secondyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_C6 Year 4 - Second year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_D6Year4Thirdyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_D6 Year 4 - Third year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_E6Year4Fourthyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_E6 Year 4 - Fourth year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_F6Year4Fifthyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_F6 Year 4 - Fifth year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_G6Year4Sixthyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_G6 Year 4 - Sixth year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_H6Year4Seventhyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_H6 Year 4 - Seventh year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_A7Year5currentpupilnumbersifalreadyopen = table.Column<string>(name: "Pupil numbers and capacity.Cell_A7 Year 5 - current pupil numbers (if already open)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_B7Year5Firstyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_B7 Year 5 - First year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_C7Year5Secondyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_C7 Year 5 - Second year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_D7Year5Thirdyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_D7 Year 5 - Third year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_E7Year5Fourthyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_E7 Year 5 - Fourth year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_F7Year5Fifthyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_F7 Year 5 - Fifth year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_G7Year5Sixthyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_G7 Year 5 - Sixth year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_H7Year5Seventhyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_H7 Year 5 - Seventh year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_A8Year6currentpupilnumbersifalreadyopen = table.Column<string>(name: "Pupil numbers and capacity.Cell_A8 Year 6 - current pupil numbers (if already open)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_B8Year6Firstyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_B8 Year 6 - First year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_C8Year6Secondyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_C8 Year 6 - Second year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_D8Year6Thirdyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_D8 Year 6 - Third year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_E8Year6Fourthyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_E8 Year 6 - Fourth year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_F8Year6Fifthyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_F8 Year 6 - Fifth year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_G8Year6Sixthyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_G8 Year 6 - Sixth year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_H8Year6Seventhyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_H8 Year 6 - Seventh year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_A9Year7currentpupilnumbersifalreadyopen = table.Column<string>(name: "Pupil numbers and capacity.Cell_A9 Year 7 - current pupil numbers (if already open)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_B9Year7Firstyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_B9 Year 7 - First year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_C9Year7Secondyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_C9 Year 7 - Second year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_D9Year7Thirdyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_D9 Year 7 - Third year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_E9Year7Fourthyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_E9 Year 7 - Fourth year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_F9Year7Fifthyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_F9 Year 7 - Fifth year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_G9Year7Sixthyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_G9 Year 7 - Sixth year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_H9Year7Seventhyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_H9 Year 7 - Seventh year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_A10Year8currentpupilnumbersifalreadyopen = table.Column<string>(name: "Pupil numbers and capacity.Cell_A10 Year 8 - current pupil numbers (if already open)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_B10Year8Firstyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_B10 Year 8 - First year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_C10Year8Secondyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_C10 Year 8 - Second year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_D10Year8Thirdyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_D10 Year 8 - Third year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_E10Year8Fourthyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_E10 Year 8 - Fourth year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_F10Year8Fifthyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_F10 Year 8 - Fifth year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_G10Year8Sixthyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_G10 Year 8 - Sixth year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_H10Year8Seventhyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_H10 Year 8 - Seventh year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_A11Year9currentpupilnumbersifalreadyopen = table.Column<string>(name: "Pupil numbers and capacity.Cell_A11 Year 9 - current pupil numbers (if already open)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_B11Year9Firstyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_B11 Year 9 - First year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_C11Year9Secondyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_C11 Year 9 - Second year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_D11Year9Thirdyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_D11 Year 9 - Third year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_E11Year9Fourthyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_E11 Year 9 - Fourth year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_F11Year9Fifthyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_F11 Year 9 - Fifth year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_G11Year9Sixthyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_G11 Year 9 - Sixth year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_H11Year9Seventhyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_H11 Year 9 - Seventh year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_A12Year10currentpupilnumbersifalreadyopen = table.Column<string>(name: "Pupil numbers and capacity.Cell_A12 Year 10 - current pupil numbers (if already open)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_B12Year10Firstyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_B12 Year 10 - First year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_C12Year10Secondyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_C12 Year 10 - Second year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_D12Year10Thirdyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_D12 Year 10 - Third year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_E12Year10Fourthyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_E12 Year 10 - Fourth year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_F12Year10Fifthyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_F12 Year 10 - Fifth year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_G12Year10Sixthyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_G12 Year 10 - Sixth year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_H12Year10Seventhyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_H12 Year 10 - Seventh year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_A13Year11currentpupilnumbersifalreadyopen = table.Column<string>(name: "Pupil numbers and capacity.Cell_A13 Year 11 - current pupil numbers (if already open)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_B13Year11Firstyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_B13 Year 11 - First year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_C13Year11Secondyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_C13 Year 11 - Second year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_D13Year11Thirdyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_D13 Year 11 - Third year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_E13Year11Fourthyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_E13 Year 11 - Fourth year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_F13Year11Fifthyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_F13 Year 11 - Fifth year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_G13Year11Sixthyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_G13 Year 11 - Sixth year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_H13Year11Seventhyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_H13 Year 11 - Seventh year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityTotalpre16A = table.Column<string>(name: "Pupil numbers and capacity.Total pre-16 A", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityTotalpre16B = table.Column<string>(name: "Pupil numbers and capacity.Total pre-16 B", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityTotalpre16C = table.Column<string>(name: "Pupil numbers and capacity.Total pre-16 C", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityTotalpre16D = table.Column<string>(name: "Pupil numbers and capacity.Total pre-16 D", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityTotalpre16E = table.Column<string>(name: "Pupil numbers and capacity.Total pre-16 E", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityTotalpre16F = table.Column<string>(name: "Pupil numbers and capacity.Total pre-16 F", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityTotalpre16G = table.Column<string>(name: "Pupil numbers and capacity.Total pre-16 G", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityTotalpre16H = table.Column<string>(name: "Pupil numbers and capacity.Total pre-16 H", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_A14Year12currentpupilnumbersifalreadyopen = table.Column<string>(name: "Pupil numbers and capacity.Cell_A14 Year 12 - current pupil numbers (if already open)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_B14Year12Firstyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_B14 Year 12 - First year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_C14Year12Secondyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_C14 Year 12 - Second year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_D14Year12Thirdyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_D14 Year 12 - Third year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_E14Year12Fourthyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_E14 Year 12 - Fourth year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_F14Year12Fifthyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_F14 Year 12 - Fifth year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_G14Year12Sixthyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_G14 Year 12 - Sixth year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_H14Year12Seventhyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_H14 Year 12 - Seventh year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_A15Year13currentpupilnumbersifalreadyopen = table.Column<string>(name: "Pupil numbers and capacity.Cell_A15 Year 13 - current pupil numbers (if already open)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_B15Year13Firstyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_B15 Year 13 - First year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_C15Year13Secondyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_C15 Year 13 - Second year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_D15Year13Thirdyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_D15 Year 13 - Third year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_E15Year13Fourthyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_E15 Year 13 - Fourth year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_F15Year13Fifthyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_F15 Year 13 - Fifth year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_G15Year13Sixthyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_G15 Year 13 - Sixth year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_H15Year13Seventhyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_H15 Year 13 - Seventh year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_A16Year14currentpupilnumbersifalreadyopen = table.Column<string>(name: "Pupil numbers and capacity.Cell_A16 Year 14 - current pupil numbers (if already open)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_B16Year14Firstyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_B16 Year 14 - First year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_C16Year14Secondyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_C16 Year 14 - Second year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_D16Year14Thirdyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_D16 Year 14 - Third year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_E16Year14Fourthyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_E16 Year 14 - Fourth year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_F16Year14Fifthyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_F16 Year 14 - Fifth year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_G16Year14Sixthyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_G16 Year 14 - Sixth year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_H16Year14Seventhyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_H16 Year 14 - Seventh year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityTotalpost16A = table.Column<string>(name: "Pupil numbers and capacity.Total post-16 A", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityTotalpost16B = table.Column<string>(name: "Pupil numbers and capacity.Total post-16 B", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityTotalpost16C = table.Column<string>(name: "Pupil numbers and capacity.Total post-16 C", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityTotalpost16D = table.Column<string>(name: "Pupil numbers and capacity.Total post-16 D", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityTotalpost16E = table.Column<string>(name: "Pupil numbers and capacity.Total post-16 E", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityTotalpost16F = table.Column<string>(name: "Pupil numbers and capacity.Total post-16 F", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityTotalpost16G = table.Column<string>(name: "Pupil numbers and capacity.Total post-16 G", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityTotalpost16H = table.Column<string>(name: "Pupil numbers and capacity.Total post-16 H", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_TotalATotalcurrentpupilnumbersifalreadyopen = table.Column<string>(name: "Pupil numbers and capacity.Cell_TotalA Total - current pupil numbers (if already open)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_TotalBTotalFirstyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_TotalB Total - First year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_TotalCTotalSecondyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_TotalC Total - Second year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_TotalDTotalThirdyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_TotalD Total - Third year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_TotalETotalFourthyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_TotalE Total - Fourth year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_TotalFTotalFifthyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_TotalF Total - Fifth year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_TotalGTotalSixthyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_TotalG Total - Sixth year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PupilnumbersandcapacityCell_TotalHTotalSeventhyear = table.Column<string>(name: "Pupil numbers and capacity.Cell_TotalH Total - Seventh year", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FinancialPlanningOptintoRPA = table.Column<string>(name: "Financial Planning.Opt in to RPA", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FinancialPlanningStartdateofRPA = table.Column<DateTime>(name: "Financial Planning.Start date of RPA", type: "date", nullable: true),
                    FinancialPlanningTypeofRPAcover = table.Column<string>(name: "Financial Planning.Type of RPA cover", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectDevelopmentGrantFundingInitialgrantallocation = table.Column<string>(name: "Project Development Grant Funding.Initial grant allocation", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectDevelopmentGrantFundingRevisedgrantallocation = table.Column<string>(name: "Project Development Grant Funding.Revised grant allocation", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectDevelopmentGrantFundingManuallyoverwrite = table.Column<bool>(name: "Project Development Grant Funding.Manually overwrite?", type: "bit", nullable: true),
                    ProjectDevelopmentGrantFundingDatenextfinancialstatementbudgetprofileisdueback = table.Column<DateTime>(name: "Project Development Grant Funding.Date next financial statement / budget profile is due back", type: "date", nullable: true),
                    ProjectDevelopmentGrantFundingTotalpaymentsmade = table.Column<string>(name: "Project Development Grant Funding.Total payments made", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectDevelopmentGrantFundingPO01_ManuallyOverwrite = table.Column<bool>(name: "Project Development Grant Funding.PO01_Manually Overwrite", type: "bit", nullable: true),
                    ProjectDevelopmentGrantFundingPaymentamountwrittenoff = table.Column<string>(name: "Project Development Grant Funding.Payment amount written off", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectDevelopmentGrantFundingPaymentsstopped = table.Column<string>(name: "Project Development Grant Funding.Payments stopped", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectDevelopmentGrantFundingDatepaymentsstopped = table.Column<DateTime>(name: "Project Development Grant Funding.Date payments stopped", type: "date", nullable: true),
                    ProjectDevelopmentGrantFundingStoppedpaymentsauthorisedby = table.Column<string>(name: "Project Development Grant Funding.Stopped payments authorised by", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectDevelopmentGrantFundingDateof1stpaymentdue = table.Column<DateTime>(name: "Project Development Grant Funding.Date of 1st payment due", type: "date", nullable: true),
                    ProjectDevelopmentGrantFundingAmountof1stpaymentdue = table.Column<string>(name: "Project Development Grant Funding.Amount of 1st payment due", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectDevelopmentGrantFundingDateof2ndpaymentdue = table.Column<DateTime>(name: "Project Development Grant Funding.Date of 2nd payment due", type: "date", nullable: true),
                    ProjectDevelopmentGrantFundingAmountof2ndpaymentdue = table.Column<string>(name: "Project Development Grant Funding.Amount of 2nd payment due", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectDevelopmentGrantFundingDateof3rdpaymentdue = table.Column<DateTime>(name: "Project Development Grant Funding.Date of 3rd payment due", type: "date", nullable: true),
                    ProjectDevelopmentGrantFundingAmountof3rdpaymentdue = table.Column<string>(name: "Project Development Grant Funding.Amount of 3rd payment due", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectDevelopmentGrantFundingDateof4thpaymentdue = table.Column<DateTime>(name: "Project Development Grant Funding.Date of 4th payment due", type: "date", nullable: true),
                    ProjectDevelopmentGrantFundingAmountof4thpaymentdue = table.Column<string>(name: "Project Development Grant Funding.Amount of 4th payment due", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectDevelopmentGrantFundingDateof5thpaymentdue = table.Column<DateTime>(name: "Project Development Grant Funding.Date of 5th payment due", type: "date", nullable: true),
                    ProjectDevelopmentGrantFundingAmountof5thpaymentdue = table.Column<string>(name: "Project Development Grant Funding.Amount of 5th payment due", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectDevelopmentGrantFundingDateof6thpaymentdue = table.Column<DateTime>(name: "Project Development Grant Funding.Date of 6th payment due", type: "date", nullable: true),
                    ProjectDevelopmentGrantFundingAmountof6thpaymentdue = table.Column<string>(name: "Project Development Grant Funding.Amount of 6th payment due", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectDevelopmentGrantFundingDateof7thpaymentdue = table.Column<DateTime>(name: "Project Development Grant Funding.Date of 7th payment due", type: "date", nullable: true),
                    ProjectDevelopmentGrantFundingAmountof7thpaymentdue = table.Column<string>(name: "Project Development Grant Funding.Amount of 7th payment due", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectDevelopmentGrantFundingDateof8thpaymentdue = table.Column<DateTime>(name: "Project Development Grant Funding.Date of 8th payment due", type: "date", nullable: true),
                    ProjectDevelopmentGrantFundingAmountof8thpaymentdue = table.Column<string>(name: "Project Development Grant Funding.Amount of 8th payment due", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectDevelopmentGrantFundingDateof9thpaymentdue = table.Column<DateTime>(name: "Project Development Grant Funding.Date of 9th payment due", type: "date", nullable: true),
                    ProjectDevelopmentGrantFundingAmountof9thpaymentdue = table.Column<string>(name: "Project Development Grant Funding.Amount of 9th payment due", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectDevelopmentGrantFundingDateof10thpaymentdue = table.Column<DateTime>(name: "Project Development Grant Funding.Date of 10th payment due", type: "date", nullable: true),
                    ProjectDevelopmentGrantFundingAmountof10thpaymentdue = table.Column<string>(name: "Project Development Grant Funding.Amount of 10th payment due", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectDevelopmentGrantFundingDateof11thpaymentdue = table.Column<DateTime>(name: "Project Development Grant Funding.Date of 11th payment due", type: "date", nullable: true),
                    ProjectDevelopmentGrantFundingAmountof11thpaymentdue = table.Column<string>(name: "Project Development Grant Funding.Amount of 11th payment due", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectDevelopmentGrantFundingDateof12thpaymentdue = table.Column<DateTime>(name: "Project Development Grant Funding.Date of 12th payment due", type: "date", nullable: true),
                    ProjectDevelopmentGrantFundingAmountof12thpaymentdue = table.Column<string>(name: "Project Development Grant Funding.Amount of 12th payment due", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectDevelopmentGrantFundingDateof1stactualpayment = table.Column<DateTime>(name: "Project Development Grant Funding.Date of 1st actual payment", type: "date", nullable: true),
                    ProjectDevelopmentGrantFundingAmountof1stpayment = table.Column<string>(name: "Project Development Grant Funding.Amount of 1st payment", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectDevelopmentGrantFundingDateof2ndactualpayment = table.Column<DateTime>(name: "Project Development Grant Funding.Date of 2nd actual payment", type: "date", nullable: true),
                    ProjectDevelopmentGrantFundingAmountof2ndpayment = table.Column<string>(name: "Project Development Grant Funding.Amount of 2nd payment", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectDevelopmentGrantFundingDateof3rdactualpayment = table.Column<DateTime>(name: "Project Development Grant Funding.Date of 3rd actual payment", type: "date", nullable: true),
                    ProjectDevelopmentGrantFundingAmountof3rdpayment = table.Column<string>(name: "Project Development Grant Funding.Amount of 3rd payment", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectDevelopmentGrantFundingDateof4thactualpayment = table.Column<DateTime>(name: "Project Development Grant Funding.Date of 4th actual payment", type: "date", nullable: true),
                    ProjectDevelopmentGrantFundingAmountof4thpayment = table.Column<string>(name: "Project Development Grant Funding.Amount of 4th payment", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectDevelopmentGrantFundingDateof5thactualpayment = table.Column<DateTime>(name: "Project Development Grant Funding.Date of 5th actual payment", type: "date", nullable: true),
                    ProjectDevelopmentGrantFundingAmountof5thpayment = table.Column<string>(name: "Project Development Grant Funding.Amount of 5th payment", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectDevelopmentGrantFundingDateof6thactualpayment = table.Column<DateTime>(name: "Project Development Grant Funding.Date of 6th actual payment", type: "date", nullable: true),
                    ProjectDevelopmentGrantFundingAmountof6thpayment = table.Column<string>(name: "Project Development Grant Funding.Amount of 6th payment", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectDevelopmentGrantFundingDateof7thactualpayment = table.Column<DateTime>(name: "Project Development Grant Funding.Date of 7th actual payment", type: "date", nullable: true),
                    ProjectDevelopmentGrantFundingAmountof7thpayment = table.Column<string>(name: "Project Development Grant Funding.Amount of 7th payment", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectDevelopmentGrantFundingDateof8thactualpayment = table.Column<DateTime>(name: "Project Development Grant Funding.Date of 8th actual payment", type: "date", nullable: true),
                    ProjectDevelopmentGrantFundingAmountof8thpayment = table.Column<string>(name: "Project Development Grant Funding.Amount of 8th payment", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectDevelopmentGrantFundingDateof9thactualpayment = table.Column<DateTime>(name: "Project Development Grant Funding.Date of 9th actual payment", type: "date", nullable: true),
                    ProjectDevelopmentGrantFundingAmountof9thpayment = table.Column<string>(name: "Project Development Grant Funding.Amount of 9th payment", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectDevelopmentGrantFundingDateof10thactualpayment = table.Column<DateTime>(name: "Project Development Grant Funding.Date of 10th actual payment", type: "date", nullable: true),
                    ProjectDevelopmentGrantFundingAmountof10thpayment = table.Column<string>(name: "Project Development Grant Funding.Amount of 10th payment", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectDevelopmentGrantFundingDateof11thactualpayment = table.Column<DateTime>(name: "Project Development Grant Funding.Date of 11th actual payment", type: "date", nullable: true),
                    ProjectDevelopmentGrantFundingAmountof11thpayment = table.Column<string>(name: "Project Development Grant Funding.Amount of 11th payment", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectDevelopmentGrantFundingDateof12thactualpayment = table.Column<DateTime>(name: "Project Development Grant Funding.Date of 12th actual payment", type: "date", nullable: true),
                    ProjectDevelopmentGrantFundingAmountof12thpayment = table.Column<string>(name: "Project Development Grant Funding.Amount of 12th payment", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectDevelopmentGrantFundingDateof1strefund = table.Column<DateTime>(name: "Project Development Grant Funding.Date of 1st refund", type: "date", nullable: true),
                    ProjectDevelopmentGrantFundingAmountof1strefund = table.Column<string>(name: "Project Development Grant Funding.Amount of 1st refund ", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectDevelopmentGrantFundingDateof2ndrefund = table.Column<DateTime>(name: "Project Development Grant Funding.Date of 2nd refund", type: "date", nullable: true),
                    ProjectDevelopmentGrantFundingAmountof2ndrefund = table.Column<string>(name: "Project Development Grant Funding.Amount of 2nd refund ", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectDevelopmentGrantFundingDateof3rdrefund = table.Column<DateTime>(name: "Project Development Grant Funding.Date of 3rd refund", type: "date", nullable: true),
                    ProjectDevelopmentGrantFundingAmountof3rdrefund = table.Column<string>(name: "Project Development Grant Funding.Amount of 3rd refund", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectDevelopmentGrantFundingPDGgrantletterdate = table.Column<DateTime>(name: "Project Development Grant Funding.PDG grant letter date", type: "date", nullable: true),
                    ProjectDevelopmentGrantFundingPDGgrantletterlink = table.Column<string>(name: "Project Development Grant Funding.PDG grant letter link", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectDevelopmentGrantFunding1stPDGgrantvariationdate = table.Column<DateTime>(name: "Project Development Grant Funding.1st PDG grant variation date", type: "date", nullable: true),
                    ProjectDevelopmentGrantFunding1stPDGgrantvariationlink = table.Column<string>(name: "Project Development Grant Funding.1st PDG grant variation link", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectDevelopmentGrantFunding2ndPDGgrantvariationdate = table.Column<DateTime>(name: "Project Development Grant Funding.2nd PDG grant variation date", type: "date", nullable: true),
                    ProjectDevelopmentGrantFunding2ndPDGgrantvariationlink = table.Column<string>(name: "Project Development Grant Funding.2nd PDG grant variation link", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectDevelopmentGrantFunding3rdPDGgrantvariationdate = table.Column<DateTime>(name: "Project Development Grant Funding.3rd PDG grant variation date", type: "date", nullable: true),
                    ProjectDevelopmentGrantFunding3rdPDGgrantvariationlink = table.Column<string>(name: "Project Development Grant Funding.3rd PDG grant variation link", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectDevelopmentGrantFunding4thPDGgrantvariationdate = table.Column<DateTime>(name: "Project Development Grant Funding.4th PDG grant variation date", type: "date", nullable: true),
                    ProjectDevelopmentGrantFunding4thPDGgrantvariationlink = table.Column<string>(name: "Project Development Grant Funding.4th PDG grant variation link", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectDevelopmentGrantFundingSOPSupplierNumber = table.Column<string>(name: "Project Development Grant Funding.SOP Supplier Number", type: "varchar(8)", unicode: false, maxLength: 8, nullable: true),
                    ProjectDevelopmentGrantFundingSOP7ActionTaken = table.Column<string>(name: "Project Development Grant Funding.SOP7 Action Taken", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectDevelopmentGrantFundingDateSOP7actionTaken = table.Column<DateTime>(name: "Project Development Grant Funding.Date SOP7 action Taken", type: "date", nullable: true),
                    ProjectDevelopmentGrantFundingReasonfor1stwriteoff = table.Column<string>(name: "Project Development Grant Funding.Reason for 1st write off", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectDevelopmentGrantFundingAmountapprovedfor1stwriteoff = table.Column<string>(name: "Project Development Grant Funding.Amount approved for 1st write off", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectDevelopmentGrantFundingDateof1stwriteoff = table.Column<DateTime>(name: "Project Development Grant Funding.Date of 1st write off", type: "date", nullable: true),
                    ProjectDevelopmentGrantFunding1stwriteoffapprovedinFSGby = table.Column<string>(name: "Project Development Grant Funding.1st write off approved in FSG by", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectDevelopmentGrantFundingFinanceBusinessPartnerApprovalreceivedfrom = table.Column<string>(name: "Project Development Grant Funding.Finance Business Partner Approval received from", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectDevelopmentGrantFundingDatewriteoffapprovedbyFinanceBusinessPartners = table.Column<DateTime>(name: "Project Development Grant Funding.Date write off approved by Finance Business Partners", type: "date", nullable: true),
                    ProjectDevelopmentGrantFundingLinkwriteoffpaperworkrepository = table.Column<string>(name: "Project Development Grant Funding.Link write off paperwork repository", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectDevelopmentGrantFundingReasonfor2ndwriteoff = table.Column<string>(name: "Project Development Grant Funding.Reason for 2nd write off", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectDevelopmentGrantFundingAmountapprovedfor2ndwriteoff = table.Column<string>(name: "Project Development Grant Funding.Amount approved for 2nd write off", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectDevelopmentGrantFundingDateof2ndwriteoff = table.Column<DateTime>(name: "Project Development Grant Funding.Date of 2nd write off", type: "date", nullable: true),
                    ProjectDevelopmentGrantFunding2ndwriteoffapprovedinFSGby = table.Column<string>(name: "Project Development Grant Funding.2nd write off approved in FSG by", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectDevelopmentGrantFunding2ndFinanceBusinessPartnerApprovalreceivedfrom = table.Column<string>(name: "Project Development Grant Funding.2nd Finance Business Partner Approval received from", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectDevelopmentGrantFunding2ndDatewriteoffapprovedbyFinanceBusinessPartners = table.Column<DateTime>(name: "Project Development Grant Funding.2nd Date write off approved by Finance Business Partners", type: "date", nullable: true),
                    ProjectDevelopmentGrantFunding2ndLinkwriteoffpaperworkrepository = table.Column<string>(name: "Project Development Grant Funding.2nd Link write off paperwork repository", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectDevelopmentGrantFundingReasonfor3rdwriteoff = table.Column<string>(name: "Project Development Grant Funding.Reason for 3rd write off", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectDevelopmentGrantFundingAmountapprovedfor3rdwriteoff = table.Column<string>(name: "Project Development Grant Funding.Amount approved for 3rd write off", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectDevelopmentGrantFundingDateof3rdwriteoff = table.Column<DateTime>(name: "Project Development Grant Funding.Date of 3rd write off", type: "date", nullable: true),
                    ProjectDevelopmentGrantFunding3rdwriteoffapprovedinFSGby = table.Column<string>(name: "Project Development Grant Funding.3rd write off approved in FSG by", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectDevelopmentGrantFunding3rdFinanceBusinessPartnerApprovalreceivedfrom = table.Column<string>(name: "Project Development Grant Funding.3rd Finance Business Partner Approval received from", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectDevelopmentGrantFunding3rdDatewriteoffapprovedbyFinanceBusinessPartners = table.Column<DateTime>(name: "Project Development Grant Funding.3rd Date write off approved by Finance Business Partners", type: "date", nullable: true),
                    ProjectDevelopmentGrantFunding3rdLinkwriteoffpaperworkrepository = table.Column<string>(name: "Project Development Grant Funding.3rd Link write off paperwork repository", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectDevelopmentGrantFundingReasonforLiability = table.Column<string>(name: "Project Development Grant Funding.Reason for Liability", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectDevelopmentGrantFundingPeriodofUnderwrite = table.Column<string>(name: "Project Development Grant Funding.Period of Underwrite", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectDevelopmentGrantFundingAmounttobeUnderwritten = table.Column<string>(name: "Project Development Grant Funding.Amount to be Underwritten", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectDevelopmentGrantFundingUnderwriteapprovedby = table.Column<string>(name: "Project Development Grant Funding.Underwrite approved by", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectDevelopmentGrantFundingDateunderwriteapproved = table.Column<DateTime>(name: "Project Development Grant Funding.Date underwrite approved", type: "date", nullable: true),
                    ProjectDevelopmentGrantFundingContingencyClearedRealised = table.Column<string>(name: "Project Development Grant Funding.Contingency Cleared / Realised", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectDevelopmentGrantFundingAmountRealised = table.Column<string>(name: "Project Development Grant Funding.Amount Realised", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ProjectDevelopmentGrantFundingAmountCleared = table.Column<string>(name: "Project Development Grant Funding.Amount Cleared", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "PORF",
                columns: table => new
                {
                    p_rid = table.Column<string>(type: "varchar(11)", unicode: false, maxLength: 11, nullable: true),
                    RID = table.Column<string>(type: "varchar(11)", unicode: false, maxLength: 11, nullable: true),
                    PurchaseOrderRequestFormPORFID = table.Column<string>(name: "Purchase Order Request Form.PORF ID", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PurchaseOrderRequestFormPurchaseOrdercreateddate = table.Column<DateTime>(name: "Purchase Order Request Form.Purchase Order created date", type: "date", nullable: true),
                    PurchaseOrderRequestFormPurchaseOrdernumber = table.Column<string>(name: "Purchase Order Request Form.Purchase Order number", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PurchaseOrderRequestFormPurchaseOrderRequestFormVendor = table.Column<string>(name: "Purchase Order Request Form.Purchase Order Request Form - Vendor", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PurchaseOrderRequestFormPORFGLcode = table.Column<string>(name: "Purchase Order Request Form.PORF GL code", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PurchaseOrderRequestFormPurchaseOrderRequestFormTotalvalueexclVAT = table.Column<string>(name: "Purchase Order Request Form.Purchase Order Request Form Total value (excl VAT)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PurchaseOrderRequestFormPurchaseOrderRequestFormVAT = table.Column<string>(name: "Purchase Order Request Form.Purchase Order Request Form VAT", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "PR",
                columns: table => new
                {
                    p_rid = table.Column<string>(type: "varchar(11)", unicode: false, maxLength: 11, nullable: true),
                    RID = table.Column<string>(type: "varchar(11)", unicode: false, maxLength: 11, nullable: true),
                    PreregistrationReferencenumber = table.Column<string>(name: "Preregistration.Reference number", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PreregistrationDatesubmitted = table.Column<DateTime>(name: "Preregistration.Date submitted", type: "date", nullable: true),
                    PreregistrationWhichwavedoyouintendtoapplyfor = table.Column<string>(name: "Preregistration.Which wave do you intend to apply for?", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PreregistrationTrustID = table.Column<string>(name: "Preregistration.Trust ID", type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    PreregistrationTrustname = table.Column<string>(name: "Preregistration.Trust name", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PreregistrationStaticlinktotrustpageonKIM = table.Column<string>(name: "Preregistration.Static link to trust page on KIM", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PreregistrationLeadsponsorID = table.Column<string>(name: "Preregistration.Lead sponsor ID", type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    PreregistrationLeadsponsorname = table.Column<string>(name: "Preregistration.Lead sponsor name", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PreregistrationProposedtrustname = table.Column<string>(name: "Preregistration.Proposed trust name", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PreregistrationIsthisareapplicationieanapplicationthatwaspreviouslyunsuccessful = table.Column<string>(name: "Preregistration.Is this a re-application i.e. an application that was previously unsuccessful? ", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PreregistrationTypeofgroup = table.Column<string>(name: "Preregistration.Type of group", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PreregistrationTypeofgroupother = table.Column<string>(name: "Preregistration.Type of group other", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PreregistrationDoyoualreadyrunoneormorefreeschoolsacademiesorhaveanyinthepipeline = table.Column<string>(name: "Preregistration.Do you already run one or more free schools/academies or have any in the pipeline? ", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PreregistrationHowmanyfreeschoolsareyouapplyingforinthiswave = table.Column<string>(name: "Preregistration.How many free schools are you applying for in this wave?", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PreregistrationNameofleadapplicant = table.Column<string>(name: "Preregistration.Name of lead applicant", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PreregistrationTelephonenumberofleadapplicant = table.Column<string>(name: "Preregistration.Telephone number of lead applicant", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PreregistrationEmailofleadapplicant = table.Column<string>(name: "Preregistration.Email of lead applicant", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PreregistrationNameofpersonsubmittingformifnotleadapplicant = table.Column<string>(name: "Preregistration.Name of person submitting form (if not lead applicant)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PreregistrationTelephoneofpersonsubmittingformifnotleadapplicant = table.Column<string>(name: "Preregistration.Telephone of person submitting form (if not lead applicant)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PreregistrationEmailofpersonsubmittingformifnotleadapplicant = table.Column<string>(name: "Preregistration.Email of person submitting form (if not lead applicant)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PreregistrationDateoflastcontactwithapplicant = table.Column<DateTime>(name: "Preregistration.Date of last contact with applicant", type: "date", nullable: true),
                    PreregistrationContactnotes = table.Column<string>(name: "Preregistration.Contact notes", type: "varchar(max)", unicode: false, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "Property",
                columns: table => new
                {
                    p_rid = table.Column<string>(type: "varchar(11)", unicode: false, maxLength: 11, nullable: true),
                    RID = table.Column<string>(type: "varchar(11)", unicode: false, maxLength: 11, nullable: true),
                    SiteSiteID = table.Column<string>(name: "Site.Site ID", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SiteTypeofsite = table.Column<string>(name: "Site.Type of site", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TOS = table.Column<string>(type: "varchar(9)", unicode: false, maxLength: 9, nullable: false),
                    SiteLocatEDdelivery = table.Column<string>(name: "Site.LocatED delivery", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SiteLocatEDcommissionreference = table.Column<string>(name: "Site.LocatED commission reference", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SiteSiteStatus = table.Column<string>(name: "Site.Site Status", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SiteS106Funding = table.Column<string>(name: "Site.S106 Funding", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SiteNameofsite = table.Column<string>(name: "Site.Name of site", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SiteAddressofsite = table.Column<string>(name: "Site.Address of site", type: "varchar(max)", unicode: false, nullable: true),
                    SitePostcodeofsite = table.Column<string>(name: "Site.Postcode of site", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SiteStartdateofschooloccupationforecast = table.Column<DateTime>(name: "Site.Start date of school occupation (forecast)", type: "date", nullable: true),
                    SiteStartdateofschooloccupationactual = table.Column<DateTime>(name: "Site.Start date of school occupation (actual)", type: "date", nullable: true),
                    SiteEnddateofschooloccupationforecast = table.Column<DateTime>(name: "Site.End date of school occupation (forecast)", type: "date", nullable: true),
                    SiteEnddateofschooloccupationactual = table.Column<DateTime>(name: "Site.End date of school occupation (actual)", type: "date", nullable: true),
                    SiteSiteschoolcurrentlyoperatingfrom = table.Column<string>(name: "Site.Site school currently operating from", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SiteBuildingtype = table.Column<string>(name: "Site.Building type", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SiteDetailofbuildingtypeOther = table.Column<string>(name: "Site.Detail of building type - Other", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SiteAreaofexistingsiteacres = table.Column<string>(name: "Site.Area of existing site (acres)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SiteAreaofexistingbuildingm2 = table.Column<string>(name: "Site.Area of existing building (m2)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SiteMaximumcapacityoftemporarysitenoofpupils = table.Column<string>(name: "Site.Maximum capacity of temporary site (no of pupils)", type: "varchar(6)", unicode: false, maxLength: 6, nullable: true),
                    SiteExistinguseclass = table.Column<string>(name: "Site.Existing use class", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SiteListing = table.Column<string>(name: "Site.Listing", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SiteNumberofstoreys = table.Column<string>(name: "Site.Number of storeys", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SiteTenure = table.Column<string>(name: "Site.Tenure", type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true),
                    SitePleasestatereasonifmorethanonetenuretypeselected = table.Column<string>(name: "Site.Please state reason if more than one tenure type selected", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SiteAcquisitiontype = table.Column<string>(name: "Site.Acquisition type", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SiteSiteidentifiedforecast = table.Column<DateTime>(name: "Site.Site identified (forecast)", type: "date", nullable: true),
                    SiteSiteidentifiedactual = table.Column<DateTime>(name: "Site.Site identified (actual)", type: "date", nullable: true),
                    SiteDateheadsoftermsagreedforecast = table.Column<DateTime>(name: "Site.Date heads of terms agreed (forecast)", type: "date", nullable: true),
                    SiteDateheadsoftermsagreedactual = table.Column<DateTime>(name: "Site.Date heads of terms agreed (actual)", type: "date", nullable: true),
                    SiteIsthereaplanninglongstopdate = table.Column<string>(name: "Site.Is there a planning long stop date?", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SitePlanninglongstopdateactual = table.Column<DateTime>(name: "Site.Planning long stop date (actual)", type: "date", nullable: true),
                    SitePrefundingagreementsideletterrequired = table.Column<string>(name: "Site.Pre-funding agreement side letter required", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SiteDateofprefundingagreementsideletteractual = table.Column<DateTime>(name: "Site.Date of pre-funding agreement side letter (actual)", type: "date", nullable: true),
                    SitePrefundingagreementsideletterlink = table.Column<string>(name: "Site.Pre-funding agreement side letter link", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SiteDateofexchangeforecast = table.Column<DateTime>(name: "Site.Date of exchange (forecast)", type: "date", nullable: true),
                    SiteDateofexchangeactual = table.Column<DateTime>(name: "Site.Date of exchange (actual)", type: "date", nullable: true),
                    SiteDateofcompletionforecast = table.Column<DateTime>(name: "Site.Date of completion (forecast)", type: "date", nullable: true),
                    SiteDateofcompletionactual = table.Column<DateTime>(name: "Site.Date of completion (actual)", type: "date", nullable: true),
                    SiteChargerequired = table.Column<string>(name: "Site.Charge required", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SiteDateofchargeactual = table.Column<DateTime>(name: "Site.Date of charge (actual)", type: "date", nullable: true),
                    SiteSection77required = table.Column<string>(name: "Site.Section 77 required", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SiteDateSection77approvedactual = table.Column<DateTime>(name: "Site.Date Section 77 approved (actual)", type: "date", nullable: true),
                    SiteVendorname = table.Column<string>(name: "Site.Vendor name", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SiteNetcostofacquisition = table.Column<string>(name: "Site.Net cost of acquisition", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SiteAcquisitionVAT = table.Column<string>(name: "Site.Acquisition VAT", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SiteAcquisitioninnameofDCLG = table.Column<string>(name: "Site.Acquisition in name of DCLG", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SiteDCLGleasetoTrustifpurchasedinnameofDCLG = table.Column<string>(name: "Site.DCLG lease to Trust, if purchased in name of DCLG", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SiteDCLGleasetoTrustDateofexchangeactual = table.Column<DateTime>(name: "Site.DCLG lease to Trust : Date of exchange (actual)", type: "date", nullable: true),
                    SiteDCLGleasetoTrustDateofcompletionactual = table.Column<DateTime>(name: "Site.DCLG lease to Trust : Date of completion (actual)", type: "date", nullable: true),
                    SiteLandlordName = table.Column<string>(name: "Site.Landlord Name", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SiteAnnualleasecostrent = table.Column<string>(name: "Site.Annual lease cost (rent)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SiteGreenbookNPVleasecost = table.Column<string>(name: "Site.Green book NPV lease cost", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SitePremiumifapplicable = table.Column<string>(name: "Site.Premium (if applicable)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SiteLeasestartdateactual = table.Column<DateTime>(name: "Site.Lease start date (actual)", type: "date", nullable: true),
                    SiteLeaseenddateactual = table.Column<DateTime>(name: "Site.Lease end date (actual)", type: "date", nullable: true),
                    SiteLengthofleaseyears = table.Column<string>(name: "Site.Length of lease (years)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SiteDecisionmakingframework = table.Column<string>(name: "Site.Decision making framework", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SiteVariationtothelease = table.Column<string>(name: "Site.Variation to the lease", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SiteDetailsofvariationtothelease = table.Column<string>(name: "Site.Details of variation to the lease", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SiteVariationtotheleaseDateofcompletionactual = table.Column<DateTime>(name: "Site.Variation to the lease : Date of completion (actual)", type: "date", nullable: true),
                    SiteRBVrequired = table.Column<string>(name: "Site.RBV required", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SiteRBVstatus = table.Column<string>(name: "Site.RBV status", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SiteDateRBVrequiredactual = table.Column<DateTime>(name: "Site.Date RBV required (actual)", type: "date", nullable: true),
                    SiteDateRBVsubmittedactual = table.Column<DateTime>(name: "Site.Date RBV submitted (actual)", type: "date", nullable: true),
                    SiteRBVvalue = table.Column<string>(name: "Site.RBV value", type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    SiteAmountaboveRBV = table.Column<string>(name: "Site.Amount above RBV", type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    Sitedifference = table.Column<string>(name: "Site.% difference", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SiteHMTpaperrequired = table.Column<string>(name: "Site.HMT paper required", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SiteDateofHMTpaperactual = table.Column<DateTime>(name: "Site.Date of HMT paper (actual)", type: "date", nullable: true),
                    SiteHMTpapercomments = table.Column<string>(name: "Site.HMT paper comments", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SiteOthercomments = table.Column<string>(name: "Site.Other comments", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SiteIAS17required = table.Column<string>(name: "Site.IA S17 required", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SiteLandvalueIAS17inplaceofRBV = table.Column<string>(name: "Site.Land value (IA S17 in place of RBV)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SiteBuildingvalueIAS17inplaceofRBV = table.Column<string>(name: "Site.Building value (IA S17 in place of RBV)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SiteTypeofsitedisposal = table.Column<string>(name: "Site.Type of site disposal", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SiteNameofpurchaser = table.Column<string>(name: "Site.Name of purchaser", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SiteDisposalstatus = table.Column<string>(name: "Site.Disposal status", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SiteSitedisposaldateofexchangeactual = table.Column<DateTime>(name: "Site.Site disposal date of exchange (actual)", type: "date", nullable: true),
                    SiteSitedisposaldateofcompletionactual = table.Column<DateTime>(name: "Site.Site disposal date of completion (actual)", type: "date", nullable: true),
                    SiteNetvalueofdisposal = table.Column<string>(name: "Site.Net value of disposal", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SiteDisposalVAT = table.Column<string>(name: "Site.Disposal VAT", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SiteLegalmanagercomments = table.Column<string>(name: "Site.Legal manager comments", type: "varchar(max)", unicode: false, nullable: true),
                    SitePropertyadvisercomments = table.Column<string>(name: "Site.Property adviser comments", type: "varchar(max)", unicode: false, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "Property_QA",
                columns: table => new
                {
                    Month = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    LocatEDdelivery = table.Column<int>(name: "LocatED delivery", type: "int", nullable: false),
                    LocatEDcommissionreference = table.Column<int>(name: "LocatED commission reference", type: "int", nullable: false),
                    HeadofRegion = table.Column<int>(name: "Head of Region", type: "int", nullable: false),
                    Projectdirector = table.Column<int>(name: "Project director", type: "int", nullable: false),
                    ESFACapitalprojectmanager = table.Column<int>(name: "ESFA Capital project manager", type: "int", nullable: false),
                    ESFAregionalpropertylead = table.Column<int>(name: "ESFA regional property lead", type: "int", nullable: false),
                    ESFApropertylead = table.Column<int>(name: "ESFA property lead", type: "int", nullable: false),
                    LocatEDacquisitionmanager = table.Column<int>(name: "LocatED acquisition manager", type: "int", nullable: false),
                    Legalmanager = table.Column<int>(name: "Legal manager", type: "int", nullable: false),
                    Nameofsite = table.Column<int>(name: "Name of site", type: "int", nullable: false),
                    Addressofsite = table.Column<int>(name: "Address of site", type: "int", nullable: false),
                    Postcodeofsite = table.Column<int>(name: "Postcode of site", type: "int", nullable: false),
                    Tenurehighlight = table.Column<int>(name: "Tenure highlight", type: "int", nullable: false),
                    Pleasestatereasonifmorethanonetenuretypeselected = table.Column<int>(name: "Please state reason if more than one tenure type selected", type: "int", nullable: false),
                    Siteidentifiedforecast = table.Column<int>(name: "Site identified (forecast)", type: "int", nullable: false),
                    Siteidentifiedactual = table.Column<int>(name: "Site identified (actual)", type: "int", nullable: false),
                    Dateofheadsoftermsagreedforecast = table.Column<int>(name: "Date of heads of terms agreed (forecast)", type: "int", nullable: false),
                    Dateofheadsoftermsagreedactual = table.Column<int>(name: "Date of heads of terms agreed (actual)", type: "int", nullable: false),
                    Dateofexchangeforecast = table.Column<int>(name: "Date of exchange (forecast)", type: "int", nullable: false),
                    Dateofexchangeactual = table.Column<int>(name: "Date of exchange (actual)", type: "int", nullable: false),
                    Dateofcompletionforecast = table.Column<int>(name: "Date of completion (forecast)", type: "int", nullable: false)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "RAG",
                columns: table => new
                {
                    p_rid = table.Column<string>(type: "varchar(11)", unicode: false, maxLength: 11, nullable: true),
                    RID = table.Column<string>(type: "varchar(11)", unicode: false, maxLength: 11, nullable: true),
                    RagRatingsPipelineFreeSchoolsJointRiskCategory = table.Column<string>(name: "Rag Ratings.Pipeline Free Schools Joint Risk Category", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    RagRatingsReasonforJointRiskCategory = table.Column<string>(name: "Rag Ratings.Reason for Joint Risk Category", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    RagRatingsOverallRAGrating = table.Column<string>(name: "Rag Ratings.Overall RAG rating", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    RagRatingsOverallRAGsummary = table.Column<string>(name: "Rag Ratings.Overall RAG summary", type: "varchar(5000)", unicode: false, maxLength: 5000, nullable: true),
                    RagRatingsProjectrecommendation = table.Column<string>(name: "Rag Ratings.Project recommendation", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    RagRatingsRSCstocktakerecommendationsummary = table.Column<string>(name: "Rag Ratings.RSC stocktake recommendation summary", type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true),
                    RagRatingsAssessmentcondition1 = table.Column<string>(name: "Rag Ratings.Assessment condition 1", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    RagRatingsHascondition1beenmet = table.Column<string>(name: "Rag Ratings.Has condition 1 been met?", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    RagRatingsAssessmentcondition2 = table.Column<string>(name: "Rag Ratings.Assessment condition 2", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    RagRatingsHascondition2beenmet = table.Column<string>(name: "Rag Ratings.Has condition 2 been met?", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    RagRatingsAssessmentcondition3 = table.Column<string>(name: "Rag Ratings.Assessment condition 3", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    RagRatingsHascondition3beenmet = table.Column<string>(name: "Rag Ratings.Has condition 3 been met?", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    RagRatingsAssessmentcondition4 = table.Column<string>(name: "Rag Ratings.Assessment condition 4", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    RagRatingsHascondition4beenmet = table.Column<string>(name: "Rag Ratings.Has condition 4 been met?", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    RagRatingsAssessmentcondition5 = table.Column<string>(name: "Rag Ratings.Assessment condition 5", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    RagRatingsHascondition5beenmet = table.Column<string>(name: "Rag Ratings.Has condition 5 been met?", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    RagRatingsAssessmentcondition6 = table.Column<string>(name: "Rag Ratings.Assessment condition 6", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    RagRatingsHascondition6beenmet = table.Column<string>(name: "Rag Ratings.Has condition 6 been met?", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    RagRatingsAssessmentcondition7 = table.Column<string>(name: "Rag Ratings.Assessment condition 7", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    RagRatingsHascondition7beenmet = table.Column<string>(name: "Rag Ratings.Has condition 7 been met?", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    RagRatingsAssessmentcondition8 = table.Column<string>(name: "Rag Ratings.Assessment condition 8", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    RagRatingsHascondition8beenmet = table.Column<string>(name: "Rag Ratings.Has condition 8 been met?", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    RagRatingsAllassessmentconditionsmet = table.Column<string>(name: "Rag Ratings.All assessment conditions met", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    RagRatingsPupilrecruitmentRAGrating = table.Column<string>(name: "Rag Ratings.Pupil recruitment RAG rating", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    RagRatingsGovernanceandSuitabilityRAGrating = table.Column<string>(name: "Rag Ratings.Governance and Suitability RAG rating", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    RagRatingsLocalcontextRAGrating = table.Column<string>(name: "Rag Ratings.Local context RAG rating", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    RagRatingsEducationRAG = table.Column<string>(name: "Rag Ratings.Education RAG", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    RagRatingsInclusivityIssue = table.Column<string>(name: "Rag Ratings.Inclusivity Issue", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    RagRatingsSummaryofinclusivityissue = table.Column<string>(name: "Rag Ratings.Summary of inclusivity issue", type: "varchar(999)", unicode: false, maxLength: 999, nullable: true),
                    RagRatingsFinancesRAGrating = table.Column<string>(name: "Rag Ratings.Finances RAG rating", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    RagRatingsFinanceRAGsummary = table.Column<string>(name: "Rag Ratings.Finance RAG summary", type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true),
                    RagRatingsLinktoRiskAssessmentMatrix = table.Column<string>(name: "Rag Ratings.Link to Risk Assessment Matrix", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    RagRatingsOverallROMRAGrating = table.Column<string>(name: "Rag Ratings.Overall ROM RAG rating", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "RAGTEMP_BUDGET",
                columns: table => new
                {
                    FSCode = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PermanentBudgetRAG = table.Column<string>(name: "Permanent Budget RAG", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TemporaryBudgetRAG = table.Column<string>(name: "Temporary Budget RAG", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ConstructionCostsinclpassiveICTPlanningObligationsexclVATCosttodate = table.Column<string>(name: "Construction Costs (incl passive ICT / Planning Obligations) excl VAT Cost to date", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ConstructionCostsinclpassiveICTPlanningObligationsexclVATForecast = table.Column<string>(name: "Construction Costs (incl passive ICT / Planning Obligations) excl VAT Forecast", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PermanentConstructionCostsinclpassiveICTPlanningObligationsexclVATComments = table.Column<string>(name: "Permanent Construction Costs (incl passive ICT / Planning Obligations) excl VAT Comments", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TemporaryConstructionCostsinclpassiveICTPlanningObligationsexclVATCosttoDate = table.Column<string>(name: "Temporary Construction Costs (incl passive ICT / Planning Obligations) excl VAT Cost to Date", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TemporaryConstructionCostsinclpassiveICTPlanningObligationsexclVATForecast = table.Column<string>(name: "Temporary Construction Costs (incl passive ICT / Planning Obligations) excl VAT Forecast", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TemporaryConstructionCostsinclpassiveICTPlanningObligationsexclVATComments = table.Column<string>(name: "Temporary Construction Costs (incl passive ICT / Planning Obligations) excl VAT Comments", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TAFeesInclVATCosttodate = table.Column<string>(name: "TA Fees (Incl VAT) Cost to date", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TAFeesInclVATForecast = table.Column<string>(name: "TA Fees (Incl VAT) Forecast", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PermanentTAFeesInclVAT = table.Column<string>(name: "Permanent TA Fees (Incl VAT)", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TemporaryTAFeesInclVATCosttodate = table.Column<string>(name: "Temporary TA Fees (Incl VAT) Cost to date", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TemporaryTAFeesInclVATForecast = table.Column<string>(name: "Temporary TA Fees (Incl VAT) Forecast", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TemporaryTAFeesInclVATForecastComments = table.Column<string>(name: "Temporary TA Fees (Incl VAT) Forecast Comments", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TASurveysInclVATCosttodate = table.Column<string>(name: "TA Surveys (Incl VAT) Cost to date", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TASurveysInclVATForecast = table.Column<string>(name: "TA Surveys (Incl VAT) Forecast", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PermanentTASurveysInclVATComments = table.Column<string>(name: "Permanent TA Surveys (Incl VAT Comments", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TemporaryTASurveysInclVATCosttodate = table.Column<string>(name: "Temporary TA Surveys (Incl VAT) Cost to date", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TemporaryTASurveysInclVATForecast = table.Column<string>(name: "Temporary TA Surveys (Incl VAT) Forecast", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TemporaryTASurveysInclVATComments = table.Column<string>(name: "Temporary TA Surveys (Incl VAT) Comments ", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    LegalfeesconstructioninclVATCostuptodate = table.Column<string>(name: "Legal fees - construction  (incl VAT) Cost upto date", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    LegalfeesconstructioninclVATForecast = table.Column<string>(name: "Legal fees - construction  (incl VAT) Forecast", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    LegalfeesconstructioninclVATComments = table.Column<string>(name: "Legal fees - construction  (incl VAT) Comments", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TemporaryLegalfeesconstructioninclVATCosttodate = table.Column<string>(name: "Temporary Legal fees - construction  (incl VAT) Cost to date", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TemporaryLegalfeesconstructioninclVATForecast = table.Column<string>(name: "Temporary Legal fees - construction  (incl VAT) Forecast", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TemporaryLegalfeesconstructioninclVATComments = table.Column<string>(name: "Temporary Legal fees - construction  (incl VAT) Comments", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PermanentConstructionsubtotalcomments = table.Column<string>(name: "Permanent Construction sub total comments", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TemporaryConstructionsubtotalcomments = table.Column<string>(name: "Temporary Construction sub total comments", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FFEexclVATCosttodate = table.Column<string>(name: "FF & E (excl VAT) Cost to date", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FFEexclVATForecast = table.Column<string>(name: "FF & E (excl VAT) Forecast", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PermanentFFEexclVATComments = table.Column<string>(name: "Permanent FF & E (excl VAT) Comments", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TemporaryFFEexclVATCosttoDate = table.Column<string>(name: "Temporary FF & E (excl VAT) Cost to Date", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TemporaryFFEexclVATForecast = table.Column<string>(name: "Temporary FF & E (excl VAT) Forecast", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TemporaryFFEexclVATComments = table.Column<string>(name: "Temporary FF & E (excl VAT) Comments", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ICTHardwareEquipmentexclVATCosttodate = table.Column<string>(name: "ICT Hardware Equipment (excl VAT) Cost to date", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ICTHardwareEquipmentexclVATForecast = table.Column<string>(name: "ICT Hardware Equipment (excl VAT) Forecast", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PermanentICTHardwareEquipmentexclVATComments = table.Column<string>(name: "Permanent ICT Hardware Equipment (excl VAT) Comments", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TemporaryICTHardwareEquipmentexclVATCosttodate = table.Column<string>(name: "Temporary  ICT Hardware Equipment (excl VAT) Cost to date", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TemporaryICTHardwareEquipmentexclVATForecast = table.Column<string>(name: "Temporary  ICT Hardware Equipment (excl VAT) Forecast", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TemporaryICTHardwareEquipmentexclVATComments = table.Column<string>(name: "Temporary  ICT Hardware Equipment (excl VAT) Comments", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ICTActivesexclVATCosttodate = table.Column<string>(name: "ICT Actives (excl VAT) Cost to date", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ICTActivesexclVATForecast = table.Column<string>(name: "ICT Actives (excl VAT) Forecast", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PermanentICTActivesexclVATComments = table.Column<string>(name: "Permanent  ICT Actives (excl VAT) Comments", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TemporaryICTActivesexclVATCosttodate = table.Column<string>(name: "Temporary  ICT Actives (excl VAT) Cost to date", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TemporaryICTActivesexclVATForecast = table.Column<string>(name: "Temporary ICT Actives (excl VAT) Forecast", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TemporaryICTActivesexclVATComments = table.Column<string>(name: "Temporary  ICT Actives (excl VAT) Comments", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ICTBroadbandexclVATCosttodate = table.Column<string>(name: "ICT Broadband (excl VAT) Cost to date", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ICTBroadbandexclVATForecast = table.Column<string>(name: "ICT Broadband (excl VAT) Forecast", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PermanentICTBroadbandexclVATComments = table.Column<string>(name: "Permanent  ICT Broadband (excl VAT) Comments", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TemporaryICTBroadbandexclVATCosttodate = table.Column<string>(name: "Temporary  ICT Broadband (excl VAT) Cost to date", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TemporaryICTBroadbandexclVATForecast = table.Column<string>(name: "Temporary  ICT Broadband (excl VAT) Forecast", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TemporaryICTBroadbandexclVATComments = table.Column<string>(name: "Temporary  ICT Broadband (excl VAT) Comments", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PermanentICTDecantCosttodate = table.Column<string>(name: "Permanent ICT Decant Cost to date", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PermanentICTDecantexclVATforecast = table.Column<string>(name: "Permanent ICT Decant (excl VAT) forecast", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PermanentICTDecantexclVATComments = table.Column<string>(name: "Permanent ICT Decant (excl VAT) Comments", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TemporaryICTDecantexclVATCosttodate = table.Column<string>(name: "Temporary  ICT Decant (excl VAT) Cost to date", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TemporaryICTDecantexclVATForecast = table.Column<string>(name: "Temporary  ICT Decant (excl VAT) Forecast", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TemporaryICTDecantexclVATComments = table.Column<string>(name: "Temporary  ICT Decant (excl VAT) Comments", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "RAGTEMP_RATINGS",
                columns: table => new
                {
                    FSCode = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OverallRAG = table.Column<string>(name: "Overall RAG", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TAOverallSiteRAG = table.Column<string>(name: "TA Overall Site RAG", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TAOverallSiteRAGComments = table.Column<string>(name: "TA Overall Site RAG Comments", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TAPermanentSiteRAG = table.Column<string>(name: "TA Permanent Site RAG", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TAPermanentSiteRAGComments = table.Column<string>(name: "TA Permanent Site RAG Comments", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TATemporarySiteRAG = table.Column<string>(name: "TATemporary Site RAG", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TATemporarySiteRAGComments = table.Column<string>(name: "TATemporary Site RAG Comments", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TASeptemberSiteRAG = table.Column<string>(name: "TA September Site RAG", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TASeptemberSiteRAGComments = table.Column<string>(name: "TA September Site RAG Comments", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    AccidentonsiteinthismonthreportedtoEFA = table.Column<string>(name: "Accident on site in this month reported to EFA", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "Regional Framework",
                columns: table => new
                {
                    Localauthority = table.Column<string>(name: "Local authority", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    HighValueBandLot = table.Column<string>(name: "High Value Band Lot", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    MediumValueBandLot = table.Column<string>(name: "Medium Value Band Lot", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    LowValueBandLot = table.Column<string>(name: "Low Value Band Lot", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    RSCRegions = table.Column<string>(name: "RSC Regions", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "Report_Server_Url",
                columns: table => new
                {
                    id = table.Column<int>(type: "int", nullable: false),
                    report_name = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    servername = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: false),
                    url = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: false)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "Tally",
                columns: table => new
                {
                    ID = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "Technical_QA",
                columns: table => new
                {
                    Month = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    GIFA = table.Column<int>(type: "int", nullable: false),
                    TypeofWork = table.Column<int>(name: "Type of Work", type: "int", nullable: false),
                    ContractBudgetValue = table.Column<int>(name: "Contract Budget Value £", type: "int", nullable: false),
                    ContractingParty = table.Column<int>(name: "Contracting Party", type: "int", nullable: false),
                    BIM = table.Column<int>(type: "int", nullable: false),
                    DeliveryParty = table.Column<int>(name: "Delivery Party", type: "int", nullable: false),
                    FeasibiltyReportStartDate = table.Column<int>(name: "Feasibilty Report Start Date", type: "int", nullable: false),
                    FeasibilityReportApproved = table.Column<int>(name: "Feasibility Report Approved", type: "int", nullable: false),
                    ContractProcurementStatus = table.Column<int>(name: "Contract Procurement Status", type: "int", nullable: false),
                    ProcurementStartActual = table.Column<int>(name: "Procurement Start Actual", type: "int", nullable: false),
                    ProcurementRoute = table.Column<int>(name: "Procurement Route", type: "int", nullable: false),
                    Contractor = table.Column<int>(type: "int", nullable: false),
                    ContractAwardValue = table.Column<int>(name: "Contract Award Value £", type: "int", nullable: false),
                    EnterintoMainContractActual = table.Column<int>(name: "Enter into Main Contract Actual", type: "int", nullable: false),
                    FinalContractValue = table.Column<int>(name: "Final Contract Value £", type: "int", nullable: false),
                    PCCertificateIssuedActual = table.Column<int>(name: "PC Certificate Issued Actual", type: "int", nullable: false),
                    COMGDIssued = table.Column<int>(name: "COMGD Issued", type: "int", nullable: false)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "Term_Visits",
                columns: table => new
                {
                    p_rid = table.Column<string>(type: "varchar(11)", unicode: false, maxLength: 11, nullable: true),
                    RID = table.Column<string>(type: "varchar(11)", unicode: false, maxLength: 11, nullable: true),
                    TermVisitsSchoolTermVisit = table.Column<string>(name: "Term Visits.School Term Visit", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    Visits = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TermVisitsLinkOfficerfirsttermvisit = table.Column<string>(name: "Term Visits.Link Officer first term visit", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TermVisitsLinkofficerfirsttermvisitreport = table.Column<string>(name: "Term Visits.Link officer first term visit – report", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TermVisitsLinkofficerfirsttermvisitoutcome = table.Column<string>(name: "Term Visits.Link officer first term visit - outcome", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TermVisitsLinkofficerfirsttermvisitoutcometypeofconcern = table.Column<string>(name: "Term Visits.Link officer first term visit outcome - type of concern", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TermVisitsNameofEducationAdviser = table.Column<string>(name: "Term Visits.Name of Education Adviser", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TermVisitsNameofDfEofficial = table.Column<string>(name: "Term Visits.Name of DfE official", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TermVisitsDateofVisit = table.Column<DateTime>(name: "Term Visits.Date of Visit", type: "date", nullable: true),
                    TermVisitsVisitRating = table.Column<string>(name: "Term Visits.Visit Rating", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TermVisitsVisitReport = table.Column<string>(name: "Term Visits.Visit Report", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TermVisitsVisitSummary = table.Column<string>(name: "Term Visits.Visit Summary", type: "varchar(400)", unicode: false, maxLength: 400, nullable: true),
                    TermVisitsIsactionplanrequested = table.Column<string>(name: "Term Visits.Is action plan requested?", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TermVisitsActionplanduedate = table.Column<DateTime>(name: "Term Visits.Action plan due date", type: "date", nullable: true),
                    TermVisitsActionplanreceived = table.Column<string>(name: "Term Visits.Action plan received", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TermVisitsActionplan = table.Column<string>(name: "Term Visits.Action plan", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TermVisitsVisitfollowup = table.Column<string>(name: "Term Visits.Visit follow up", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TermVisitsDateoffollowup = table.Column<DateTime>(name: "Term Visits.Date of follow up", type: "date", nullable: true),
                    TermVisitsFollowupvisitrating = table.Column<string>(name: "Term Visits.Follow-up visit rating", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TermVisitsNextvisitdate = table.Column<DateTime>(name: "Term Visits.Next visit date", type: "date", nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "Term_Visits_UTCs",
                columns: table => new
                {
                    p_rid = table.Column<string>(type: "varchar(11)", unicode: false, maxLength: 11, nullable: true),
                    RID = table.Column<string>(type: "varchar(11)", unicode: false, maxLength: 11, nullable: true),
                    TermVisitsUTCSchooltermVisit = table.Column<string>(name: "Term Visits UTC.School term Visit", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TermVisitsUTCPostOfstedUTCVisitNameofEducationAdviser = table.Column<string>(name: "Term Visits UTC.Post-Ofsted UTC Visit: Name of Education Adviser", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TermVisitsUTCPostOfstedUTCVisitNameofDfEofficial = table.Column<string>(name: "Term Visits UTC.Post-Ofsted UTC Visit: Name of DfE official", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TermVisitsUTCPostOfstedUTCVisitDateofVisit = table.Column<DateTime>(name: "Term Visits UTC.Post-Ofsted UTC Visit: Date of Visit", type: "date", nullable: true),
                    TermVisitsUTCPostOfstedUTCVisitVisitRating = table.Column<string>(name: "Term Visits UTC.Post-Ofsted UTC Visit: Visit Rating", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TermVisitsUTCPostOfstedUTCVisitReportlink = table.Column<string>(name: "Term Visits UTC.Post-Ofsted UTC Visit: Report link", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TermVisitsUTCPostOfstedUTCVisitSummary = table.Column<string>(name: "Term Visits UTC.Post-Ofsted UTC Visit: Summary", type: "varchar(max)", unicode: false, nullable: true),
                    TermVisitsUTCPostOfstedUTCVisitNextvisitdate = table.Column<DateTime>(name: "Term Visits UTC.Post-Ofsted UTC Visit: Next visit date", type: "date", nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "Trust",
                columns: table => new
                {
                    p_rid = table.Column<string>(type: "varchar(11)", unicode: false, maxLength: 11, nullable: true),
                    RID = table.Column<string>(type: "varchar(11)", unicode: false, maxLength: 11, nullable: true),
                    Trustref = table.Column<string>(name: "Trust ref", type: "varchar(7)", unicode: false, maxLength: 7, nullable: true),
                    TrustsTrustref = table.Column<string>(name: "Trusts.Trust ref", type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    TrustsTrustname = table.Column<string>(name: "Trusts.Trust name", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TrustsTrusttype = table.Column<string>(name: "Trusts.Trust type", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TrustsLeadsponsorid = table.Column<string>(name: "Trusts.Lead sponsor id", type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    LeadSponsor = table.Column<string>(name: "Lead Sponsor", type: "varchar(7)", unicode: false, maxLength: 7, nullable: true),
                    TrustsLeadsponsorname = table.Column<string>(name: "Trusts.Lead sponsor name", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "User",
                schema: "mfsp",
                columns: table => new
                {
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Email = table.Column<string>(type: "nvarchar(80)", maxLength: 80, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_User", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "WFA",
                columns: table => new
                {
                    p_rid = table.Column<string>(type: "varchar(11)", unicode: false, maxLength: 11, nullable: true),
                    RID = table.Column<string>(type: "varchar(11)", unicode: false, maxLength: 11, nullable: true),
                    WorksFundingAgreementsWFAID = table.Column<string>(name: "Works Funding Agreements.WFA ID", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    WorksFundingAgreementsWorkFundingAgreementissueddate = table.Column<DateTime>(name: "Works Funding Agreements.Work Funding Agreement issued date", type: "date", nullable: true),
                    WorksFundingAgreementsWorkFundingAgreementtotalvalue = table.Column<string>(name: "Works Funding Agreements.Work Funding Agreement total value", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "UserProject",
                schema: "mfsp",
                columns: table => new
                {
                    UserId = table.Column<int>(type: "int", nullable: false),
                    Rid = table.Column<string>(type: "varchar(11)", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_UserProject", x => new { x.Rid, x.UserId });
                    table.ForeignKey(
                        name: "FK_UserProject_KPI_Rid",
                        column: x => x.Rid,
                        principalTable: "KPI",
                        principalColumn: "RID",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_UserProject_User_UserId",
                        column: x => x.UserId,
                        principalSchema: "mfsp",
                        principalTable: "User",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateIndex(
                name: "IX_User_Email",
                schema: "mfsp",
                table: "User",
                column: "Email",
                unique: true,
                filter: "[Email] IS NOT NULL");

            migrationBuilder.CreateIndex(
                name: "IX_UserProject_UserId",
                schema: "mfsp",
                table: "UserProject",
                column: "UserId");
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "Basic_Need");

            migrationBuilder.DropTable(
                name: "BR");

            migrationBuilder.DropTable(
                name: "BS");

            migrationBuilder.DropTable(
                name: "constructData");

            migrationBuilder.DropTable(
                name: "Construction");

            migrationBuilder.DropTable(
                name: "Contracts");

            migrationBuilder.DropTable(
                name: "FAL");

            migrationBuilder.DropTable(
                name: "FS_KIM");

            migrationBuilder.DropTable(
                name: "KAI");

            migrationBuilder.DropTable(
                name: "LA_Data");

            migrationBuilder.DropTable(
                name: "Milestones");

            migrationBuilder.DropTable(
                name: "Ofsted_Archive");

            migrationBuilder.DropTable(
                name: "Ofsted_FSG");

            migrationBuilder.DropTable(
                name: "Opens");

            migrationBuilder.DropTable(
                name: "PDFD");

            migrationBuilder.DropTable(
                name: "PDFD_Archive");

            migrationBuilder.DropTable(
                name: "PDGL");

            migrationBuilder.DropTable(
                name: "Perf_FSG");

            migrationBuilder.DropTable(
                name: "Perf_FSG_Local");

            migrationBuilder.DropTable(
                name: "Planning");

            migrationBuilder.DropTable(
                name: "Planning_QA");

            migrationBuilder.DropTable(
                name: "PO");

            migrationBuilder.DropTable(
                name: "PORF");

            migrationBuilder.DropTable(
                name: "PR");

            migrationBuilder.DropTable(
                name: "Property");

            migrationBuilder.DropTable(
                name: "Property_QA");

            migrationBuilder.DropTable(
                name: "RAG");

            migrationBuilder.DropTable(
                name: "RAGTEMP_BUDGET");

            migrationBuilder.DropTable(
                name: "RAGTEMP_RATINGS");

            migrationBuilder.DropTable(
                name: "Regional Framework");

            migrationBuilder.DropTable(
                name: "Report_Server_Url");

            migrationBuilder.DropTable(
                name: "Tally");

            migrationBuilder.DropTable(
                name: "Technical_QA");

            migrationBuilder.DropTable(
                name: "Term_Visits");

            migrationBuilder.DropTable(
                name: "Term_Visits_UTCs");

            migrationBuilder.DropTable(
                name: "Trust");

            migrationBuilder.DropTable(
                name: "UserProject",
                schema: "mfsp");

            migrationBuilder.DropTable(
                name: "WFA");

            migrationBuilder.DropTable(
                name: "KPI");

            migrationBuilder.DropTable(
                name: "User",
                schema: "mfsp");
        }
    }
}
