# Stage 1
ARG ASPNET_IMAGE_TAG=6.0-bullseye-slim
ARG DOTNET_SDK_IMAGE_TAG=6.0

FROM mcr.microsoft.com/dotnet/sdk:${DOTNET_SDK_IMAGE_TAG} AS publish

WORKDIR /build

ENV DEBIAN_FRONTEND=noninteractive

COPY Dfe.ManageFreeSchoolProjects/. .

RUN dotnet restore Dfe.ManageFreeSchoolProjects.API
RUN dotnet build Dfe.ManageFreeSchoolProjects.API -c Release

RUN dotnet new tool-manifest
RUN dotnet tool install dotnet-ef

RUN mkdir -p /app/SQL
RUN dotnet ef migrations script --output /app/SQL/DbMigrationScript.sql --idempotent -p /build/Dfe.ManageFreeSchoolProjects.Data
RUN touch /app/SQL/DbMigrationScript.sql

RUN dotnet publish Dfe.ManageFreeSchoolProjects.API -c Release -o /app --no-build

COPY ./script/api-docker-entrypoint.sh /app/docker-entrypoint.sh

# Stage 3 - Final
FROM "mcr.microsoft.com/dotnet/aspnet:${ASPNET_IMAGE_TAG}" AS final

RUN apt-get update
RUN apt-get install unixodbc curl gnupg jq -y
RUN curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add -
RUN curl https://packages.microsoft.com/config/debian/11/prod.list | tee /etc/apt/sources.list.d/msprod.list
RUN apt-get update
RUN ACCEPT_EULA=Y apt-get install msodbcsql18 mssql-tools18 -y

COPY --from=publish /app /app
WORKDIR /app
RUN chmod +x ./docker-entrypoint.sh

EXPOSE 80/tcp
